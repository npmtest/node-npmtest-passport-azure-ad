{"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_passport_azure_ad */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/lib.npmtest_passport_azure_ad.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/lib.npmtest_passport_azure_ad.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":62}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":68}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_passport_azure_ad */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_passport_azure_ad = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_passport_azure_ad = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":61}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":75},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-passport-azure-ad && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_passport_azure_ad */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_passport_azure_ad","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_passport_azure_ad.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_passport_azure_ad.rollup.js'] =","            local.assetsDict['/assets.npmtest_passport_azure_ad.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_passport_azure_ad.__dirname + '/lib.npmtest_passport_azure_ad.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/index.js","s":{"1":1,"2":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":29,"column":0},"end":{"line":29,"column":60}},"2":{"start":{"line":30,"column":0},"end":{"line":30,"column":56}}},"branchMap":{},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the 'Software'), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","","'use strict';","","/**"," * Export BearerStrategy and OIDCStrategy."," */","module.exports.BearerStrategy = require('./bearerstrategy');","module.exports.OIDCStrategy = require('./oidcstrategy');",""],"l":{"29":1,"30":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/bearerstrategy.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/bearerstrategy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":1,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1,"156":0,"157":0,"158":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"Strategy","line":173,"loc":{"start":{"line":173,"column":0},"end":{"line":173,"column":37}}},"2":{"name":"jwtVerifyFunc","line":275,"loc":{"start":{"line":275,"column":31},"end":{"line":275,"column":101}}},"3":{"name":"authenticateStrategy","line":324,"loc":{"start":{"line":324,"column":34},"end":{"line":324,"column":69}}},"4":{"name":"verified","line":445,"loc":{"start":{"line":445,"column":6},"end":{"line":445,"column":41}}},"5":{"name":"(anonymous_5)","line":473,"loc":{"start":{"line":473,"column":34},"end":{"line":473,"column":57}}},"6":{"name":"(anonymous_6)","line":493,"loc":{"start":{"line":493,"column":33},"end":{"line":493,"column":51}}}},"statementMap":{"1":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}},"2":{"start":{"line":28,"column":0},"end":{"line":28,"column":46}},"3":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}},"4":{"start":{"line":30,"column":0},"end":{"line":30,"column":37}},"5":{"start":{"line":31,"column":0},"end":{"line":31,"column":29}},"6":{"start":{"line":33,"column":0},"end":{"line":33,"column":39}},"7":{"start":{"line":34,"column":0},"end":{"line":34,"column":41}},"8":{"start":{"line":35,"column":0},"end":{"line":35,"column":38}},"9":{"start":{"line":36,"column":0},"end":{"line":36,"column":48}},"10":{"start":{"line":37,"column":0},"end":{"line":37,"column":43}},"11":{"start":{"line":38,"column":0},"end":{"line":38,"column":42}},"12":{"start":{"line":40,"column":0},"end":{"line":40,"column":48}},"13":{"start":{"line":41,"column":0},"end":{"line":41,"column":98}},"14":{"start":{"line":42,"column":0},"end":{"line":42,"column":17}},"15":{"start":{"line":44,"column":0},"end":{"line":44,"column":28}},"16":{"start":{"line":173,"column":0},"end":{"line":271,"column":1}},"17":{"start":{"line":174,"column":2},"end":{"line":174,"column":31}},"18":{"start":{"line":175,"column":2},"end":{"line":175,"column":29}},"19":{"start":{"line":177,"column":2},"end":{"line":178,"column":74}},"20":{"start":{"line":178,"column":4},"end":{"line":178,"column":74}},"21":{"start":{"line":179,"column":2},"end":{"line":180,"column":101}},"22":{"start":{"line":180,"column":4},"end":{"line":180,"column":101}},"23":{"start":{"line":182,"column":2},"end":{"line":182,"column":26}},"24":{"start":{"line":183,"column":2},"end":{"line":183,"column":26}},"25":{"start":{"line":190,"column":2},"end":{"line":191,"column":60}},"26":{"start":{"line":191,"column":4},"end":{"line":191,"column":60}},"27":{"start":{"line":192,"column":2},"end":{"line":193,"column":45}},"28":{"start":{"line":193,"column":4},"end":{"line":193,"column":45}},"29":{"start":{"line":196,"column":2},"end":{"line":197,"column":38}},"30":{"start":{"line":197,"column":4},"end":{"line":197,"column":38}},"31":{"start":{"line":200,"column":2},"end":{"line":201,"column":34}},"32":{"start":{"line":201,"column":4},"end":{"line":201,"column":34}},"33":{"start":{"line":204,"column":2},"end":{"line":205,"column":47}},"34":{"start":{"line":205,"column":4},"end":{"line":205,"column":47}},"35":{"start":{"line":209,"column":2},"end":{"line":212,"column":69}},"36":{"start":{"line":210,"column":4},"end":{"line":210,"column":42}},"37":{"start":{"line":211,"column":7},"end":{"line":212,"column":69}},"38":{"start":{"line":212,"column":4},"end":{"line":212,"column":69}},"39":{"start":{"line":215,"column":2},"end":{"line":216,"column":26}},"40":{"start":{"line":216,"column":4},"end":{"line":216,"column":26}},"41":{"start":{"line":219,"column":2},"end":{"line":220,"column":26}},"42":{"start":{"line":220,"column":4},"end":{"line":220,"column":26}},"43":{"start":{"line":221,"column":2},"end":{"line":222,"column":26}},"44":{"start":{"line":222,"column":4},"end":{"line":222,"column":26}},"45":{"start":{"line":223,"column":2},"end":{"line":224,"column":38}},"46":{"start":{"line":224,"column":4},"end":{"line":224,"column":38}},"47":{"start":{"line":231,"column":2},"end":{"line":232,"column":79}},"48":{"start":{"line":232,"column":4},"end":{"line":232,"column":79}},"49":{"start":{"line":235,"column":2},"end":{"line":236,"column":112}},"50":{"start":{"line":236,"column":4},"end":{"line":236,"column":112}},"51":{"start":{"line":243,"column":2},"end":{"line":243,"column":83}},"52":{"start":{"line":246,"column":2},"end":{"line":247,"column":167}},"53":{"start":{"line":247,"column":4},"end":{"line":247,"column":167}},"54":{"start":{"line":250,"column":2},"end":{"line":251,"column":75}},"55":{"start":{"line":251,"column":4},"end":{"line":251,"column":75}},"56":{"start":{"line":260,"column":2},"end":{"line":265,"column":3}},"57":{"start":{"line":261,"column":4},"end":{"line":262,"column":79}},"58":{"start":{"line":262,"column":6},"end":{"line":262,"column":79}},"59":{"start":{"line":263,"column":4},"end":{"line":264,"column":181}},"60":{"start":{"line":264,"column":6},"end":{"line":264,"column":181}},"61":{"start":{"line":268,"column":2},"end":{"line":268,"column":76}},"62":{"start":{"line":268,"column":30},"end":{"line":268,"column":74}},"63":{"start":{"line":270,"column":2},"end":{"line":270,"column":102}},"64":{"start":{"line":273,"column":0},"end":{"line":273,"column":43}},"65":{"start":{"line":275,"column":0},"end":{"line":318,"column":2}},"66":{"start":{"line":276,"column":2},"end":{"line":276,"column":20}},"67":{"start":{"line":278,"column":2},"end":{"line":278,"column":36}},"68":{"start":{"line":279,"column":2},"end":{"line":279,"column":20}},"69":{"start":{"line":281,"column":2},"end":{"line":283,"column":3}},"70":{"start":{"line":282,"column":4},"end":{"line":282,"column":84}},"71":{"start":{"line":285,"column":2},"end":{"line":285,"column":73}},"72":{"start":{"line":290,"column":2},"end":{"line":296,"column":3}},"73":{"start":{"line":291,"column":4},"end":{"line":291,"column":58}},"74":{"start":{"line":292,"column":9},"end":{"line":296,"column":3}},"75":{"start":{"line":293,"column":4},"end":{"line":293,"column":58}},"76":{"start":{"line":295,"column":4},"end":{"line":295,"column":115}},"77":{"start":{"line":298,"column":2},"end":{"line":298,"column":42}},"78":{"start":{"line":300,"column":2},"end":{"line":317,"column":5}},"79":{"start":{"line":301,"column":4},"end":{"line":306,"column":5}},"80":{"start":{"line":302,"column":6},"end":{"line":305,"column":91}},"81":{"start":{"line":303,"column":8},"end":{"line":303,"column":45}},"82":{"start":{"line":305,"column":8},"end":{"line":305,"column":91}},"83":{"start":{"line":308,"column":4},"end":{"line":308,"column":80}},"84":{"start":{"line":310,"column":4},"end":{"line":316,"column":5}},"85":{"start":{"line":311,"column":6},"end":{"line":311,"column":84}},"86":{"start":{"line":312,"column":6},"end":{"line":312,"column":52}},"87":{"start":{"line":314,"column":6},"end":{"line":314,"column":88}},"88":{"start":{"line":315,"column":6},"end":{"line":315,"column":47}},"89":{"start":{"line":324,"column":0},"end":{"line":471,"column":2}},"90":{"start":{"line":325,"column":2},"end":{"line":325,"column":20}},"91":{"start":{"line":326,"column":2},"end":{"line":326,"column":18}},"92":{"start":{"line":327,"column":2},"end":{"line":327,"column":29}},"93":{"start":{"line":355,"column":2},"end":{"line":470,"column":4}},"94":{"start":{"line":359,"column":6},"end":{"line":361,"column":101}},"95":{"start":{"line":363,"column":6},"end":{"line":364,"column":88}},"96":{"start":{"line":364,"column":8},"end":{"line":364,"column":88}},"97":{"start":{"line":366,"column":6},"end":{"line":366,"column":43}},"98":{"start":{"line":368,"column":6},"end":{"line":368,"column":80}},"99":{"start":{"line":370,"column":6},"end":{"line":370,"column":32}},"100":{"start":{"line":375,"column":6},"end":{"line":375,"column":45}},"101":{"start":{"line":380,"column":6},"end":{"line":380,"column":33}},"102":{"start":{"line":381,"column":6},"end":{"line":381,"column":101}},"103":{"start":{"line":384,"column":6},"end":{"line":387,"column":56}},"104":{"start":{"line":385,"column":8},"end":{"line":385,"column":56}},"105":{"start":{"line":387,"column":8},"end":{"line":387,"column":56}},"106":{"start":{"line":390,"column":6},"end":{"line":390,"column":62}},"107":{"start":{"line":393,"column":6},"end":{"line":393,"column":58}},"108":{"start":{"line":394,"column":6},"end":{"line":394,"column":70}},"109":{"start":{"line":395,"column":6},"end":{"line":395,"column":94}},"110":{"start":{"line":396,"column":6},"end":{"line":396,"column":74}},"111":{"start":{"line":399,"column":6},"end":{"line":399,"column":60}},"112":{"start":{"line":401,"column":6},"end":{"line":401,"column":115}},"113":{"start":{"line":403,"column":6},"end":{"line":403,"column":20}},"114":{"start":{"line":416,"column":6},"end":{"line":416,"column":16}},"115":{"start":{"line":420,"column":6},"end":{"line":421,"column":149}},"116":{"start":{"line":421,"column":8},"end":{"line":421,"column":149}},"117":{"start":{"line":423,"column":6},"end":{"line":432,"column":7}},"118":{"start":{"line":424,"column":8},"end":{"line":424,"column":67}},"119":{"start":{"line":425,"column":8},"end":{"line":431,"column":9}},"120":{"start":{"line":426,"column":12},"end":{"line":426,"column":39}},"121":{"start":{"line":427,"column":12},"end":{"line":430,"column":105}},"122":{"start":{"line":428,"column":14},"end":{"line":428,"column":114}},"123":{"start":{"line":430,"column":14},"end":{"line":430,"column":105}},"124":{"start":{"line":434,"column":6},"end":{"line":440,"column":7}},"125":{"start":{"line":435,"column":8},"end":{"line":436,"column":135}},"126":{"start":{"line":436,"column":10},"end":{"line":436,"column":135}},"127":{"start":{"line":437,"column":8},"end":{"line":437,"column":38}},"128":{"start":{"line":438,"column":8},"end":{"line":439,"column":108}},"129":{"start":{"line":439,"column":10},"end":{"line":439,"column":108}},"130":{"start":{"line":442,"column":6},"end":{"line":443,"column":54}},"131":{"start":{"line":443,"column":8},"end":{"line":443,"column":54}},"132":{"start":{"line":445,"column":6},"end":{"line":459,"column":7}},"133":{"start":{"line":446,"column":8},"end":{"line":447,"column":33}},"134":{"start":{"line":447,"column":10},"end":{"line":447,"column":33}},"135":{"start":{"line":449,"column":8},"end":{"line":456,"column":9}},"136":{"start":{"line":450,"column":10},"end":{"line":450,"column":51}},"137":{"start":{"line":451,"column":10},"end":{"line":454,"column":74}},"138":{"start":{"line":452,"column":12},"end":{"line":452,"column":58}},"139":{"start":{"line":453,"column":15},"end":{"line":454,"column":74}},"140":{"start":{"line":454,"column":12},"end":{"line":454,"column":74}},"141":{"start":{"line":455,"column":10},"end":{"line":455,"column":47}},"142":{"start":{"line":458,"column":8},"end":{"line":458,"column":40}},"143":{"start":{"line":461,"column":6},"end":{"line":461,"column":86}},"144":{"start":{"line":465,"column":6},"end":{"line":467,"column":7}},"145":{"start":{"line":466,"column":8},"end":{"line":466,"column":42}},"146":{"start":{"line":468,"column":6},"end":{"line":468,"column":18}},"147":{"start":{"line":473,"column":0},"end":{"line":486,"column":2}},"148":{"start":{"line":474,"column":2},"end":{"line":474,"column":20}},"149":{"start":{"line":475,"column":2},"end":{"line":475,"column":73}},"150":{"start":{"line":478,"column":2},"end":{"line":485,"column":20}},"151":{"start":{"line":479,"column":4},"end":{"line":484,"column":7}},"152":{"start":{"line":480,"column":6},"end":{"line":482,"column":7}},"153":{"start":{"line":481,"column":8},"end":{"line":481,"column":77}},"154":{"start":{"line":483,"column":6},"end":{"line":483,"column":43}},"155":{"start":{"line":493,"column":0},"end":{"line":496,"column":2}},"156":{"start":{"line":494,"column":2},"end":{"line":494,"column":55}},"157":{"start":{"line":495,"column":2},"end":{"line":495,"column":28}},"158":{"start":{"line":498,"column":0},"end":{"line":498,"column":26}}},"branchMap":{"1":{"line":177,"type":"if","locations":[{"start":{"line":177,"column":2},"end":{"line":177,"column":2}},{"start":{"line":177,"column":2},"end":{"line":177,"column":2}}]},"2":{"line":179,"type":"if","locations":[{"start":{"line":179,"column":2},"end":{"line":179,"column":2}},{"start":{"line":179,"column":2},"end":{"line":179,"column":2}}]},"3":{"line":179,"type":"binary-expr","locations":[{"start":{"line":179,"column":6},"end":{"line":179,"column":15}},{"start":{"line":179,"column":19},"end":{"line":179,"column":49}}]},"4":{"line":190,"type":"if","locations":[{"start":{"line":190,"column":2},"end":{"line":190,"column":2}},{"start":{"line":190,"column":2},"end":{"line":190,"column":2}}]},"5":{"line":190,"type":"binary-expr","locations":[{"start":{"line":190,"column":6},"end":{"line":190,"column":23}},{"start":{"line":190,"column":28},"end":{"line":190,"column":65}},{"start":{"line":190,"column":69},"end":{"line":190,"column":91}},{"start":{"line":190,"column":95},"end":{"line":190,"column":122}}]},"6":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":2},"end":{"line":192,"column":2}},{"start":{"line":192,"column":2},"end":{"line":192,"column":2}}]},"7":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"8":{"line":200,"type":"if","locations":[{"start":{"line":200,"column":2},"end":{"line":200,"column":2}},{"start":{"line":200,"column":2},"end":{"line":200,"column":2}}]},"9":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":2},"end":{"line":204,"column":2}},{"start":{"line":204,"column":2},"end":{"line":204,"column":2}}]},"10":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":2},"end":{"line":209,"column":2}},{"start":{"line":209,"column":2},"end":{"line":209,"column":2}}]},"11":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":6},"end":{"line":209,"column":22}},{"start":{"line":209,"column":26},"end":{"line":209,"column":62}}]},"12":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":7},"end":{"line":211,"column":7}},{"start":{"line":211,"column":7},"end":{"line":211,"column":7}}]},"13":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":11},"end":{"line":211,"column":28}},{"start":{"line":211,"column":32},"end":{"line":211,"column":64}},{"start":{"line":211,"column":68},"end":{"line":211,"column":88}}]},"14":{"line":215,"type":"if","locations":[{"start":{"line":215,"column":2},"end":{"line":215,"column":2}},{"start":{"line":215,"column":2},"end":{"line":215,"column":2}}]},"15":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"16":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"17":{"line":221,"type":"binary-expr","locations":[{"start":{"line":221,"column":6},"end":{"line":221,"column":20}},{"start":{"line":221,"column":24},"end":{"line":221,"column":53}},{"start":{"line":221,"column":57},"end":{"line":221,"column":84}}]},"18":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]},"19":{"line":223,"type":"binary-expr","locations":[{"start":{"line":223,"column":6},"end":{"line":223,"column":20}},{"start":{"line":223,"column":24},"end":{"line":223,"column":54}}]},"20":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"21":{"line":231,"type":"binary-expr","locations":[{"start":{"line":231,"column":6},"end":{"line":231,"column":23}},{"start":{"line":231,"column":27},"end":{"line":231,"column":50}}]},"22":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":2},"end":{"line":235,"column":2}},{"start":{"line":235,"column":2},"end":{"line":235,"column":2}}]},"23":{"line":235,"type":"binary-expr","locations":[{"start":{"line":235,"column":6},"end":{"line":235,"column":31}},{"start":{"line":235,"column":35},"end":{"line":235,"column":85}}]},"24":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":2},"end":{"line":246,"column":2}},{"start":{"line":246,"column":2},"end":{"line":246,"column":2}}]},"25":{"line":246,"type":"binary-expr","locations":[{"start":{"line":246,"column":6},"end":{"line":246,"column":31}},{"start":{"line":246,"column":35},"end":{"line":246,"column":57}},{"start":{"line":246,"column":61},"end":{"line":246,"column":76}}]},"26":{"line":250,"type":"if","locations":[{"start":{"line":250,"column":2},"end":{"line":250,"column":2}},{"start":{"line":250,"column":2},"end":{"line":250,"column":2}}]},"27":{"line":260,"type":"if","locations":[{"start":{"line":260,"column":2},"end":{"line":260,"column":2}},{"start":{"line":260,"column":2},"end":{"line":260,"column":2}}]},"28":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]},"29":{"line":261,"type":"binary-expr","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":27}},{"start":{"line":261,"column":31},"end":{"line":261,"column":87}}]},"30":{"line":263,"type":"if","locations":[{"start":{"line":263,"column":4},"end":{"line":263,"column":4}},{"start":{"line":263,"column":4},"end":{"line":263,"column":4}}]},"31":{"line":268,"type":"if","locations":[{"start":{"line":268,"column":2},"end":{"line":268,"column":2}},{"start":{"line":268,"column":2},"end":{"line":268,"column":2}}]},"32":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":2},"end":{"line":281,"column":2}},{"start":{"line":281,"column":2},"end":{"line":281,"column":2}}]},"33":{"line":290,"type":"if","locations":[{"start":{"line":290,"column":2},"end":{"line":290,"column":2}},{"start":{"line":290,"column":2},"end":{"line":290,"column":2}}]},"34":{"line":292,"type":"if","locations":[{"start":{"line":292,"column":9},"end":{"line":292,"column":9}},{"start":{"line":292,"column":9},"end":{"line":292,"column":9}}]},"35":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":4},"end":{"line":301,"column":4}},{"start":{"line":301,"column":4},"end":{"line":301,"column":4}}]},"36":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":6},"end":{"line":302,"column":6}},{"start":{"line":302,"column":6},"end":{"line":302,"column":6}}]},"37":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":4},"end":{"line":310,"column":4}},{"start":{"line":310,"column":4},"end":{"line":310,"column":4}}]},"38":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":6},"end":{"line":363,"column":6}},{"start":{"line":363,"column":6},"end":{"line":363,"column":6}}]},"39":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":6},"end":{"line":384,"column":6}},{"start":{"line":384,"column":6},"end":{"line":384,"column":6}}]},"40":{"line":384,"type":"binary-expr","locations":[{"start":{"line":384,"column":10},"end":{"line":384,"column":38}},{"start":{"line":384,"column":42},"end":{"line":384,"column":63}}]},"41":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":6},"end":{"line":420,"column":6}},{"start":{"line":420,"column":6},"end":{"line":420,"column":6}}]},"42":{"line":420,"type":"binary-expr","locations":[{"start":{"line":420,"column":10},"end":{"line":420,"column":19}},{"start":{"line":420,"column":23},"end":{"line":420,"column":45}}]},"43":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":6},"end":{"line":423,"column":6}},{"start":{"line":423,"column":6},"end":{"line":423,"column":6}}]},"44":{"line":423,"type":"binary-expr","locations":[{"start":{"line":423,"column":10},"end":{"line":423,"column":21}},{"start":{"line":423,"column":25},"end":{"line":423,"column":50}}]},"45":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":8},"end":{"line":425,"column":8}},{"start":{"line":425,"column":8},"end":{"line":425,"column":8}}]},"46":{"line":425,"type":"binary-expr","locations":[{"start":{"line":425,"column":12},"end":{"line":425,"column":39}},{"start":{"line":425,"column":42},"end":{"line":425,"column":87}}]},"47":{"line":427,"type":"if","locations":[{"start":{"line":427,"column":12},"end":{"line":427,"column":12}},{"start":{"line":427,"column":12},"end":{"line":427,"column":12}}]},"48":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":6},"end":{"line":434,"column":6}},{"start":{"line":434,"column":6},"end":{"line":434,"column":6}}]},"49":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":10},"end":{"line":434,"column":18}},{"start":{"line":434,"column":22},"end":{"line":434,"column":43}}]},"50":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":8},"end":{"line":435,"column":8}},{"start":{"line":435,"column":8},"end":{"line":435,"column":8}}]},"51":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":8},"end":{"line":438,"column":8}},{"start":{"line":438,"column":8},"end":{"line":438,"column":8}}]},"52":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":6},"end":{"line":442,"column":6}},{"start":{"line":442,"column":6},"end":{"line":442,"column":6}}]},"53":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":8},"end":{"line":446,"column":8}},{"start":{"line":446,"column":8},"end":{"line":446,"column":8}}]},"54":{"line":449,"type":"if","locations":[{"start":{"line":449,"column":8},"end":{"line":449,"column":8}},{"start":{"line":449,"column":8},"end":{"line":449,"column":8}}]},"55":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":10},"end":{"line":451,"column":10}},{"start":{"line":451,"column":10},"end":{"line":451,"column":10}}]},"56":{"line":451,"type":"binary-expr","locations":[{"start":{"line":451,"column":14},"end":{"line":451,"column":18}},{"start":{"line":451,"column":22},"end":{"line":451,"column":45}}]},"57":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":15},"end":{"line":453,"column":15}},{"start":{"line":453,"column":15},"end":{"line":453,"column":15}}]},"58":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":6},"end":{"line":465,"column":6}},{"start":{"line":465,"column":6},"end":{"line":465,"column":6}}]},"59":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":6},"end":{"line":480,"column":6}},{"start":{"line":480,"column":6},"end":{"line":480,"column":6}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the 'Software'), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","'use strict';","","/* eslint no-underscore-dangle: 0 */","","const async = require('async');","const cacheManager = require('cache-manager');","const jws = require('jws');","const passport = require('passport');","const util = require('util');","","const aadutils = require('./aadutils');","const CONSTANTS = require('./constants');","const jwt = require('./jsonWebToken');","const Metadata = require('./metadata').Metadata;","const Log = require('./logging').getLogger;","const UrlValidator = require('valid-url');","","const log = new Log('AzureAD: Bearer Strategy');","const memoryCache = cacheManager.caching({ store: 'memory', max: 3600, ttl: 1800 /* seconds */ });","const ttl = 1800; // 30 minutes cache","","const B2C_PREFIX = 'b2c_1_';","","/**"," * Applications must supply a `verify` callback, for which the function"," * signature is:"," *"," *     function(token, done) { ... }"," * or"," *     function(req, token, done) { ... }"," *"," * The latter enables you to use the request object. In order to use this"," * signature, the passReqToCallback value in options (see the Options instructions"," * below) must be set true, so the strategy knows you want to pass the request"," * to the `verify` callback function."," *"," * `token` is the verified and decoded bearer token provided as a credential."," * The verify callback is responsible for finding the user who posesses the"," * token, and invoking `done` with the following arguments:"," *"," *     done(err, user, info);"," *"," * If the token is not valid, `user` should be set to `false` to indicate an"," * authentication failure.  Additional token `info` can optionally be passed as"," * a third argument, which will be set by Passport at `req.authInfo`, where it"," * can be used by later middleware for access control.  This is typically used"," * to pass any scope associated with the token."," * "," *"," * Options:"," *"," *   - `identityMetadata`   (1) Required"," *                          (2) must be a https url string"," *                          (3) Description:"," *                          the metadata endpoint provided by the Microsoft Identity Portal that provides "," *                          the keys and other important info at runtime. Examples:"," *                          <1> v1 tenant-specific endpoint"," *                          - https://login.microsoftonline.com/your_tenant_name.onmicrosoft.com/.well-known/openid-configuration"," *                          - https://login.microsoftonline.com/your_tenant_guid/.well-known/openid-configuration"," *                          <2> v1 common endpoint"," *                          - https://login.microsoftonline.com/common/.well-known/openid-configuration"," *                          <3> v2 tenant-specific endpoint"," *                          - https://login.microsoftonline.com/your_tenant_name.onmicrosoft.com/v2.0/.well-known/openid-configuration"," *                          - https://login.microsoftonline.com/your_tenant_guid/v2.0/.well-known/openid-configuration"," *                          <4> v2 common endpoint"," *                          - https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration"," *                         "," *                          Note: you cannot use common endpoint for B2C"," *"," *   - `clientID`           (1) Required"," *                          (2) must be a string"," *                          (3) Description:"," *                          The Client ID of your app in AAD"," *"," *   - `validateIssuer`     (1) Required to set to false if you don't want to validate issuer, default value is true"," *                          (2) Description:"," *                          For common endpoint, you should either set `validateIssuer` to false, or provide the `issuer`, since"," *                          we cannot grab the `issuer` value from metadata."," *                          For non-common endpoint, we use the `issuer` from metadata, and `validateIssuer` should be always true"," *"," *   - `issuer`             (1) Required if you are using common endpoint and set `validateIssuer` to true, or if you want to specify the allowed issuers"," *                          (2) must be a string or an array of strings"," *                          (3) Description:"," *                          For common endpoint, we use the `issuer` provided."," *                          For non-common endpoint, if the `issuer` is not provided, we use the issuer provided by metadata"," *"," *   - `passReqToCallback`  (1) Required to set true if you want to use the `function(req, token, done)` signature for the verify function, default is false"," *                          (2) Description:"," *                          Set `passReqToCallback` to true use the `function(req, token, done)` signature for the verify function"," *                          Set `passReqToCallback` to false use the `function(token, done)` signature for the verify function "," *"," *   - `isB2C`              (1) Required to set to true for using B2C, default value is false"," *                          "," *   - `policyName`         (1) Required for using B2C"," *                          (2) Description:"," *                          policy name. Should be a string starting with 'B2C_1_' (case insensitive)"," *"," *"," *   - `allowMultiAudiencesInToken`"," *                          (1) Required if you allow access_token whose `aud` claim contains multiple values"," *                          (2) Description:"," *                          The default value is false "," *"," *   - `loggingLevel`       (1) Optional"," *                          (2) must be 'info', 'warn', 'error'"," *                          (3) Description:  "," *                          logging level "," *"," *   - `audience`           (1) Optional"," *                          (2) must be a string or an array of strings"," *                          (3) Description:"," *                          We invalidate the `aud` claim in access_token against `audience`. The default value is `clientID` "," *"," *   - `clockSkew`          (1) Optional"," *                          (2) must be a positive integer"," *                          (3) Description:"," *                          the clock skew (in seconds) allowed in token validation, default value is CLOCK_SKEW"," * Examples:"," *"," *     passport.use(new BearerStrategy("," *       options,"," *       function(token, done) {"," *         User.findById(token.sub, function (err, user) {"," *           if (err) { return done(err); }"," *           if (!user) { return done(null, false); }"," *           return done(null, user, token);"," *         });"," *       }"," *     ));"," *"," * The name of this strategy is 'oauth-bearer', so use this name as the first "," * parameter of the authenticate function. Moreover, we don't need session "," * support for request containing bearer tokens, so the session option can be"," * set to false."," * "," *     app.get('/protected_resource', "," *       passport.authenticate('oauth-bearer', {session: false}), "," *       function(req, res) { "," *         ... "," *       });"," *"," *"," * For further details on HTTP Bearer authentication, refer to [The OAuth 2.0 Authorization Protocol: Bearer Tokens]"," * (http://tools.ietf.org/html/draft-ietf-oauth-v2-bearer)"," * For further details on JSON Web Token, refert to [JSON Web Token](http://tools.ietf.org/html/draft-ietf-oauth-json-web-token)"," *"," * @param {object} options - The Options."," * @param {Function} verify - The verify callback."," * @constructor"," */","function Strategy(options, verifyFn) {","  passport.Strategy.call(this);","  this.name = 'oauth-bearer'; // Me, a name I call myself.","","  if (!options)","    throw new Error('In BearerStrategy constructor: options is required');","  if (!verifyFn || typeof verifyFn !== 'function')","    throw new Error('In BearerStrategy constructor: verifyFn is required and it must be a function');","","  this._verify = verifyFn;","  this._options = options;","","  //---------------------------------------------------------------------------","  // Set up the default values","  //---------------------------------------------------------------------------","","  // clock skew. Must be a postive integer","  if (options.clockSkew && (typeof options.clockSkew !== 'number' || options.clockSkew <= 0 || options.clockSkew % 1 !== 0))","    throw new Error('clockSkew must be a positive integer');","  if (!options.clockSkew)","    options.clockSkew = CONSTANTS.CLOCK_SKEW;","","  // default value of passReqToCallback is false","  if (options.passReqToCallback !== true)","    options.passReqToCallback = false;","","  // default value of validateIssuer is true ","  if (options.validateIssuer !== false) ","    options.validateIssuer = true;","","  // default value of allowMultiAudiencesInToken is false","  if (options.allowMultiAudiencesInToken !== true)","    options.allowMultiAudiencesInToken = false;","","  // if options.audience is a string or an array of string, then we use it;","  // otherwise we use the clientID","  if (options.audience && typeof options.audience === 'string')","    options.audience = [options.audience];","  else if (!options.audience || !Array.isArray(options.audience) || options.length === 0)","    options.audience = [options.clientID, 'spn:' + options.clientID];","","  // default value of isB2C is false","  if (options.isB2C !== true)","    options.isB2C = false;","","  // turn issuer into an array","  if (options.issuer === '')","    options.issuer = null;","  if (options.issuer && Array.isArray(options.issuer) && options.issuer.length === 0)","    options.issuer = null; ","  if (options.issuer && !Array.isArray(options.issuer))","    options.issuer = [options.issuer];","","  //---------------------------------------------------------------------------","  // validate the things in options","  //---------------------------------------------------------------------------","","  // clientID should not be empty","  if (!options.clientID || options.clientID === '')","    throw new Error('In BearerStrategy constructor: clientID cannot be empty');","","  // identityMetadata must be https url","  if (!options.identityMetadata || !UrlValidator.isHttpsUri(options.identityMetadata))","    throw new Error('In BearerStrategy constructor: identityMetadata must be provided and must be a https url');","","  //---------------------------------------------------------------------------","  // treatment of common endpoint and issuer","  //---------------------------------------------------------------------------","","  // check if we are using the common endpoint","  options._isCommonEndpoint = (options.identityMetadata.indexOf('/common/') != -1);","","  // issuer validation for common endpoint is not supported","  if (options._isCommonEndpoint && options.validateIssuer && !options.issuer)","    throw new Error(`In BearerStrategy constructor: you are using common endpoint, please either set 'validateIssuer' to false, or provide 'issuer' value in options`);","","  // give a warning if user is not validating issuer","  if (!options.validateIssuer)","    log.warn(`Production environments should always validate the issuer.`);","","  //---------------------------------------------------------------------------","  // B2C. ","  // (1) policy must be provided and must have the valid prefix","  // (2) common endpoint is not supported","  //---------------------------------------------------------------------------","","  // for B2C, ","  if (options.isB2C) {","    if (!options.policyName || !options.policyName.toLowerCase().startsWith(B2C_PREFIX))","      throw new Error('In BearerStrategy constructor: invalid policy for B2C');","    if (options._isCommonEndpoint)","      throw new Error(`In BearerStrategy constructor: common endpoint is not supported for B2C, please replace 'common' with your tenant name or tenant guid in 'identityMetadata'`);","  }","","  // if logging level specified, switch to it.","  if (options.loggingLevel) { log.levels('console', options.loggingLevel); }","","  log.info(`In BearerStrategy constructor: created strategy with options ${JSON.stringify(options)}`);","}","","util.inherits(Strategy, passport.Strategy);","","Strategy.prototype.jwtVerify = function jwtVerifyFunc(req, token, metadata, optionsToValidate, done) {","  const self = this;","","  const decoded = jws.decode(token);","  let PEMkey = null;","","  if (decoded == null) {","    return done(null, false, 'In Strategy.prototype.jwtVerify: Invalid JWT token.');","  }","","  log.info('In Strategy.prototype.jwtVerify: token decoded:  ', decoded);","","  // When we generate the PEMkey, there are two different types of token signatures","  // we have to validate here. One provides x5t and the other a kid. We need to call ","  // the right one.","  if (decoded.header.x5t) {","    PEMkey = metadata.generateOidcPEM(decoded.header.x5t);","  } else if (decoded.header.kid) {","    PEMkey = metadata.generateOidcPEM(decoded.header.kid);","  } else {","    return self.failWithLog('In Strategy.prototype.jwtVerify: We did not receive a token we know how to validate');","  }","","  log.info('PEMkey generated: ' + PEMkey);","","  jwt.verify(token, PEMkey, optionsToValidate, (err, verifiedToken) => {","    if (err) {","      if (err.message)","        return self.failWithLog(err.message);","      else","        return self.failWithLog('In Strategy.prototype.jwtVerify: cannot verify id token');","    }","","    log.info('In Strategy.prototype.jwtVerify: VerifiedToken: ', verifiedToken);","    ","    if (self._options.passReqToCallback) {","      log.info('In Strategy.prototype.jwtVerify: We did pass Req back to Callback');","      return self._verify(req, verifiedToken, done);","    } else {","      log.info('In Strategy.prototype.jwtVerify: We did not pass Req back to Callback');","      return self._verify(verifiedToken, done);","    }","  });","};","","/*"," * We let the metadata loading happen in `authenticate` function, and use waterfall"," * to make sure the authentication code runs after the metadata loading is finished."," */","Strategy.prototype.authenticate = function authenticateStrategy(req) {","  const self = this;","  var params = {};","  var optionsToValidate = {};","","  /* Some introduction to async.waterfall (from the following link):","   * http://stackoverflow.com/questions/28908180/what-is-a-simple-implementation-of-async-waterfall","   *","   *   Runs the tasks array of functions in series, each passing their results ","   * to the next in the array. However, if any of the tasks pass an error to ","   * their own callback, the next function is not executed, and the main callback","   * is immediately called with the error.","   *","   * Example:","   *","   * async.waterfall([","   *   function(callback) {","   *     callback(null, 'one', 'two');","   *   },","   *   function(arg1, arg2, callback) {","   *     // arg1 now equals 'one' and arg2 now equals 'two'","   *     callback(null, 'three');","   *   },","   *   function(arg1, callback) {","   *     // arg1 now equals 'three'","   *     callback(null, 'done');","   *   }","   * ], function (err, result) {","   *      // result now equals 'done'    ","   * }); ","   */","  async.waterfall([","","    // compute metadataUrl","    (next) => {","      params.metadataURL = self._options.identityMetadata","            .concat(`?${aadutils.getLibraryProductParameterName()}=${aadutils.getLibraryProduct()}`)","            .concat(`&${aadutils.getLibraryVersionParameterName()}=${aadutils.getLibraryVersion()}`); ;","","      if (self._options.isB2C)","        params.metadataURL = params.metadataURL.concat(`&p=${self._options.policyName}`)","","      params.cacheKey = params.metadataURL;","","      log.info(`In Strategy.prototype.authenticate: ${JSON.stringify(params)}`);","","      return next(null, params);","    },","    ","    // load metatadata","    (params, next) => {","      return self.loadMetadata(params, next);","    },","","    // configure using metadata","    (metadata, next) => {","      params.metadata = metadata;","      log.info(`In Strategy.prototype.authenticate: received metadata: ${JSON.stringify(metadata)}`);","","      // set up issuer","      if (self._options.validateIssuer && !self._options.issuer)","        optionsToValidate.issuer = metadata.oidc.issuer;","      else","        optionsToValidate.issuer = self._options.issuer;","","      // set up algorithm","      optionsToValidate.algorithms = metadata.oidc.algorithms;","","      // set up audience, validateIssuer, allowMultiAudiencesInToken","      optionsToValidate.audience = self._options.audience;","      optionsToValidate.validateIssuer = self._options.validateIssuer;","      optionsToValidate.allowMultiAudiencesInToken = self._options.allowMultiAudiencesInToken;","      optionsToValidate.ignoreExpiration = self._options.ignoreExpiration;","","      // clock skew","      optionsToValidate.clockSkew = self._options.clockSkew;","","      log.info(`In Strategy.prototype.authenticate: we will validate the following options: ${optionsToValidate}`);","","      return next();","    }, ","","    // extract the access token from the request, after getting the token, it ","    // will call `jwtVerify` to verify the token. If token is verified, `jwtVerify`","    // will provide the token payload to self._verify function. self._verify is","    // provided by the developer, it's up to the developer to decide if the token","    // payload is considered authenticated. If authenticated, self._verify will","    // provide `user` object (developer's decision of its content) to `verified` ","    // function here, and the `verified` function does the final work of stuffing","    // the `user` obejct into req.user, so the following middleware can use it.","    // This is basically how bearerStrategy works.","    (next) => {","      var token;","","      // token could be in header or body. query is not supported.","","      if (req.query && req.query.access_token)","        return self.failWithLog('In Strategy.prototype.authenticate: access_token should be passed in request header or body. query is unsupported');","","      if (req.headers && req.headers.authorization) {","        var auth_components = req.headers.authorization.split(' ');","        if (auth_components.length == 2 &&auth_components[0].toLowerCase() === 'bearer') {","            token = auth_components[1];","            if (token !== '')","              log.info('In Strategy.prototype.authenticate: received access_token from request header: ${token}');","            else","              self.failWithLog('In Strategy.prototype.authenticate: missing access_token in the header');","        }","      }","","      if (req.body && req.body.access_token) {","        if (token)","          return self.failWithLog('In Strategy.prototype.authenticate: access_token cannot be passed in both request header and body');","        token = req.body.access_token;","        if (token)","          log.info(`In Strategy.prototype.authenticate: received access_token from request body: ${token}`);","      }","","      if (!token)","        return self.failWithLog('token is not found'); ","","      function verified(err, user, info) {","        if (err)","          return self.error(err);","","        if (!user) {","          var err_message = 'error: invalid_token';","          if (info && typeof info == 'string')","            err_message += ', error description: ' + info;","          else if (info)","            err_message += ', error description: ' + JSON.stringify(info);","          return self.failWithLog(err_message);","        }","","        return self.success(user, info);","      }","","      return self.jwtVerify(req, token, params.metadata, optionsToValidate, verified);","    }],","","    (waterfallError) => { // This function gets called after the three tasks have called their 'task callbacks'","      if (waterfallError) {","        return self.error(waterfallError);","      }","      return true;","    }","  );","};","","Strategy.prototype.loadMetadata = function(params, next) {","  const self = this;","  var metadata = new Metadata(params.metadataURL, 'oidc', self._options);","","  // fetch metadata","  return memoryCache.wrap(params.cacheKey, (cacheCallback) => {","    metadata.fetch((fetchMetadataError) => {","      if (fetchMetadataError) {","        return self.failWithLog('In loadMetadata: Unable to fetch metadata');","      }","      return cacheCallback(null, metadata);","    }); ","  }, { ttl }, next);","};","","/**"," * fail and log the given message"," *"," * @params {String} message"," */","Strategy.prototype.failWithLog = function(message) {","  log.info(`authentication failed due to: ${message}`);","  return this.fail(message);","};","","module.exports = Strategy;",""],"l":{"27":1,"28":1,"29":1,"30":1,"31":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"40":1,"41":1,"42":1,"44":1,"173":1,"174":0,"175":0,"177":0,"178":0,"179":0,"180":0,"182":0,"183":0,"190":0,"191":0,"192":0,"193":0,"196":0,"197":0,"200":0,"201":0,"204":0,"205":0,"209":0,"210":0,"211":0,"212":0,"215":0,"216":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"231":0,"232":0,"235":0,"236":0,"243":0,"246":0,"247":0,"250":0,"251":0,"260":0,"261":0,"262":0,"263":0,"264":0,"268":0,"270":0,"273":1,"275":1,"276":0,"278":0,"279":0,"281":0,"282":0,"285":0,"290":0,"291":0,"292":0,"293":0,"295":0,"298":0,"300":0,"301":0,"302":0,"303":0,"305":0,"308":0,"310":0,"311":0,"312":0,"314":0,"315":0,"324":1,"325":0,"326":0,"327":0,"355":0,"359":0,"363":0,"364":0,"366":0,"368":0,"370":0,"375":0,"380":0,"381":0,"384":0,"385":0,"387":0,"390":0,"393":0,"394":0,"395":0,"396":0,"399":0,"401":0,"403":0,"416":0,"420":0,"421":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"430":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"442":0,"443":0,"445":1,"446":0,"447":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"458":0,"461":0,"465":0,"466":0,"468":0,"473":1,"474":0,"475":0,"478":0,"479":0,"480":0,"481":0,"483":0,"493":1,"494":0,"495":0,"498":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/aadutils.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/aadutils.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":1,"7":0,"8":1,"9":0,"10":1,"11":0,"12":0,"13":1,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":1,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":1,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":1,"40":0,"41":0,"42":0,"43":0,"44":1,"45":0,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":1,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":1,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0,0,0],"20":[0,0],"21":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"prepadSigned","line":113,"loc":{"start":{"line":113,"column":0},"end":{"line":113,"column":30}}},"2":{"name":"toHex","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":121,"column":23}}},"3":{"name":"encodeLengthHex","line":132,"loc":{"start":{"line":132,"column":0},"end":{"line":132,"column":28}}},"4":{"name":"(anonymous_4)","line":192,"loc":{"start":{"line":192,"column":23},"end":{"line":192,"column":58}}}},"statementMap":{"1":{"start":{"line":25,"column":0},"end":{"line":25,"column":39}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":33}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":29}},"4":{"start":{"line":29,"column":0},"end":{"line":29,"column":65}},"5":{"start":{"line":29,"column":36},"end":{"line":29,"column":63}},"6":{"start":{"line":30,"column":0},"end":{"line":30,"column":73}},"7":{"start":{"line":30,"column":49},"end":{"line":30,"column":71}},"8":{"start":{"line":31,"column":0},"end":{"line":31,"column":73}},"9":{"start":{"line":31,"column":49},"end":{"line":31,"column":71}},"10":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}},"11":{"start":{"line":33,"column":2},"end":{"line":33,"column":40}},"12":{"start":{"line":34,"column":2},"end":{"line":34,"column":32}},"13":{"start":{"line":37,"column":0},"end":{"line":46,"column":2}},"14":{"start":{"line":38,"column":2},"end":{"line":44,"column":3}},"15":{"start":{"line":39,"column":4},"end":{"line":39,"column":48}},"16":{"start":{"line":40,"column":9},"end":{"line":44,"column":3}},"17":{"start":{"line":41,"column":4},"end":{"line":41,"column":49}},"18":{"start":{"line":42,"column":9},"end":{"line":44,"column":3}},"19":{"start":{"line":43,"column":4},"end":{"line":43,"column":47}},"20":{"start":{"line":45,"column":2},"end":{"line":45,"column":36}},"21":{"start":{"line":48,"column":0},"end":{"line":51,"column":2}},"22":{"start":{"line":49,"column":2},"end":{"line":49,"column":65}},"23":{"start":{"line":50,"column":2},"end":{"line":50,"column":55}},"24":{"start":{"line":66,"column":0},"end":{"line":72,"column":2}},"25":{"start":{"line":67,"column":2},"end":{"line":67,"column":30}},"26":{"start":{"line":68,"column":2},"end":{"line":68,"column":113}},"27":{"start":{"line":69,"column":2},"end":{"line":69,"column":28}},"28":{"start":{"line":70,"column":2},"end":{"line":70,"column":29}},"29":{"start":{"line":71,"column":2},"end":{"line":71,"column":40}},"30":{"start":{"line":89,"column":0},"end":{"line":91,"column":2}},"31":{"start":{"line":90,"column":2},"end":{"line":90,"column":28}},"32":{"start":{"line":107,"column":0},"end":{"line":111,"column":2}},"33":{"start":{"line":108,"column":2},"end":{"line":110,"column":19}},"34":{"start":{"line":113,"column":0},"end":{"line":119,"column":1}},"35":{"start":{"line":114,"column":2},"end":{"line":114,"column":24}},"36":{"start":{"line":115,"column":2},"end":{"line":117,"column":3}},"37":{"start":{"line":116,"column":4},"end":{"line":116,"column":25}},"38":{"start":{"line":118,"column":2},"end":{"line":118,"column":16}},"39":{"start":{"line":121,"column":0},"end":{"line":127,"column":1}},"40":{"start":{"line":122,"column":2},"end":{"line":122,"column":35}},"41":{"start":{"line":123,"column":2},"end":{"line":125,"column":3}},"42":{"start":{"line":124,"column":4},"end":{"line":124,"column":22}},"43":{"start":{"line":126,"column":2},"end":{"line":126,"column":14}},"44":{"start":{"line":132,"column":0},"end":{"line":139,"column":1}},"45":{"start":{"line":133,"column":2},"end":{"line":135,"column":3}},"46":{"start":{"line":134,"column":4},"end":{"line":134,"column":20}},"47":{"start":{"line":136,"column":2},"end":{"line":136,"column":24}},"48":{"start":{"line":137,"column":2},"end":{"line":137,"column":51}},"49":{"start":{"line":138,"column":2},"end":{"line":138,"column":42}},"50":{"start":{"line":142,"column":0},"end":{"line":166,"column":2}},"51":{"start":{"line":143,"column":2},"end":{"line":143,"column":51}},"52":{"start":{"line":144,"column":2},"end":{"line":144,"column":53}},"53":{"start":{"line":146,"column":2},"end":{"line":146,"column":59}},"54":{"start":{"line":147,"column":2},"end":{"line":147,"column":61}},"55":{"start":{"line":149,"column":2},"end":{"line":149,"column":39}},"56":{"start":{"line":150,"column":2},"end":{"line":150,"column":40}},"57":{"start":{"line":152,"column":2},"end":{"line":152,"column":48}},"58":{"start":{"line":153,"column":2},"end":{"line":153,"column":48}},"59":{"start":{"line":154,"column":2},"end":{"line":159,"column":75}},"60":{"start":{"line":161,"column":2},"end":{"line":161,"column":69}},"61":{"start":{"line":163,"column":2},"end":{"line":163,"column":119}},"62":{"start":{"line":165,"column":2},"end":{"line":165,"column":13}},"63":{"start":{"line":171,"column":0},"end":{"line":187,"column":2}},"64":{"start":{"line":172,"column":2},"end":{"line":173,"column":17}},"65":{"start":{"line":173,"column":4},"end":{"line":173,"column":17}},"66":{"start":{"line":176,"column":2},"end":{"line":176,"column":77}},"67":{"start":{"line":179,"column":2},"end":{"line":179,"column":43}},"68":{"start":{"line":180,"column":2},"end":{"line":181,"column":26}},"69":{"start":{"line":181,"column":4},"end":{"line":181,"column":26}},"70":{"start":{"line":184,"column":2},"end":{"line":184,"column":39}},"71":{"start":{"line":186,"column":2},"end":{"line":186,"column":41}},"72":{"start":{"line":192,"column":0},"end":{"line":210,"column":2}},"73":{"start":{"line":194,"column":2},"end":{"line":195,"column":46}},"74":{"start":{"line":195,"column":4},"end":{"line":195,"column":46}},"75":{"start":{"line":198,"column":2},"end":{"line":198,"column":16}},"76":{"start":{"line":199,"column":2},"end":{"line":205,"column":3}},"77":{"start":{"line":200,"column":4},"end":{"line":200,"column":25}},"78":{"start":{"line":201,"column":4},"end":{"line":204,"column":12}},"79":{"start":{"line":202,"column":6},"end":{"line":202,"column":14}},"80":{"start":{"line":204,"column":6},"end":{"line":204,"column":12}},"81":{"start":{"line":208,"column":2},"end":{"line":209,"column":27}},"82":{"start":{"line":209,"column":4},"end":{"line":209,"column":27}},"83":{"start":{"line":216,"column":0},"end":{"line":230,"column":2}},"84":{"start":{"line":217,"column":2},"end":{"line":218,"column":16}},"85":{"start":{"line":218,"column":4},"end":{"line":218,"column":16}},"86":{"start":{"line":220,"column":2},"end":{"line":227,"column":3}},"87":{"start":{"line":221,"column":4},"end":{"line":221,"column":25}},"88":{"start":{"line":222,"column":4},"end":{"line":226,"column":5}},"89":{"start":{"line":224,"column":6},"end":{"line":224,"column":25}},"90":{"start":{"line":225,"column":6},"end":{"line":225,"column":19}},"91":{"start":{"line":229,"column":2},"end":{"line":229,"column":14}},"92":{"start":{"line":233,"column":0},"end":{"line":239,"column":2}},"93":{"start":{"line":234,"column":2},"end":{"line":235,"column":11}},"94":{"start":{"line":235,"column":4},"end":{"line":235,"column":11}},"95":{"start":{"line":237,"column":2},"end":{"line":238,"column":40}},"96":{"start":{"line":238,"column":4},"end":{"line":238,"column":40}},"97":{"start":{"line":241,"column":0},"end":{"line":255,"column":2}},"98":{"start":{"line":242,"column":2},"end":{"line":243,"column":15}},"99":{"start":{"line":243,"column":4},"end":{"line":243,"column":15}},"100":{"start":{"line":244,"column":2},"end":{"line":245,"column":23}},"101":{"start":{"line":245,"column":4},"end":{"line":245,"column":23}},"102":{"start":{"line":248,"column":2},"end":{"line":248,"column":10}},"103":{"start":{"line":249,"column":2},"end":{"line":253,"column":3}},"104":{"start":{"line":250,"column":4},"end":{"line":250,"column":30}},"105":{"start":{"line":252,"column":4},"end":{"line":252,"column":15}},"106":{"start":{"line":254,"column":2},"end":{"line":254,"column":13}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"2":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":9},"end":{"line":40,"column":9}},{"start":{"line":40,"column":9},"end":{"line":40,"column":9}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":42,"column":9}},{"start":{"line":42,"column":9},"end":{"line":42,"column":9}}]},"4":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":34},"end":{"line":50,"column":44}},{"start":{"line":50,"column":47},"end":{"line":50,"column":54}}]},"5":{"line":68,"type":"cond-expr","locations":[{"start":{"line":68,"column":96},"end":{"line":68,"column":103}},{"start":{"line":68,"column":106},"end":{"line":68,"column":112}}]},"6":{"line":68,"type":"binary-expr","locations":[{"start":{"line":68,"column":20},"end":{"line":68,"column":44}},{"start":{"line":68,"column":48},"end":{"line":68,"column":92}}]},"7":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":15},"end":{"line":70,"column":22}},{"start":{"line":70,"column":26},"end":{"line":70,"column":28}}]},"8":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":2},"end":{"line":115,"column":2}},{"start":{"line":115,"column":2},"end":{"line":115,"column":2}}]},"9":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":6},"end":{"line":115,"column":15}},{"start":{"line":115,"column":19},"end":{"line":115,"column":28}}]},"10":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"11":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"12":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"13":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":2},"end":{"line":194,"column":2}},{"start":{"line":194,"column":2},"end":{"line":194,"column":2}}]},"14":{"line":201,"type":"if","locations":[{"start":{"line":201,"column":4},"end":{"line":201,"column":4}},{"start":{"line":201,"column":4},"end":{"line":201,"column":4}}]},"15":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"16":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":2},"end":{"line":217,"column":2}},{"start":{"line":217,"column":2},"end":{"line":217,"column":2}}]},"17":{"line":222,"type":"if","locations":[{"start":{"line":222,"column":4},"end":{"line":222,"column":4}},{"start":{"line":222,"column":4},"end":{"line":222,"column":4}}]},"18":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":2},"end":{"line":234,"column":2}},{"start":{"line":234,"column":2},"end":{"line":234,"column":2}}]},"19":{"line":234,"type":"binary-expr","locations":[{"start":{"line":234,"column":6},"end":{"line":234,"column":13}},{"start":{"line":234,"column":17},"end":{"line":234,"column":22}},{"start":{"line":234,"column":26},"end":{"line":234,"column":33}},{"start":{"line":234,"column":37},"end":{"line":234,"column":59}}]},"20":{"line":242,"type":"if","locations":[{"start":{"line":242,"column":2},"end":{"line":242,"column":2}},{"start":{"line":242,"column":2},"end":{"line":242,"column":2}}]},"21":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":2},"end":{"line":244,"column":2}},{"start":{"line":244,"column":2},"end":{"line":244,"column":2}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the \"Software\"), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","'use strict';","","const base64url = require('base64url');","const crypto = require('crypto');","const util = require('util');","","exports.getLibraryProduct = () => { return 'passport-azure-ad' };","exports.getLibraryVersionParameterName = () => { return \"x-client-Ver\" };","exports.getLibraryProductParameterName = () => { return 'x-client-SKU' };","exports.getLibraryVersion = () => { ","  require('pkginfo')(module, 'version');","  return module.exports.version;","};","","exports.getElement = (parentElement, elementName) => {","  if (parentElement[`saml:${elementName}`]) {","    return parentElement[`saml:${elementName}`];","  } else if (parentElement[`samlp:${elementName}`]) {","    return parentElement[`samlp:${elementName}`];","  } else if (parentElement[`wsa:${elementName}`]) {","    return parentElement[`wsa:${elementName}`];","  }","  return parentElement[elementName];","};","","exports.getFirstElement = (parentElement, elementName) => {","  const element = exports.getElement(parentElement, elementName);","  return Array.isArray(element) ? element[0] : element;","};","","/**"," * Reconstructs the original URL of the request."," *"," * This function builds a URL that corresponds the original URL requested by the"," * client, including the protocol (http or https) and host."," *"," * If the request passed through any proxies that terminate SSL, the"," * `X-Forwarded-Proto` header is used to detect if the request was encrypted to"," * the proxy."," *"," * @return {String}"," * @api private"," */","exports.originalURL = (req) => {","  const headers = req.headers;","  const protocol = (req.connection.encrypted || req.headers['x-forwarded-proto'] === 'https') ? 'https' : 'http';","  const host = headers.host;","  const path = req.url || '';","  return `${protocol}://${host}${path}`;","};","","/**"," * Merge object b with object a."," *"," *     var a = { something: 'bar' }"," *       , b = { bar: 'baz' };"," *"," *     utils.merge(a, b);"," *     // => { something: 'bar', bar: 'baz' }"," *"," * @param {Object} a"," * @param {Object} b"," * @return {Object}"," * @api private"," */","","exports.merge = (a, b) => {","  return util._extend(a, b); // eslint-disable-line no-underscore-dangle","};","","/**"," * Return a unique identifier with the given `len`."," *"," *     utils.uid(10);"," *     // => \"FDaS435D2z\""," *"," * CREDIT: Connect -- utils.uid"," *         https://github.com/senchalabs/connect/blob/2.7.2/lib/utils.js"," *"," * @param {Number} len"," * @return {String}"," * @api private"," */","","exports.uid = (len) => {","  return crypto.randomBytes(Math.ceil(len * 3 / 4))","    .toString('base64')","    .slice(0, len);","};","","function prepadSigned(hexStr) {","  const msb = hexStr[0];","  if (msb < '0' || msb > '7') {","    return `00${hexStr}`;","  }","  return hexStr;","}","","function toHex(number) {","  const nstr = number.toString(16);","  if (nstr.length % 2) {","    return `0${nstr}`;","  }","  return nstr;","}","","// encode ASN.1 DER length field","// if <=127, short form","// if >=128, long form","function encodeLengthHex(n) {","  if (n <= 127) {","    return toHex(n);","  }","  const nHex = toHex(n);","  const lengthOfLengthByte = 128 + nHex.length / 2; // 0x80+numbytes","  return toHex(lengthOfLengthByte) + nHex;","}","","// http://stackoverflow.com/questions/18835132/xml-to-pem-in-node-js","exports.rsaPublicKeyPem = (modulusB64, exponentB64) => {","  const modulus = new Buffer(modulusB64, 'base64');","  const exponent = new Buffer(exponentB64, 'base64');","","  const modulusHex = prepadSigned(modulus.toString('hex'));","  const exponentHex = prepadSigned(exponent.toString('hex'));","","  const modlen = modulusHex.length / 2;","  const explen = exponentHex.length / 2;","","  const encodedModlen = encodeLengthHex(modlen);","  const encodedExplen = encodeLengthHex(explen);","  const encodedPubkey = `30${encodeLengthHex(","          modlen +","          explen +","          encodedModlen.length / 2 +","          encodedExplen.length / 2 + 2","        )}02${encodedModlen}${modulusHex}02${encodedExplen}${exponentHex}`;","","  const derB64 = new Buffer(encodedPubkey, 'hex').toString('base64');","","  const pem = `-----BEGIN RSA PUBLIC KEY-----\\n${derB64.match(/.{1,64}/g).join('\\n')}\\n-----END RSA PUBLIC KEY-----\\n`;","","  return pem;","};","","// used for c_hash and at_hash validation","// case (1): content = access_token, hashProvided = at_hash","// case (2): content = code, hashProvided = c_hash","exports.checkHashValueRS256 = (content, hashProvided) => {","  if (!content)","    return false;","  ","  // step 1. hash the content","  var digest = crypto.createHash('sha256').update(content, 'ascii').digest();","","  // step2. take the first half of the digest, and save it in a buffer","  var buffer = new Buffer(digest.length/2);","  for (var i = 0; i < buffer.length; i++)","    buffer[i] = digest[i];","","  // step 3. base64url encode the buffer to get the hash","  var hashComputed = base64url(buffer);","","  return (hashProvided === hashComputed);","};","","// This function is used for handling the tuples containing nonce/state/policy/timeStamp in session","// remove the additional tuples from array starting from the oldest ones","// remove expired tuples in array","exports.processArray = function(array, maxAmount, maxAge) {","  // remove the additional tuples, start from the oldest ones","  if (array.length > maxAmount)","    array.splice(0, array.length - maxAmount);","","  // count the number of those already expired","  var count = 0;","  for (var i = 0; i < array.length; i++) {","    var tuple = array[i];","    if (tuple.timeStamp + maxAge * 1000 <= Date.now())","      count++;","    else","      break;","  }","","  // remove the expired ones","  if (count > 0)","    array.splice(0, count);","};","","// This function is used to find the tuple matching the given state, remove the tuple","// from the array and return the tuple","// @array        - array of {state: x, nonce: x, policy: x, timeStamp: x} tuples","// @state        - the tuple which matches the given state","exports.findAndDeleteTupleByState = (array, state) => {","  if (!array)","    return null;","","  for (var i = 0; i < array.length; i++) {","    var tuple = array[i];","    if (tuple['state'] === state) {","      // remove the tuple from the array","      array.splice(i, 1);","      return tuple;","    }","  }","","  return null;","};","","// copy the fields from source to dest","exports.copyObjectFields = (source, dest, fields) => {","  if (!source || !dest || !fields || !Array.isArray(fields))","    return;","","  for (var i = 0; i < fields.length; i++)","    dest[fields[i]] = source[fields[i]];","};","","exports.getErrorMessage = (err) => {","  if (typeof err === 'string')","    return err;","  if (err instanceof Error)","    return err.message;","","  // if not string or Error, we try to stringify it","  var str;","  try {","    str = JSON.stringify(err);","  } catch (ex) {","    return err;","  }","  return str;","};","",""],"l":{"25":1,"26":1,"27":1,"29":1,"30":1,"31":1,"32":1,"33":0,"34":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"45":0,"48":1,"49":0,"50":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"89":1,"90":0,"107":1,"108":0,"113":1,"114":0,"115":0,"116":0,"118":0,"121":1,"122":0,"123":0,"124":0,"126":0,"132":1,"133":0,"134":0,"136":0,"137":0,"138":0,"142":1,"143":0,"144":0,"146":0,"147":0,"149":0,"150":0,"152":0,"153":0,"154":0,"161":0,"163":0,"165":0,"171":1,"172":0,"173":0,"176":0,"179":0,"180":0,"181":0,"184":0,"186":0,"192":1,"194":0,"195":0,"198":0,"199":0,"200":0,"201":0,"202":0,"204":0,"208":0,"209":0,"216":1,"217":0,"218":0,"220":0,"221":0,"222":0,"224":0,"225":0,"229":0,"233":1,"234":0,"235":0,"237":0,"238":0,"241":1,"242":0,"243":0,"244":0,"245":0,"248":0,"249":0,"250":0,"252":0,"254":0}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/constants.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/constants.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":28,"column":0},"end":{"line":28,"column":19}},"2":{"start":{"line":30,"column":0},"end":{"line":30,"column":49}},"3":{"start":{"line":31,"column":0},"end":{"line":31,"column":62}},"4":{"start":{"line":32,"column":0},"end":{"line":32,"column":45}},"5":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}},"6":{"start":{"line":36,"column":0},"end":{"line":36,"column":46}},"7":{"start":{"line":37,"column":0},"end":{"line":37,"column":91}},"8":{"start":{"line":39,"column":0},"end":{"line":39,"column":27}}},"branchMap":{},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the 'Software'), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","","'use strict';","","// constants that are not strategy specific","","var CONSTANTS = {};","","CONSTANTS.POLICY_REGEX = /^b2c_1_[0-9a-z._-]+$/i;    // policy is case insensitive","CONSTANTS.TENANTNAME_REGEX = /^[0-9a-zA-Z]+.onmicrosoft.com$/;","CONSTANTS.TENANTID_REGEX = /^[0-9a-zA-Z-]+$/;","","CONSTANTS.CLOCK_SKEW = 300; // 5 minutes","","CONSTANTS.CLIENT_ASSERTION_JWT_LIFETIME = 600; // 10 minutes","CONSTANTS.CLIENT_ASSERTION_TYPE = 'urn:ietf:params:oauth:client-assertion-type:jwt-bearer';","","module.exports = CONSTANTS;",""],"l":{"28":1,"30":1,"31":1,"32":1,"34":1,"36":1,"37":1,"39":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/jsonWebToken.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/jsonWebToken.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0,0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0,0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":53,"loc":{"start":{"line":53,"column":17},"end":{"line":53,"column":64}}},"2":{"name":"(anonymous_2)","line":76,"loc":{"start":{"line":76,"column":13},"end":{"line":76,"column":24}}},"3":{"name":"(anonymous_3)","line":78,"loc":{"start":{"line":78,"column":28},"end":{"line":78,"column":39}}},"4":{"name":"(anonymous_4)","line":230,"loc":{"start":{"line":230,"column":34},"end":{"line":230,"column":106}}}},"statementMap":{"1":{"start":{"line":24,"column":0},"end":{"line":24,"column":15}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":41}},"4":{"start":{"line":28,"column":0},"end":{"line":28,"column":27}},"5":{"start":{"line":31,"column":0},"end":{"line":37,"column":2}},"6":{"start":{"line":32,"column":2},"end":{"line":35,"column":3}},"7":{"start":{"line":33,"column":4},"end":{"line":34,"column":18}},"8":{"start":{"line":34,"column":6},"end":{"line":34,"column":18}},"9":{"start":{"line":36,"column":2},"end":{"line":36,"column":15}},"10":{"start":{"line":53,"column":0},"end":{"line":220,"column":2}},"11":{"start":{"line":61,"column":2},"end":{"line":62,"column":72}},"12":{"start":{"line":62,"column":4},"end":{"line":62,"column":72}},"13":{"start":{"line":63,"column":2},"end":{"line":64,"column":74}},"14":{"start":{"line":64,"column":4},"end":{"line":64,"column":74}},"15":{"start":{"line":65,"column":2},"end":{"line":66,"column":71}},"16":{"start":{"line":66,"column":4},"end":{"line":66,"column":71}},"17":{"start":{"line":70,"column":2},"end":{"line":71,"column":80}},"18":{"start":{"line":71,"column":4},"end":{"line":71,"column":80}},"19":{"start":{"line":72,"column":2},"end":{"line":73,"column":77}},"20":{"start":{"line":73,"column":4},"end":{"line":73,"column":77}},"21":{"start":{"line":76,"column":2},"end":{"line":81,"column":4}},"22":{"start":{"line":77,"column":4},"end":{"line":77,"column":56}},"23":{"start":{"line":78,"column":4},"end":{"line":80,"column":7}},"24":{"start":{"line":79,"column":6},"end":{"line":79,"column":33}},"25":{"start":{"line":84,"column":2},"end":{"line":86,"column":96}},"26":{"start":{"line":86,"column":4},"end":{"line":86,"column":96}},"27":{"start":{"line":87,"column":2},"end":{"line":88,"column":83}},"28":{"start":{"line":88,"column":4},"end":{"line":88,"column":83}},"29":{"start":{"line":89,"column":2},"end":{"line":91,"column":100}},"30":{"start":{"line":91,"column":4},"end":{"line":91,"column":100}},"31":{"start":{"line":98,"column":2},"end":{"line":98,"column":35}},"32":{"start":{"line":99,"column":2},"end":{"line":100,"column":53}},"33":{"start":{"line":100,"column":4},"end":{"line":100,"column":53}},"34":{"start":{"line":101,"column":2},"end":{"line":102,"column":64}},"35":{"start":{"line":102,"column":4},"end":{"line":102,"column":64}},"36":{"start":{"line":105,"column":2},"end":{"line":105,"column":19}},"37":{"start":{"line":106,"column":2},"end":{"line":110,"column":3}},"38":{"start":{"line":107,"column":4},"end":{"line":107,"column":41}},"39":{"start":{"line":109,"column":4},"end":{"line":109,"column":57}},"40":{"start":{"line":112,"column":2},"end":{"line":114,"column":3}},"41":{"start":{"line":113,"column":4},"end":{"line":113,"column":44}},"42":{"start":{"line":117,"column":2},"end":{"line":117,"column":35}},"43":{"start":{"line":118,"column":2},"end":{"line":118,"column":37}},"44":{"start":{"line":119,"column":2},"end":{"line":119,"column":41}},"45":{"start":{"line":121,"column":2},"end":{"line":122,"column":58}},"46":{"start":{"line":122,"column":4},"end":{"line":122,"column":58}},"47":{"start":{"line":123,"column":2},"end":{"line":124,"column":59}},"48":{"start":{"line":124,"column":4},"end":{"line":124,"column":59}},"49":{"start":{"line":125,"column":2},"end":{"line":126,"column":61}},"50":{"start":{"line":126,"column":4},"end":{"line":126,"column":61}},"51":{"start":{"line":133,"column":2},"end":{"line":136,"column":3}},"52":{"start":{"line":135,"column":4},"end":{"line":135,"column":48}},"53":{"start":{"line":138,"column":2},"end":{"line":144,"column":3}},"54":{"start":{"line":139,"column":4},"end":{"line":139,"column":58}},"55":{"start":{"line":140,"column":4},"end":{"line":141,"column":50}},"56":{"start":{"line":141,"column":6},"end":{"line":141,"column":50}},"57":{"start":{"line":143,"column":4},"end":{"line":143,"column":19}},"58":{"start":{"line":153,"column":2},"end":{"line":154,"column":59}},"59":{"start":{"line":154,"column":4},"end":{"line":154,"column":59}},"60":{"start":{"line":155,"column":2},"end":{"line":165,"column":3}},"61":{"start":{"line":156,"column":4},"end":{"line":157,"column":58}},"62":{"start":{"line":157,"column":6},"end":{"line":157,"column":58}},"63":{"start":{"line":158,"column":4},"end":{"line":158,"column":22}},"64":{"start":{"line":159,"column":4},"end":{"line":162,"column":47}},"65":{"start":{"line":160,"column":6},"end":{"line":160,"column":59}},"66":{"start":{"line":162,"column":6},"end":{"line":162,"column":47}},"67":{"start":{"line":163,"column":4},"end":{"line":164,"column":83}},"68":{"start":{"line":164,"column":6},"end":{"line":164,"column":83}},"69":{"start":{"line":170,"column":2},"end":{"line":171,"column":59}},"70":{"start":{"line":171,"column":4},"end":{"line":171,"column":59}},"71":{"start":{"line":172,"column":2},"end":{"line":173,"column":85}},"72":{"start":{"line":173,"column":6},"end":{"line":173,"column":85}},"73":{"start":{"line":180,"column":2},"end":{"line":181,"column":69}},"74":{"start":{"line":181,"column":4},"end":{"line":181,"column":69}},"75":{"start":{"line":182,"column":2},"end":{"line":183,"column":72}},"76":{"start":{"line":183,"column":4},"end":{"line":183,"column":72}},"77":{"start":{"line":184,"column":2},"end":{"line":184,"column":82}},"78":{"start":{"line":185,"column":2},"end":{"line":186,"column":85}},"79":{"start":{"line":186,"column":4},"end":{"line":186,"column":85}},"80":{"start":{"line":187,"column":2},"end":{"line":190,"column":3}},"81":{"start":{"line":188,"column":4},"end":{"line":189,"column":82}},"82":{"start":{"line":189,"column":6},"end":{"line":189,"column":82}},"83":{"start":{"line":196,"column":2},"end":{"line":197,"column":59}},"84":{"start":{"line":197,"column":4},"end":{"line":197,"column":59}},"85":{"start":{"line":198,"column":2},"end":{"line":202,"column":3}},"86":{"start":{"line":199,"column":4},"end":{"line":201,"column":5}},"87":{"start":{"line":200,"column":6},"end":{"line":200,"column":47}},"88":{"start":{"line":206,"column":2},"end":{"line":213,"column":3}},"89":{"start":{"line":207,"column":4},"end":{"line":208,"column":69}},"90":{"start":{"line":208,"column":6},"end":{"line":208,"column":69}},"91":{"start":{"line":209,"column":4},"end":{"line":210,"column":81}},"92":{"start":{"line":210,"column":6},"end":{"line":210,"column":81}},"93":{"start":{"line":211,"column":4},"end":{"line":212,"column":50}},"94":{"start":{"line":212,"column":6},"end":{"line":212,"column":50}},"95":{"start":{"line":219,"column":2},"end":{"line":219,"column":29}},"96":{"start":{"line":230,"column":0},"end":{"line":255,"column":2}},"97":{"start":{"line":231,"column":2},"end":{"line":231,"column":67}},"98":{"start":{"line":232,"column":2},"end":{"line":239,"column":4}},"99":{"start":{"line":241,"column":2},"end":{"line":241,"column":22}},"100":{"start":{"line":242,"column":2},"end":{"line":242,"column":23}},"101":{"start":{"line":244,"column":2},"end":{"line":252,"column":3}},"102":{"start":{"line":245,"column":4},"end":{"line":249,"column":7}},"103":{"start":{"line":251,"column":4},"end":{"line":251,"column":19}},"104":{"start":{"line":254,"column":2},"end":{"line":254,"column":39}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":4},"end":{"line":33,"column":4}},{"start":{"line":33,"column":4},"end":{"line":33,"column":4}}]},"2":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":2},"end":{"line":61,"column":2}},{"start":{"line":61,"column":2},"end":{"line":61,"column":2}}]},"3":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"4":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":2},"end":{"line":65,"column":2}},{"start":{"line":65,"column":2},"end":{"line":65,"column":2}}]},"5":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":2},"end":{"line":70,"column":2}},{"start":{"line":70,"column":2},"end":{"line":70,"column":2}}]},"6":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":6},"end":{"line":70,"column":16}},{"start":{"line":70,"column":20},"end":{"line":70,"column":36}}]},"7":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"8":{"line":72,"type":"binary-expr","locations":[{"start":{"line":72,"column":6},"end":{"line":72,"column":13}},{"start":{"line":72,"column":17},"end":{"line":72,"column":30}}]},"9":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":2},"end":{"line":84,"column":2}},{"start":{"line":84,"column":2},"end":{"line":84,"column":2}}]},"10":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":8},"end":{"line":84,"column":24}},{"start":{"line":84,"column":29},"end":{"line":84,"column":65}},{"start":{"line":85,"column":5},"end":{"line":85,"column":36}},{"start":{"line":85,"column":40},"end":{"line":85,"column":67}}]},"11":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":2},"end":{"line":87,"column":2}},{"start":{"line":87,"column":2},"end":{"line":87,"column":2}}]},"12":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":2},"end":{"line":89,"column":2}},{"start":{"line":89,"column":2},"end":{"line":89,"column":2}}]},"13":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":40}},{"start":{"line":89,"column":44},"end":{"line":89,"column":74}},{"start":{"line":90,"column":5},"end":{"line":90,"column":36}},{"start":{"line":90,"column":40},"end":{"line":90,"column":72}}]},"14":{"line":99,"type":"if","locations":[{"start":{"line":99,"column":2},"end":{"line":99,"column":2}},{"start":{"line":99,"column":2},"end":{"line":99,"column":2}}]},"15":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"16":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"17":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"18":{"line":123,"type":"if","locations":[{"start":{"line":123,"column":2},"end":{"line":123,"column":2}},{"start":{"line":123,"column":2},"end":{"line":123,"column":2}}]},"19":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":2},"end":{"line":125,"column":2}},{"start":{"line":125,"column":2},"end":{"line":125,"column":2}}]},"20":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":2},"end":{"line":133,"column":2}},{"start":{"line":133,"column":2},"end":{"line":133,"column":2}}]},"21":{"line":133,"type":"binary-expr","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":36}},{"start":{"line":133,"column":40},"end":{"line":133,"column":57}},{"start":{"line":133,"column":61},"end":{"line":133,"column":82}},{"start":{"line":134,"column":4},"end":{"line":134,"column":48}}]},"22":{"line":140,"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":140,"column":4}},{"start":{"line":140,"column":4},"end":{"line":140,"column":4}}]},"23":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":2},"end":{"line":153,"column":2}},{"start":{"line":153,"column":2},"end":{"line":153,"column":2}}]},"24":{"line":153,"type":"binary-expr","locations":[{"start":{"line":153,"column":6},"end":{"line":153,"column":37}},{"start":{"line":153,"column":41},"end":{"line":153,"column":59}}]},"25":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":2},"end":{"line":155,"column":2}},{"start":{"line":155,"column":2},"end":{"line":155,"column":2}}]},"26":{"line":156,"type":"if","locations":[{"start":{"line":156,"column":4},"end":{"line":156,"column":4}},{"start":{"line":156,"column":4},"end":{"line":156,"column":4}}]},"27":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":8},"end":{"line":156,"column":23}},{"start":{"line":156,"column":27},"end":{"line":156,"column":48}},{"start":{"line":156,"column":53},"end":{"line":156,"column":82}},{"start":{"line":156,"column":86},"end":{"line":156,"column":113}}]},"28":{"line":159,"type":"if","locations":[{"start":{"line":159,"column":4},"end":{"line":159,"column":4}},{"start":{"line":159,"column":4},"end":{"line":159,"column":4}}]},"29":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":4},"end":{"line":163,"column":4}},{"start":{"line":163,"column":4},"end":{"line":163,"column":4}}]},"30":{"line":170,"type":"if","locations":[{"start":{"line":170,"column":2},"end":{"line":170,"column":2}},{"start":{"line":170,"column":2},"end":{"line":170,"column":2}}]},"31":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":6},"end":{"line":170,"column":37}},{"start":{"line":170,"column":41},"end":{"line":170,"column":59}}]},"32":{"line":172,"type":"if","locations":[{"start":{"line":172,"column":2},"end":{"line":172,"column":2}},{"start":{"line":172,"column":2},"end":{"line":172,"column":2}}]},"33":{"line":172,"type":"binary-expr","locations":[{"start":{"line":172,"column":6},"end":{"line":172,"column":21}},{"start":{"line":172,"column":25},"end":{"line":172,"column":56}}]},"34":{"line":180,"type":"if","locations":[{"start":{"line":180,"column":2},"end":{"line":180,"column":2}},{"start":{"line":180,"column":2},"end":{"line":180,"column":2}}]},"35":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"36":{"line":182,"type":"binary-expr","locations":[{"start":{"line":182,"column":6},"end":{"line":182,"column":50}},{"start":{"line":182,"column":54},"end":{"line":182,"column":80}},{"start":{"line":182,"column":84},"end":{"line":182,"column":106}}]},"37":{"line":184,"type":"cond-expr","locations":[{"start":{"line":184,"column":54},"end":{"line":184,"column":65}},{"start":{"line":184,"column":68},"end":{"line":184,"column":81}}]},"38":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"39":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":2},"end":{"line":187,"column":2}},{"start":{"line":187,"column":2},"end":{"line":187,"column":2}}]},"40":{"line":188,"type":"if","locations":[{"start":{"line":188,"column":4},"end":{"line":188,"column":4}},{"start":{"line":188,"column":4},"end":{"line":188,"column":4}}]},"41":{"line":188,"type":"binary-expr","locations":[{"start":{"line":188,"column":8},"end":{"line":188,"column":39}},{"start":{"line":188,"column":43},"end":{"line":188,"column":75}}]},"42":{"line":196,"type":"if","locations":[{"start":{"line":196,"column":2},"end":{"line":196,"column":2}},{"start":{"line":196,"column":2},"end":{"line":196,"column":2}}]},"43":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":2},"end":{"line":198,"column":2}},{"start":{"line":198,"column":2},"end":{"line":198,"column":2}}]},"44":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":4},"end":{"line":199,"column":4}},{"start":{"line":199,"column":4},"end":{"line":199,"column":4}}]},"45":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"46":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"47":{"line":209,"type":"if","locations":[{"start":{"line":209,"column":4},"end":{"line":209,"column":4}},{"start":{"line":209,"column":4},"end":{"line":209,"column":4}}]},"48":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":4},"end":{"line":211,"column":4}},{"start":{"line":211,"column":4},"end":{"line":211,"column":4}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the 'Software'), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","","'use restrict';","","const aadutils = require('./aadutils');","const CONSTANTS = require('./constants');","const jws = require('jws');","","// check if two arrays have common elements","var hasCommonElem = (array1, array2) => {","  for (var i = 0; i < array1.length; i++) {","    if (array2.indexOf(array1[i]) !== -1)","      return true;","  }","  return false;","};","","/* Verify the token and return the payload"," *"," * @jwtString"," * @PEMKey"," * @options"," *   - algorithms (required)"," *   - audience (required)"," *   - allowMultiAudiencesInToken (optional, default is true)"," *   - validateIssuer (optional, default is true)"," *   - issuer (required if validateIssuer is true)"," *   - subject (optional, validate if provided)"," *   - ignoreExpiration (optional, if not set true we will validate expiration)"," * @callback"," */","exports.verify = function(jwtString, PEMKey, options, callback) {","","  /*********************************************************************","   * Checking parameters","   ********************************************************************/","","  // check the existence of callback function and options, if we don't have them, that means we have","  // less than 4 parameters passed. This is a server (code) error, we should throw.","  if (!callback)","    throw new Error('callback must be provided in jsonWebToken.verify');","  if (typeof callback !== 'function')","    throw new Error('callback in jsonWebToken.verify must be a function');","  if (!options)","    throw new Error('options must be provided in jsonWebToken.verify');","","  // check jwtString and PEMKey are provided. Since jwtString and PEMKey are generated, this is","  // a non-server error, we shouldn't throw, we just give the error back and let authentication fail.","  if (!jwtString || jwtString === '')","    return done(new Error('jwtString must be provided in jsonWebToken.verify'));","  if (!PEMKey || PEMKey === '')","    return done(new Error('PEMKey must be provided in jsonWebToken.verify'));","","  // asynchronous wrapper for callback","  var done = function() {","    var args = Array.prototype.slice.call(arguments, 0);","    return process.nextTick(function() {","      callback.apply(null, args);","    });","  };","","  // make sure we have the required fields in options","  if (!(options.audience && (typeof options.audience === 'string' || ","    (Array.isArray(options.audience) && options.audience.length > 0))))","    return done(new Error('invalid options.audience value is provided in jsonWebToken.verify'));","  if (!options.algorithms)","    return done(new Error('options.algorithms is missing in jsonWebToken.verify'));","  if (!Array.isArray(options.algorithms) || options.algorithms.length == 0 ||","    (options.algorithms.length === 1 && options.algorithms[0] === 'none'))","    return done(new Error('options.algorithms must be an array containing at least one algorithm'));","","  /*********************************************************************","   * Checking jwtString structure, getting header, payload and signature","   ********************************************************************/","","  // split jwtString, make sure we have three parts and we have signature","  var parts = jwtString.split('.');","  if (parts.length !== 3)","    return done(new Error('jwtString is malformed'));","  if (parts[2] === '')","    return done(new Error('signature is missing in jwtString'));","  ","  // decode jwsString","  var decodedToken;","  try {","    decodedToken = jws.decode(jwtString);","  } catch(err) {","    return done(new Error('failed to decode the token'));","  }","","  if (!decodedToken) {","    return done(new Error('invalid token'));","  }","","  // get header, payload and signature","  var header = decodedToken.header;","  var payload = decodedToken.payload;","  var signature = decodedToken.signature;","","  if (!header)","    return done(new Error('missing header in the token'));","  if (!payload)","    return done(new Error('missing payload in the token'));","  if (!signature)","    return done(new Error('missing signature in the token'));","","  /*********************************************************************","   * validate algorithm and signature","   ********************************************************************/","","  // header.alg should be one of the algorithms provided in options.algorithms","  if (typeof header.alg !== 'string' || header.alg === '' || header.alg === 'none' ||","    options.algorithms.indexOf(header.alg) == -1) {","    return done(new Error('invalid algorithm'));","  }","","  try {","    var valid = jws.verify(jwtString, header.alg, PEMKey);","    if (!valid)","      return done(new Error('invalid signature'));","  } catch (e) {","    return done(e);","  }","","  /*********************************************************************","   * validate payload content","   ********************************************************************/","","  // (1) issuer","  //   - check the existence and the format of payload.iss","  //   - validate if options.issuer is set","  if (typeof payload.iss !== 'string' || payload.iss === '')","    return done(new Error('invalid iss value in payload'));","  if (options.validateIssuer !== false) {","    if (!options.issuer || options.issuer === '' || (Array.isArray(options.issuer) && options.issuer.length === 0))","      return done(new Error('options.issuer is missing'));","    var valid = false;","    if (Array.isArray(options.issuer))","      valid = (options.issuer.indexOf(payload.iss) !== -1);","    else","      valid = (options.issuer === payload.iss);","    if (!valid)","      return done(new Error('jwt issuer is invalid. expected: ' + options.issuer));","  }","","  // (2) subject","  //   - check the existence and the format of payload.sub","  //   - validate if options.subject is set","  if (typeof payload.sub !== 'string' || payload.sub === '')","    return done(new Error('invalid sub value in payload'));","  if (options.subject && options.subject !== payload.sub)","      return done(new Error('jwt subject is invalid. expected: ' + options.subject));","","  // (3) audience","  //   - always validate","  //   - allow payload.aud to be an array of audience","  //   - options.audience must be a string","  //   - if there are multiple audiences, then azp claim must exist and must equal client_id","  if (typeof options.audience === 'string')","    options.audience = [options.audience, 'spn:' + options.audience];","  if (options.allowMultiAudiencesInToken === false && Array.isArray(payload.aud) && payload.aud.length > 1)","    return done(new Error('mulitple audience in token is not allowed'));","  var payload_audience = Array.isArray(payload.aud) ? payload.aud : [payload.aud];","  if (!hasCommonElem(options.audience, payload_audience))","    return done(new Error('jwt audience is invalid. expected: ' + options.audience));","  if (payload_audience.length > 1) {","    if (typeof payload.azp !== 'string' || payload.azp !== options.clientID)","      return done(new Error('jwt azp is invalid, expected: ' + options.clientID));","  }","","","  // (4) expiration","  //   - check the existence and the format of payload.exp","  //   - validate unless options.ignoreExpiration is set true","  if (typeof payload.exp !== 'number')","    return done(new Error('invalid exp value in payload'));","  if (!options.ignoreExpiration) {","    if (Math.floor(Date.now() / 1000) >= payload.exp + options.clockSkew) {","      return done(new Error('jwt is expired'));","    }","  }","","  // (5) nbf","  //   - check if it exists","  if (payload.nbf) {","    if (typeof payload.nbf !== 'number')","      return done(new Error('nbf value in payload is not a number'));","    if (payload.nbf >= payload.exp)","      return done(new Error('nbf value in payload is not before the exp value'));","    if (payload.nbf >= Math.floor(Date.now() / 1000) + options.clockSkew)","      return done(new Error('jwt is not active'));","  }","","  /*********************************************************************","   * return the payload content","   ********************************************************************/","","  return done(null, payload);","};","","/* Generate client assertion"," *"," * @params {String} clientID"," * @params {String} token_endpoint"," * @params {String} privatePEMKey"," * @params {String} thumbprint"," * @params {Function} callback"," */","exports.generateClientAssertion = function(clientID, token_endpoint, privatePEMKey, thumbprint, callback) { ","  var header = { 'x5t': thumbprint, 'alg': 'RS256', 'typ': 'JWT' };","  var payload = {","    sub: clientID,","    iss: clientID,","    jti: Date.now() + aadutils.uid(16),","    nbf: Math.floor(Date.now()/1000),","    exp: Math.floor(Date.now()/1000) + CONSTANTS.CLIENT_ASSERTION_JWT_LIFETIME,","    aud: token_endpoint,","  };","","  var clientAssertion;","  var exception = null;","","  try {","    clientAssertion = jws.sign({","      header: header, ","      payload: payload, ","      privateKey: privatePEMKey","    }); ","  } catch (ex) {","    exception = ex;","  }","","  callback(exception, clientAssertion); ","};","",""],"l":{"24":1,"26":1,"27":1,"28":1,"31":1,"32":0,"33":0,"34":0,"36":0,"53":1,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"70":0,"71":0,"72":0,"73":0,"76":0,"77":0,"78":0,"79":0,"84":0,"86":0,"87":0,"88":0,"89":0,"91":0,"98":0,"99":0,"100":0,"101":0,"102":0,"105":0,"106":0,"107":0,"109":0,"112":0,"113":0,"117":0,"118":0,"119":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"133":0,"135":0,"138":0,"139":0,"140":0,"141":0,"143":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"162":0,"163":0,"164":0,"170":0,"171":0,"172":0,"173":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"196":0,"197":0,"198":0,"199":0,"200":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"219":0,"230":1,"231":0,"232":0,"241":0,"242":0,"244":0,"245":0,"251":0,"254":0}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/metadata.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/metadata.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":0,"18":1,"19":0,"20":1,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":1,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"Metadata","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":34,"column":42}}},"2":{"name":"getUrl","line":51,"loc":{"start":{"line":51,"column":7},"end":{"line":51,"column":25}}},"3":{"name":"getOidc","line":57,"loc":{"start":{"line":57,"column":7},"end":{"line":57,"column":26}}},"4":{"name":"getMetadata","line":63,"loc":{"start":{"line":63,"column":7},"end":{"line":63,"column":30}}},"5":{"name":"updateOidcMetadata","line":68,"loc":{"start":{"line":68,"column":40},"end":{"line":68,"column":79}}},"6":{"name":"generateOidcPEM","line":105,"loc":{"start":{"line":105,"column":37},"end":{"line":105,"column":67}}},"7":{"name":"fetch","line":154,"loc":{"start":{"line":154,"column":27},"end":{"line":154,"column":52}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":35}},"2":{"start":{"line":27,"column":0},"end":{"line":27,"column":31}},"3":{"start":{"line":28,"column":0},"end":{"line":28,"column":39}},"4":{"start":{"line":30,"column":0},"end":{"line":30,"column":43}},"5":{"start":{"line":32,"column":0},"end":{"line":32,"column":48}},"6":{"start":{"line":34,"column":0},"end":{"line":48,"column":1}},"7":{"start":{"line":35,"column":2},"end":{"line":37,"column":3}},"8":{"start":{"line":36,"column":4},"end":{"line":36,"column":60}},"9":{"start":{"line":38,"column":2},"end":{"line":40,"column":3}},"10":{"start":{"line":39,"column":4},"end":{"line":39,"column":65}},"11":{"start":{"line":43,"column":2},"end":{"line":43,"column":76}},"12":{"start":{"line":43,"column":30},"end":{"line":43,"column":74}},"13":{"start":{"line":45,"column":2},"end":{"line":45,"column":17}},"14":{"start":{"line":46,"column":2},"end":{"line":46,"column":23}},"15":{"start":{"line":47,"column":2},"end":{"line":47,"column":27}},"16":{"start":{"line":50,"column":0},"end":{"line":54,"column":3}},"17":{"start":{"line":52,"column":4},"end":{"line":52,"column":20}},"18":{"start":{"line":56,"column":0},"end":{"line":60,"column":3}},"19":{"start":{"line":58,"column":4},"end":{"line":58,"column":21}},"20":{"start":{"line":62,"column":0},"end":{"line":66,"column":3}},"21":{"start":{"line":64,"column":4},"end":{"line":64,"column":25}},"22":{"start":{"line":68,"column":0},"end":{"line":103,"column":2}},"23":{"start":{"line":69,"column":2},"end":{"line":69,"column":61}},"24":{"start":{"line":71,"column":2},"end":{"line":71,"column":20}},"25":{"start":{"line":73,"column":2},"end":{"line":73,"column":16}},"26":{"start":{"line":74,"column":2},"end":{"line":74,"column":62}},"27":{"start":{"line":75,"column":2},"end":{"line":75,"column":59}},"28":{"start":{"line":76,"column":2},"end":{"line":76,"column":55}},"29":{"start":{"line":77,"column":2},"end":{"line":77,"column":27}},"30":{"start":{"line":78,"column":2},"end":{"line":78,"column":43}},"31":{"start":{"line":79,"column":2},"end":{"line":79,"column":49}},"32":{"start":{"line":80,"column":2},"end":{"line":80,"column":19}},"33":{"start":{"line":82,"column":2},"end":{"line":82,"column":31}},"34":{"start":{"line":84,"column":2},"end":{"line":84,"column":62}},"35":{"start":{"line":85,"column":2},"end":{"line":85,"column":57}},"36":{"start":{"line":86,"column":2},"end":{"line":86,"column":53}},"37":{"start":{"line":87,"column":2},"end":{"line":87,"column":89}},"38":{"start":{"line":88,"column":2},"end":{"line":88,"column":72}},"39":{"start":{"line":89,"column":2},"end":{"line":89,"column":79}},"40":{"start":{"line":90,"column":2},"end":{"line":90,"column":83}},"41":{"start":{"line":93,"column":2},"end":{"line":102,"column":5}},"42":{"start":{"line":94,"column":4},"end":{"line":96,"column":5}},"43":{"start":{"line":95,"column":6},"end":{"line":95,"column":23}},"44":{"start":{"line":97,"column":4},"end":{"line":99,"column":5}},"45":{"start":{"line":98,"column":6},"end":{"line":98,"column":90}},"46":{"start":{"line":100,"column":4},"end":{"line":100,"column":31}},"47":{"start":{"line":101,"column":4},"end":{"line":101,"column":18}},"48":{"start":{"line":105,"column":0},"end":{"line":152,"column":2}},"49":{"start":{"line":106,"column":2},"end":{"line":106,"column":90}},"50":{"start":{"line":107,"column":2},"end":{"line":107,"column":20}},"51":{"start":{"line":108,"column":2},"end":{"line":108,"column":23}},"52":{"start":{"line":110,"column":2},"end":{"line":112,"column":3}},"53":{"start":{"line":111,"column":4},"end":{"line":111,"column":38}},"54":{"start":{"line":114,"column":2},"end":{"line":116,"column":3}},"55":{"start":{"line":115,"column":4},"end":{"line":115,"column":39}},"56":{"start":{"line":118,"column":2},"end":{"line":143,"column":5}},"57":{"start":{"line":119,"column":4},"end":{"line":119,"column":37}},"58":{"start":{"line":122,"column":4},"end":{"line":124,"column":5}},"59":{"start":{"line":123,"column":6},"end":{"line":123,"column":19}},"60":{"start":{"line":127,"column":4},"end":{"line":130,"column":5}},"61":{"start":{"line":128,"column":6},"end":{"line":128,"column":53}},"62":{"start":{"line":129,"column":6},"end":{"line":129,"column":19}},"63":{"start":{"line":133,"column":4},"end":{"line":136,"column":5}},"64":{"start":{"line":134,"column":6},"end":{"line":134,"column":54}},"65":{"start":{"line":135,"column":6},"end":{"line":135,"column":19}},"66":{"start":{"line":139,"column":4},"end":{"line":139,"column":52}},"67":{"start":{"line":140,"column":4},"end":{"line":140,"column":20}},"68":{"start":{"line":142,"column":4},"end":{"line":142,"column":18}},"69":{"start":{"line":145,"column":2},"end":{"line":146,"column":62}},"70":{"start":{"line":146,"column":4},"end":{"line":146,"column":62}},"71":{"start":{"line":148,"column":2},"end":{"line":149,"column":73}},"72":{"start":{"line":149,"column":4},"end":{"line":149,"column":73}},"73":{"start":{"line":151,"column":2},"end":{"line":151,"column":16}},"74":{"start":{"line":154,"column":0},"end":{"line":187,"column":2}},"75":{"start":{"line":155,"column":2},"end":{"line":155,"column":20}},"76":{"start":{"line":157,"column":2},"end":{"line":186,"column":5}},"77":{"start":{"line":160,"column":6},"end":{"line":170,"column":9}},"78":{"start":{"line":161,"column":8},"end":{"line":163,"column":9}},"79":{"start":{"line":162,"column":10},"end":{"line":162,"column":27}},"80":{"start":{"line":164,"column":8},"end":{"line":168,"column":9}},"81":{"start":{"line":165,"column":10},"end":{"line":165,"column":96}},"82":{"start":{"line":166,"column":10},"end":{"line":167,"column":32}},"83":{"start":{"line":169,"column":8},"end":{"line":169,"column":32}},"84":{"start":{"line":175,"column":6},"end":{"line":175,"column":59}},"85":{"start":{"line":176,"column":6},"end":{"line":176,"column":39}},"86":{"start":{"line":177,"column":6},"end":{"line":177,"column":24}},"87":{"start":{"line":181,"column":6},"end":{"line":181,"column":58}},"88":{"start":{"line":185,"column":4},"end":{"line":185,"column":29}},"89":{"start":{"line":189,"column":0},"end":{"line":189,"column":28}}},"branchMap":{"1":{"line":35,"type":"if","locations":[{"start":{"line":35,"column":2},"end":{"line":35,"column":2}},{"start":{"line":35,"column":2},"end":{"line":35,"column":2}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":2},"end":{"line":38,"column":2}},{"start":{"line":38,"column":2},"end":{"line":38,"column":2}}]},"3":{"line":38,"type":"binary-expr","locations":[{"start":{"line":38,"column":6},"end":{"line":38,"column":15}},{"start":{"line":38,"column":19},"end":{"line":38,"column":38}}]},"4":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"5":{"line":94,"type":"if","locations":[{"start":{"line":94,"column":4},"end":{"line":94,"column":4}},{"start":{"line":94,"column":4},"end":{"line":94,"column":4}}]},"6":{"line":97,"type":"if","locations":[{"start":{"line":97,"column":4},"end":{"line":97,"column":4}},{"start":{"line":97,"column":4},"end":{"line":97,"column":4}}]},"7":{"line":106,"type":"cond-expr","locations":[{"start":{"line":106,"column":68},"end":{"line":106,"column":82}},{"start":{"line":106,"column":85},"end":{"line":106,"column":89}}]},"8":{"line":106,"type":"binary-expr","locations":[{"start":{"line":106,"column":15},"end":{"line":106,"column":19}},{"start":{"line":106,"column":23},"end":{"line":106,"column":32}},{"start":{"line":106,"column":36},"end":{"line":106,"column":65}}]},"9":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":2},"end":{"line":110,"column":2}},{"start":{"line":110,"column":2},"end":{"line":110,"column":2}}]},"10":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":2},"end":{"line":114,"column":2}},{"start":{"line":114,"column":2},"end":{"line":114,"column":2}}]},"11":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"12":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"13":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]},"14":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"15":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"16":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":8}},{"start":{"line":161,"column":8},"end":{"line":161,"column":8}}]},"17":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":8}},{"start":{"line":164,"column":8},"end":{"line":164,"column":8}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the 'Software'), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","","'use strict';","","const request = require('request');","const async = require('async');","const aadutils = require('./aadutils');","","const Log = require('./logging').getLogger;","","const log = new Log('AzureAD: Metadata Parser');","","function Metadata(url, authtype, options) {","  if (!url) {","    throw new Error('Metadata: url is a required argument');","  }","  if (!authtype || authtype !== 'oidc') {","    throw new Error(`Invalid authtype. authtype must be 'oidc'`);","  }","","  // if logging level specified, switch to it.","  if (options.loggingLevel) { log.levels('console', options.loggingLevel); }","","  this.url = url;","  this.metadata = null;","  this.authtype = authtype;","}","","Object.defineProperty(Metadata, 'url', {","  get: function getUrl() {","    return this.url;","  },","});","","Object.defineProperty(Metadata, 'oidc', {","  get: function getOidc() {","    return this.oidc;","  },","});","","Object.defineProperty(Metadata, 'metadata', {","  get: function getMetadata() {","    return this.metadata;","  },","});","","Metadata.prototype.updateOidcMetadata = function updateOidcMetadata(doc, next) {","  log.info('Request to update the Open ID Connect Metadata');","","  const self = this;","","  var oidc = {};","  oidc.algorithms = doc.id_token_signing_alg_values_supported;","  oidc.authorization_endpoint = doc.authorization_endpoint;","  oidc.end_session_endpoint = doc.end_session_endpoint;","  oidc.issuer = doc.issuer;","  oidc.token_endpoint = doc.token_endpoint;","  oidc.userinfo_endpoint = doc.userinfo_endpoint;","  self.oidc = oidc;","","  const jwksUri = doc.jwks_uri;","","  log.info('Algorithm retrieved was: ', self.oidc.algorithms);","  log.info('Issuer we are using is: ', self.oidc.issuer);","  log.info('Key Endpoint we will use is: ', jwksUri);","  log.info('Authentication endpoint we will use is: ', self.oidc.authorization_endpoint);","  log.info('Token endpoint we will use is: ', self.oidc.token_endpoint);","  log.info('User info endpoint we will use is: ', self.oidc.userinfo_endpoint);","  log.info('The logout endpoint we will use is: ', self.oidc.end_session_endpoint);","","  // fetch the signing keys","  request.get(jwksUri, { json: true }, (err, response, body) => {","    if (err) {","      return next(err);","    }","    if (response.statusCode !== 200) {","      return next(new Error(`Error: ${response.statusCode} Cannot get AAD Signing Keys`));","    }","    self.oidc.keys = body.keys;","    return next();","  });","};","","Metadata.prototype.generateOidcPEM = function generateOidcPEM(kid) {","  const keys = this && this.oidc && Array.isArray(this.oidc.keys) ? this.oidc.keys : null;","  let pubKey = null;","  let foundKey = false;","","  if (!kid) {","    throw new Error('kid is missing');","  }","","  if (!keys) {","    throw new Error('keys is missing');","  }","","  keys.some((key) => {","    log.info('working on key:', key);","","    // are we working on the right key?","    if (key.kid !== kid) {","      return false;","    }","","    // check for `modulus` to be present","    if (!key.n) {","      log.warn('modulus is empty; corrupt key', key);","      return false;","    }","","    // check for `exponent` to be present","    if (!key.e) {","      log.warn('exponent is empty; corrupt key', key);","      return false;","    }","","    // generate PEM from `modulus` and `exponent`","    pubKey = aadutils.rsaPublicKeyPem(key.n, key.e);","    foundKey = true;","    ","    return pubKey;","  });","","  if (!foundKey)","    throw new Error(`a key with kid %s cannot be found`, kid);","","  if (!pubKey)","    throw new Error(`generating public key pem failed for kid: %s`, kid);","","  return pubKey;","};","","Metadata.prototype.fetch = function fetch(callback) {","  const self = this;","","  async.waterfall([","    // fetch the Federation metadata for the AAD tenant","    (next) => {","      request.get(self.url, (err, response, body) => {","        if (err) {","          return next(err);","        }","        if (response.statusCode !== 200) {","          log.error('Cannot get AAD Federation metadata from endpoint you specified', self.url);","          return next(new Error(`Error: ${response.statusCode} Cannot get AAD Federation metadata","            from ${self.url}`));","        }","        return next(null, body);","      });","    },","    // parse retrieved metadata","    (body, next) => {","      // use json parser for oidc authType","      log.info('Parsing JSON retreived from the endpoint');","      self.metadata = JSON.parse(body);","      return next(null);","    },","    // call update method for parsed metadata and authType","    (next) => {","      return self.updateOidcMetadata(self.metadata, next);","    },","  ], (waterfallError) => {","    // return err or success (err === null) to callback","    callback(waterfallError);","  });","};","","exports.Metadata = Metadata;",""],"l":{"26":1,"27":1,"28":1,"30":1,"32":1,"34":1,"35":0,"36":0,"38":0,"39":0,"43":0,"45":0,"46":0,"47":0,"50":1,"52":0,"56":1,"58":0,"62":1,"64":0,"68":1,"69":0,"71":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"82":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"93":0,"94":0,"95":0,"97":0,"98":0,"100":0,"101":0,"105":1,"106":0,"107":0,"108":0,"110":0,"111":0,"114":0,"115":0,"118":0,"119":0,"122":0,"123":0,"127":0,"128":0,"129":0,"133":0,"134":0,"135":0,"139":0,"140":0,"142":0,"145":0,"146":0,"148":0,"149":0,"151":0,"154":1,"155":0,"157":0,"160":0,"161":0,"162":0,"164":0,"165":0,"166":0,"169":0,"175":0,"176":0,"177":0,"181":0,"185":0,"189":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/logging.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/logging.js","s":{"1":1,"2":1,"3":3,"4":3,"5":1},"b":{},"f":{"1":3},"fnMap":{"1":{"name":"getLogger","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":27,"column":25}}}},"statementMap":{"1":{"start":{"line":25,"column":0},"end":{"line":25,"column":33}},"2":{"start":{"line":27,"column":0},"end":{"line":41,"column":1}},"3":{"start":{"line":28,"column":2},"end":{"line":39,"column":5}},"4":{"start":{"line":40,"column":2},"end":{"line":40,"column":13}},"5":{"start":{"line":43,"column":0},"end":{"line":43,"column":30}}},"branchMap":{},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the 'Software'), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","'use strict';","","const bunyan = require('bunyan');","","function getLogger(name) {","  const log = bunyan.createLogger({","    name,","    streams: [{","      stream: process.stderr,","      level: 'error',","      name: 'error',","    }, {","      stream: process.stdout,","      level: 'warn',","      name: 'console',","    }],","  });","  return log;","}","","exports.getLogger = getLogger;",""],"l":{"25":1,"27":1,"28":3,"40":3,"43":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/oidcstrategy.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/oidcstrategy.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":0,"30":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":1,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":1,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":1,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":1,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":1,"310":0,"311":0,"312":0,"313":0,"314":0,"315":1,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":1,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":1,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":1,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":1,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":1,"459":0,"460":0,"461":1,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0,0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0,0,0,0,0],"58":[0,0],"59":[0,0,0,0],"60":[0,0],"61":[0,0,0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0,0],"68":[0,0],"69":[0,0],"70":[0,0],"71":[0,0],"72":[0,0],"73":[0,0],"74":[0,0],"75":[0,0],"76":[0,0,0,0],"77":[0,0],"78":[0,0],"79":[0,0],"80":[0,0,0],"81":[0,0],"82":[0,0],"83":[0,0],"84":[0,0],"85":[0,0],"86":[0,0],"87":[0,0,0],"88":[0,0],"89":[0,0],"90":[0,0],"91":[0,0],"92":[0,0],"93":[0,0],"94":[0,0,0,0],"95":[0,0],"96":[0,0,0],"97":[0,0],"98":[0,0],"99":[0,0],"100":[0,0],"101":[0,0],"102":[0,0],"103":[0,0],"104":[0,0],"105":[0,0],"106":[0,0],"107":[0,0],"108":[0,0],"109":[0,0],"110":[0,0],"111":[0,0],"112":[0,0],"113":[0,0],"114":[0,0,0],"115":[0,0],"116":[0,0],"117":[0,0],"118":[0,0],"119":[0,0],"120":[0,0],"121":[0,0],"122":[0,0],"123":[0,0],"124":[0,0],"125":[0,0],"126":[0,0],"127":[0,0],"128":[0,0],"129":[0,0],"130":[0,0],"131":[0,0],"132":[0,0],"133":[0,0],"134":[0,0],"135":[0,0],"136":[0,0],"137":[0,0],"138":[0,0],"139":[0,0],"140":[0,0],"141":[0,0],"142":[0,0],"143":[0,0],"144":[0,0],"145":[0,0],"146":[0,0],"147":[0,0],"148":[0,0],"149":[0,0],"150":[0,0],"151":[0,0],"152":[0,0],"153":[0,0],"154":[0,0],"155":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"fnMap":{"1":{"name":"makeProfileObject","line":73,"loc":{"start":{"line":73,"column":0},"end":{"line":73,"column":37}}},"2":{"name":"onProfileLoaded","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":41}}},"3":{"name":"verified","line":91,"loc":{"start":{"line":91,"column":2},"end":{"line":91,"column":37}}},"4":{"name":"Strategy","line":318,"loc":{"start":{"line":318,"column":0},"end":{"line":318,"column":35}}},"5":{"name":"authenticateStrategy","line":527,"loc":{"start":{"line":527,"column":34},"end":{"line":527,"column":78}}},"6":{"name":"(anonymous_6)","line":654,"loc":{"start":{"line":654,"column":40},"end":{"line":654,"column":78}}},"7":{"name":"setOptions","line":779,"loc":{"start":{"line":779,"column":32},"end":{"line":779,"column":98}}},"8":{"name":"idTokenHandler","line":905,"loc":{"start":{"line":905,"column":37},"end":{"line":905,"column":109}}},"9":{"name":"validateResponse","line":938,"loc":{"start":{"line":938,"column":39},"end":{"line":938,"column":113}}},"10":{"name":"errorResponseHandler","line":1020,"loc":{"start":{"line":1020,"column":43},"end":{"line":1020,"column":101}}},"11":{"name":"implicitFlowHandler","line":1041,"loc":{"start":{"line":1041,"column":42},"end":{"line":1041,"column":109}}},"12":{"name":"hybridFlowHandler","line":1080,"loc":{"start":{"line":1080,"column":40},"end":{"line":1080,"column":118}}},"13":{"name":"authCodeFlowHandler","line":1124,"loc":{"start":{"line":1124,"column":42},"end":{"line":1124,"column":132}}},"14":{"name":"flowInitializationHandler","line":1251,"loc":{"start":{"line":1251,"column":48},"end":{"line":1251,"column":107}}},"15":{"name":"(anonymous_15)","line":1405,"loc":{"start":{"line":1405,"column":33},"end":{"line":1405,"column":51}}},"16":{"name":"(anonymous_16)","line":1415,"loc":{"start":{"line":1415,"column":27},"end":{"line":1415,"column":49}}}},"statementMap":{"1":{"start":{"line":29,"column":0},"end":{"line":29,"column":31}},"2":{"start":{"line":30,"column":0},"end":{"line":30,"column":39}},"3":{"start":{"line":31,"column":0},"end":{"line":31,"column":46}},"4":{"start":{"line":32,"column":0},"end":{"line":32,"column":28}},"5":{"start":{"line":33,"column":0},"end":{"line":33,"column":27}},"6":{"start":{"line":34,"column":0},"end":{"line":34,"column":37}},"7":{"start":{"line":35,"column":0},"end":{"line":35,"column":43}},"8":{"start":{"line":36,"column":0},"end":{"line":36,"column":27}},"9":{"start":{"line":37,"column":0},"end":{"line":37,"column":42}},"10":{"start":{"line":38,"column":0},"end":{"line":38,"column":29}},"11":{"start":{"line":41,"column":0},"end":{"line":41,"column":39}},"12":{"start":{"line":42,"column":0},"end":{"line":42,"column":41}},"13":{"start":{"line":43,"column":0},"end":{"line":43,"column":38}},"14":{"start":{"line":44,"column":0},"end":{"line":44,"column":29}},"15":{"start":{"line":47,"column":0},"end":{"line":47,"column":66}},"16":{"start":{"line":48,"column":0},"end":{"line":48,"column":68}},"17":{"start":{"line":49,"column":0},"end":{"line":49,"column":43}},"18":{"start":{"line":50,"column":0},"end":{"line":50,"column":48}},"19":{"start":{"line":51,"column":0},"end":{"line":51,"column":39}},"20":{"start":{"line":52,"column":0},"end":{"line":52,"column":87}},"21":{"start":{"line":53,"column":0},"end":{"line":53,"column":84}},"22":{"start":{"line":54,"column":0},"end":{"line":54,"column":51}},"23":{"start":{"line":57,"column":0},"end":{"line":57,"column":55}},"24":{"start":{"line":59,"column":0},"end":{"line":59,"column":98}},"25":{"start":{"line":60,"column":0},"end":{"line":60,"column":17}},"26":{"start":{"line":70,"column":0},"end":{"line":70,"column":28}},"27":{"start":{"line":71,"column":0},"end":{"line":71,"column":29}},"28":{"start":{"line":73,"column":0},"end":{"line":88,"column":1}},"29":{"start":{"line":74,"column":2},"end":{"line":87,"column":4}},"30":{"start":{"line":90,"column":0},"end":{"line":126,"column":1}},"31":{"start":{"line":91,"column":2},"end":{"line":99,"column":3}},"32":{"start":{"line":92,"column":4},"end":{"line":94,"column":5}},"33":{"start":{"line":93,"column":6},"end":{"line":93,"column":33}},"34":{"start":{"line":95,"column":4},"end":{"line":97,"column":5}},"35":{"start":{"line":96,"column":6},"end":{"line":96,"column":40}},"36":{"start":{"line":98,"column":4},"end":{"line":98,"column":40}},"37":{"start":{"line":101,"column":2},"end":{"line":107,"column":4}},"38":{"start":{"line":109,"column":2},"end":{"line":109,"column":102}},"39":{"start":{"line":110,"column":2},"end":{"line":110,"column":44}},"40":{"start":{"line":112,"column":2},"end":{"line":119,"column":3}},"41":{"start":{"line":113,"column":4},"end":{"line":118,"column":26}},"42":{"start":{"line":116,"column":8},"end":{"line":116,"column":29}},"43":{"start":{"line":121,"column":2},"end":{"line":123,"column":3}},"44":{"start":{"line":122,"column":4},"end":{"line":122,"column":33}},"45":{"start":{"line":125,"column":2},"end":{"line":125,"column":54}},"46":{"start":{"line":318,"column":0},"end":{"line":515,"column":1}},"47":{"start":{"line":319,"column":2},"end":{"line":319,"column":31}},"48":{"start":{"line":328,"column":2},"end":{"line":328,"column":26}},"49":{"start":{"line":329,"column":2},"end":{"line":329,"column":38}},"50":{"start":{"line":332,"column":2},"end":{"line":332,"column":24}},"51":{"start":{"line":333,"column":2},"end":{"line":333,"column":56}},"52":{"start":{"line":335,"column":2},"end":{"line":338,"column":44}},"53":{"start":{"line":336,"column":4},"end":{"line":336,"column":43}},"54":{"start":{"line":338,"column":4},"end":{"line":338,"column":44}},"55":{"start":{"line":340,"column":2},"end":{"line":348,"column":3}},"56":{"start":{"line":345,"column":4},"end":{"line":345,"column":146}},"57":{"start":{"line":347,"column":4},"end":{"line":347,"column":174}},"58":{"start":{"line":382,"column":2},"end":{"line":382,"column":69}},"59":{"start":{"line":384,"column":2},"end":{"line":388,"column":3}},"60":{"start":{"line":386,"column":4},"end":{"line":386,"column":111}},"61":{"start":{"line":387,"column":4},"end":{"line":387,"column":121}},"62":{"start":{"line":391,"column":2},"end":{"line":391,"column":76}},"63":{"start":{"line":391,"column":30},"end":{"line":391,"column":74}},"64":{"start":{"line":392,"column":2},"end":{"line":392,"column":17}},"65":{"start":{"line":395,"column":2},"end":{"line":396,"column":60}},"66":{"start":{"line":396,"column":4},"end":{"line":396,"column":60}},"67":{"start":{"line":397,"column":2},"end":{"line":398,"column":45}},"68":{"start":{"line":398,"column":4},"end":{"line":398,"column":45}},"69":{"start":{"line":408,"column":2},"end":{"line":411,"column":3}},"70":{"start":{"line":409,"column":4},"end":{"line":409,"column":111}},"71":{"start":{"line":410,"column":4},"end":{"line":410,"column":121}},"72":{"start":{"line":414,"column":2},"end":{"line":414,"column":82}},"73":{"start":{"line":417,"column":2},"end":{"line":418,"column":26}},"74":{"start":{"line":418,"column":4},"end":{"line":418,"column":26}},"75":{"start":{"line":421,"column":2},"end":{"line":422,"column":91}},"76":{"start":{"line":437,"column":2},"end":{"line":438,"column":34}},"77":{"start":{"line":438,"column":4},"end":{"line":438,"column":34}},"78":{"start":{"line":439,"column":2},"end":{"line":440,"column":75}},"79":{"start":{"line":440,"column":4},"end":{"line":440,"column":75}},"80":{"start":{"line":442,"column":2},"end":{"line":443,"column":26}},"81":{"start":{"line":443,"column":4},"end":{"line":443,"column":26}},"82":{"start":{"line":445,"column":2},"end":{"line":446,"column":38}},"83":{"start":{"line":446,"column":4},"end":{"line":446,"column":38}},"84":{"start":{"line":448,"column":2},"end":{"line":448,"column":38}},"85":{"start":{"line":449,"column":2},"end":{"line":449,"column":45}},"86":{"start":{"line":455,"column":2},"end":{"line":456,"column":23}},"87":{"start":{"line":456,"column":4},"end":{"line":456,"column":23}},"88":{"start":{"line":457,"column":2},"end":{"line":458,"column":36}},"89":{"start":{"line":458,"column":4},"end":{"line":458,"column":36}},"90":{"start":{"line":460,"column":2},"end":{"line":461,"column":33}},"91":{"start":{"line":461,"column":4},"end":{"line":461,"column":33}},"92":{"start":{"line":462,"column":2},"end":{"line":462,"column":42}},"93":{"start":{"line":467,"column":2},"end":{"line":468,"column":25}},"94":{"start":{"line":468,"column":4},"end":{"line":468,"column":25}},"95":{"start":{"line":474,"column":2},"end":{"line":475,"column":43}},"96":{"start":{"line":475,"column":4},"end":{"line":475,"column":43}},"97":{"start":{"line":477,"column":2},"end":{"line":477,"column":27}},"98":{"start":{"line":478,"column":2},"end":{"line":478,"column":135}},"99":{"start":{"line":480,"column":2},"end":{"line":485,"column":4}},"100":{"start":{"line":488,"column":2},"end":{"line":491,"column":62}},"101":{"start":{"line":489,"column":4},"end":{"line":489,"column":57}},"102":{"start":{"line":491,"column":4},"end":{"line":491,"column":62}},"103":{"start":{"line":494,"column":2},"end":{"line":494,"column":56}},"104":{"start":{"line":495,"column":2},"end":{"line":495,"column":38}},"105":{"start":{"line":498,"column":2},"end":{"line":510,"column":3}},"106":{"start":{"line":499,"column":4},"end":{"line":509,"column":5}},"107":{"start":{"line":501,"column":6},"end":{"line":501,"column":104}},"108":{"start":{"line":502,"column":11},"end":{"line":509,"column":5}},"109":{"start":{"line":505,"column":6},"end":{"line":506,"column":127}},"110":{"start":{"line":506,"column":8},"end":{"line":506,"column":127}},"111":{"start":{"line":507,"column":6},"end":{"line":508,"column":124}},"112":{"start":{"line":508,"column":8},"end":{"line":508,"column":124}},"113":{"start":{"line":513,"column":2},"end":{"line":514,"column":91}},"114":{"start":{"line":514,"column":4},"end":{"line":514,"column":91}},"115":{"start":{"line":518,"column":0},"end":{"line":518,"column":43}},"116":{"start":{"line":527,"column":0},"end":{"line":645,"column":2}},"117":{"start":{"line":566,"column":2},"end":{"line":566,"column":20}},"118":{"start":{"line":568,"column":2},"end":{"line":568,"column":48}},"119":{"start":{"line":569,"column":2},"end":{"line":569,"column":51}},"120":{"start":{"line":570,"column":2},"end":{"line":570,"column":57}},"121":{"start":{"line":571,"column":2},"end":{"line":571,"column":49}},"122":{"start":{"line":572,"column":2},"end":{"line":572,"column":51}},"123":{"start":{"line":573,"column":2},"end":{"line":573,"column":41}},"124":{"start":{"line":574,"column":2},"end":{"line":574,"column":75}},"125":{"start":{"line":575,"column":2},"end":{"line":575,"column":77}},"126":{"start":{"line":576,"column":2},"end":{"line":576,"column":45}},"127":{"start":{"line":579,"column":2},"end":{"line":580,"column":98}},"128":{"start":{"line":580,"column":4},"end":{"line":580,"column":98}},"129":{"start":{"line":583,"column":2},"end":{"line":583,"column":158}},"130":{"start":{"line":585,"column":2},"end":{"line":585,"column":167}},"131":{"start":{"line":587,"column":2},"end":{"line":587,"column":29}},"132":{"start":{"line":589,"column":2},"end":{"line":644,"column":7}},"133":{"start":{"line":595,"column":8},"end":{"line":595,"column":68}},"134":{"start":{"line":603,"column":8},"end":{"line":603,"column":77}},"135":{"start":{"line":619,"column":8},"end":{"line":634,"column":9}},"136":{"start":{"line":621,"column":10},"end":{"line":621,"column":86}},"137":{"start":{"line":622,"column":15},"end":{"line":634,"column":9}},"138":{"start":{"line":624,"column":10},"end":{"line":624,"column":73}},"139":{"start":{"line":625,"column":15},"end":{"line":634,"column":9}},"140":{"start":{"line":627,"column":10},"end":{"line":627,"column":92}},"141":{"start":{"line":628,"column":15},"end":{"line":634,"column":9}},"142":{"start":{"line":630,"column":10},"end":{"line":630,"column":81}},"143":{"start":{"line":633,"column":10},"end":{"line":633,"column":94}},"144":{"start":{"line":640,"column":6},"end":{"line":642,"column":7}},"145":{"start":{"line":641,"column":8},"end":{"line":641,"column":79}},"146":{"start":{"line":643,"column":6},"end":{"line":643,"column":18}},"147":{"start":{"line":654,"column":0},"end":{"line":769,"column":2}},"148":{"start":{"line":655,"column":2},"end":{"line":655,"column":20}},"149":{"start":{"line":663,"column":2},"end":{"line":665,"column":128}},"150":{"start":{"line":665,"column":4},"end":{"line":665,"column":128}},"151":{"start":{"line":670,"column":2},"end":{"line":670,"column":20}},"152":{"start":{"line":672,"column":2},"end":{"line":675,"column":22}},"153":{"start":{"line":673,"column":4},"end":{"line":673,"column":23}},"154":{"start":{"line":674,"column":7},"end":{"line":675,"column":22}},"155":{"start":{"line":675,"column":4},"end":{"line":675,"column":22}},"156":{"start":{"line":677,"column":2},"end":{"line":692,"column":3}},"157":{"start":{"line":678,"column":4},"end":{"line":678,"column":30}},"158":{"start":{"line":679,"column":4},"end":{"line":679,"column":54}},"159":{"start":{"line":680,"column":4},"end":{"line":680,"column":38}},"160":{"start":{"line":681,"column":4},"end":{"line":681,"column":30}},"161":{"start":{"line":682,"column":4},"end":{"line":682,"column":32}},"162":{"start":{"line":683,"column":4},"end":{"line":691,"column":5}},"163":{"start":{"line":687,"column":6},"end":{"line":688,"column":87}},"164":{"start":{"line":688,"column":8},"end":{"line":688,"column":87}},"165":{"start":{"line":690,"column":6},"end":{"line":690,"column":48}},"166":{"start":{"line":699,"column":2},"end":{"line":723,"column":3}},"167":{"start":{"line":700,"column":4},"end":{"line":701,"column":84}},"168":{"start":{"line":701,"column":6},"end":{"line":701,"column":84}},"169":{"start":{"line":703,"column":4},"end":{"line":703,"column":14}},"170":{"start":{"line":705,"column":4},"end":{"line":708,"column":96}},"171":{"start":{"line":706,"column":6},"end":{"line":706,"column":98}},"172":{"start":{"line":708,"column":6},"end":{"line":708,"column":96}},"173":{"start":{"line":710,"column":4},"end":{"line":711,"column":93}},"174":{"start":{"line":711,"column":6},"end":{"line":711,"column":93}},"175":{"start":{"line":713,"column":4},"end":{"line":713,"column":34}},"176":{"start":{"line":714,"column":4},"end":{"line":714,"column":36}},"177":{"start":{"line":715,"column":4},"end":{"line":715,"column":40}},"178":{"start":{"line":718,"column":4},"end":{"line":719,"column":140}},"179":{"start":{"line":719,"column":6},"end":{"line":719,"column":140}},"180":{"start":{"line":720,"column":4},"end":{"line":720,"column":52}},"181":{"start":{"line":722,"column":4},"end":{"line":722,"column":67}},"182":{"start":{"line":726,"column":2},"end":{"line":729,"column":3}},"183":{"start":{"line":727,"column":4},"end":{"line":727,"column":112}},"184":{"start":{"line":728,"column":4},"end":{"line":728,"column":33}},"185":{"start":{"line":734,"column":2},"end":{"line":736,"column":142}},"186":{"start":{"line":736,"column":4},"end":{"line":736,"column":142}},"187":{"start":{"line":739,"column":2},"end":{"line":740,"column":71}},"188":{"start":{"line":740,"column":4},"end":{"line":740,"column":71}},"189":{"start":{"line":742,"column":2},"end":{"line":743,"column":125}},"190":{"start":{"line":743,"column":4},"end":{"line":743,"column":125}},"191":{"start":{"line":749,"column":2},"end":{"line":749,"column":51}},"192":{"start":{"line":752,"column":2},"end":{"line":755,"column":3}},"193":{"start":{"line":753,"column":4},"end":{"line":753,"column":80}},"194":{"start":{"line":754,"column":4},"end":{"line":754,"column":91}},"195":{"start":{"line":758,"column":2},"end":{"line":759,"column":60}},"196":{"start":{"line":759,"column":4},"end":{"line":759,"column":60}},"197":{"start":{"line":762,"column":2},"end":{"line":762,"column":32}},"198":{"start":{"line":763,"column":2},"end":{"line":763,"column":69}},"199":{"start":{"line":765,"column":2},"end":{"line":765,"column":45}},"200":{"start":{"line":766,"column":2},"end":{"line":766,"column":80}},"201":{"start":{"line":768,"column":2},"end":{"line":768,"column":16}},"202":{"start":{"line":779,"column":0},"end":{"line":893,"column":2}},"203":{"start":{"line":780,"column":2},"end":{"line":780,"column":20}},"204":{"start":{"line":782,"column":2},"end":{"line":892,"column":11}},"205":{"start":{"line":787,"column":6},"end":{"line":794,"column":24}},"206":{"start":{"line":788,"column":8},"end":{"line":793,"column":11}},"207":{"start":{"line":789,"column":10},"end":{"line":791,"column":11}},"208":{"start":{"line":790,"column":12},"end":{"line":790,"column":87}},"209":{"start":{"line":792,"column":10},"end":{"line":792,"column":54}},"210":{"start":{"line":801,"column":6},"end":{"line":802,"column":73}},"211":{"start":{"line":802,"column":8},"end":{"line":802,"column":73}},"212":{"start":{"line":803,"column":6},"end":{"line":803,"column":33}},"213":{"start":{"line":806,"column":6},"end":{"line":806,"column":127}},"214":{"start":{"line":807,"column":6},"end":{"line":807,"column":177}},"215":{"start":{"line":808,"column":6},"end":{"line":808,"column":57}},"216":{"start":{"line":809,"column":6},"end":{"line":809,"column":75}},"217":{"start":{"line":810,"column":6},"end":{"line":810,"column":77}},"218":{"start":{"line":813,"column":6},"end":{"line":817,"column":8}},"219":{"start":{"line":819,"column":6},"end":{"line":825,"column":7}},"220":{"start":{"line":821,"column":8},"end":{"line":821,"column":55}},"221":{"start":{"line":822,"column":8},"end":{"line":822,"column":38}},"222":{"start":{"line":824,"column":8},"end":{"line":824,"column":81}},"223":{"start":{"line":828,"column":6},"end":{"line":842,"column":7}},"224":{"start":{"line":829,"column":8},"end":{"line":836,"column":10}},"225":{"start":{"line":830,"column":10},"end":{"line":830,"column":21}},"226":{"start":{"line":831,"column":10},"end":{"line":834,"column":11}},"227":{"start":{"line":832,"column":12},"end":{"line":832,"column":42}},"228":{"start":{"line":835,"column":10},"end":{"line":835,"column":92}},"229":{"start":{"line":838,"column":8},"end":{"line":839,"column":111}},"230":{"start":{"line":839,"column":10},"end":{"line":839,"column":111}},"231":{"start":{"line":840,"column":8},"end":{"line":841,"column":103}},"232":{"start":{"line":841,"column":10},"end":{"line":841,"column":103}},"233":{"start":{"line":844,"column":6},"end":{"line":844,"column":34}},"234":{"start":{"line":853,"column":6},"end":{"line":854,"column":26}},"235":{"start":{"line":854,"column":8},"end":{"line":854,"column":26}},"236":{"start":{"line":857,"column":6},"end":{"line":858,"column":120}},"237":{"start":{"line":861,"column":6},"end":{"line":861,"column":48}},"238":{"start":{"line":862,"column":6},"end":{"line":863,"column":83}},"239":{"start":{"line":863,"column":8},"end":{"line":863,"column":83}},"240":{"start":{"line":864,"column":6},"end":{"line":865,"column":111}},"241":{"start":{"line":865,"column":8},"end":{"line":865,"column":111}},"242":{"start":{"line":866,"column":6},"end":{"line":866,"column":48}},"243":{"start":{"line":869,"column":6},"end":{"line":869,"column":45}},"244":{"start":{"line":872,"column":6},"end":{"line":872,"column":60}},"245":{"start":{"line":875,"column":6},"end":{"line":875,"column":64}},"246":{"start":{"line":879,"column":6},"end":{"line":882,"column":38}},"247":{"start":{"line":880,"column":8},"end":{"line":880,"column":58}},"248":{"start":{"line":882,"column":8},"end":{"line":882,"column":38}},"249":{"start":{"line":884,"column":6},"end":{"line":885,"column":89}},"250":{"start":{"line":885,"column":8},"end":{"line":885,"column":89}},"251":{"start":{"line":887,"column":6},"end":{"line":888,"column":100}},"252":{"start":{"line":888,"column":8},"end":{"line":888,"column":100}},"253":{"start":{"line":890,"column":6},"end":{"line":890,"column":24}},"254":{"start":{"line":905,"column":0},"end":{"line":926,"column":2}},"255":{"start":{"line":906,"column":2},"end":{"line":906,"column":20}},"256":{"start":{"line":908,"column":2},"end":{"line":908,"column":33}},"257":{"start":{"line":909,"column":2},"end":{"line":909,"column":34}},"258":{"start":{"line":911,"column":2},"end":{"line":925,"column":92}},"259":{"start":{"line":912,"column":4},"end":{"line":912,"column":82}},"260":{"start":{"line":913,"column":7},"end":{"line":925,"column":92}},"261":{"start":{"line":914,"column":4},"end":{"line":914,"column":96}},"262":{"start":{"line":915,"column":4},"end":{"line":915,"column":24}},"263":{"start":{"line":917,"column":4},"end":{"line":923,"column":7}},"264":{"start":{"line":918,"column":6},"end":{"line":919,"column":25}},"265":{"start":{"line":919,"column":8},"end":{"line":919,"column":25}},"266":{"start":{"line":921,"column":6},"end":{"line":921,"column":40}},"267":{"start":{"line":922,"column":6},"end":{"line":922,"column":84}},"268":{"start":{"line":925,"column":4},"end":{"line":925,"column":92}},"269":{"start":{"line":938,"column":0},"end":{"line":1011,"column":2}},"270":{"start":{"line":939,"column":2},"end":{"line":939,"column":20}},"271":{"start":{"line":941,"column":2},"end":{"line":941,"column":33}},"272":{"start":{"line":942,"column":2},"end":{"line":942,"column":25}},"273":{"start":{"line":943,"column":2},"end":{"line":943,"column":41}},"274":{"start":{"line":946,"column":2},"end":{"line":946,"column":39}},"275":{"start":{"line":947,"column":2},"end":{"line":948,"column":70}},"276":{"start":{"line":948,"column":4},"end":{"line":948,"column":70}},"277":{"start":{"line":950,"column":2},"end":{"line":950,"column":39}},"278":{"start":{"line":953,"column":2},"end":{"line":953,"column":20}},"279":{"start":{"line":954,"column":2},"end":{"line":960,"column":3}},"280":{"start":{"line":955,"column":4},"end":{"line":955,"column":65}},"281":{"start":{"line":956,"column":9},"end":{"line":960,"column":3}},"282":{"start":{"line":957,"column":4},"end":{"line":957,"column":65}},"283":{"start":{"line":959,"column":4},"end":{"line":959,"column":103}},"284":{"start":{"line":961,"column":2},"end":{"line":961,"column":42}},"285":{"start":{"line":964,"column":2},"end":{"line":1010,"column":5}},"286":{"start":{"line":965,"column":4},"end":{"line":966,"column":87}},"287":{"start":{"line":966,"column":6},"end":{"line":966,"column":87}},"288":{"start":{"line":968,"column":4},"end":{"line":968,"column":45}},"289":{"start":{"line":974,"column":4},"end":{"line":986,"column":5}},"290":{"start":{"line":975,"column":6},"end":{"line":975,"column":28}},"291":{"start":{"line":977,"column":6},"end":{"line":982,"column":87}},"292":{"start":{"line":978,"column":8},"end":{"line":978,"column":42}},"293":{"start":{"line":979,"column":11},"end":{"line":982,"column":87}},"294":{"start":{"line":980,"column":8},"end":{"line":980,"column":56}},"295":{"start":{"line":982,"column":8},"end":{"line":982,"column":87}},"296":{"start":{"line":984,"column":6},"end":{"line":985,"column":106}},"297":{"start":{"line":985,"column":8},"end":{"line":985,"column":106}},"298":{"start":{"line":989,"column":4},"end":{"line":990,"column":68}},"299":{"start":{"line":990,"column":6},"end":{"line":990,"column":68}},"300":{"start":{"line":993,"column":4},"end":{"line":997,"column":5}},"301":{"start":{"line":995,"column":6},"end":{"line":996,"column":71}},"302":{"start":{"line":996,"column":8},"end":{"line":996,"column":71}},"303":{"start":{"line":1000,"column":4},"end":{"line":1004,"column":5}},"304":{"start":{"line":1002,"column":6},"end":{"line":1003,"column":72}},"305":{"start":{"line":1003,"column":8},"end":{"line":1003,"column":72}},"306":{"start":{"line":1007,"column":4},"end":{"line":1007,"column":46}},"307":{"start":{"line":1008,"column":4},"end":{"line":1008,"column":60}},"308":{"start":{"line":1009,"column":4},"end":{"line":1009,"column":45}},"309":{"start":{"line":1020,"column":0},"end":{"line":1031,"column":2}},"310":{"start":{"line":1021,"column":2},"end":{"line":1021,"column":20}},"311":{"start":{"line":1023,"column":2},"end":{"line":1023,"column":56}},"312":{"start":{"line":1024,"column":2},"end":{"line":1025,"column":82}},"313":{"start":{"line":1025,"column":4},"end":{"line":1025,"column":82}},"314":{"start":{"line":1030,"column":2},"end":{"line":1030,"column":30}},"315":{"start":{"line":1041,"column":0},"end":{"line":1069,"column":2}},"316":{"start":{"line":1047,"column":2},"end":{"line":1047,"column":20}},"317":{"start":{"line":1049,"column":2},"end":{"line":1049,"column":102}},"318":{"start":{"line":1052,"column":2},"end":{"line":1068,"column":5}},"319":{"start":{"line":1053,"column":4},"end":{"line":1053,"column":30}},"320":{"start":{"line":1054,"column":4},"end":{"line":1054,"column":30}},"321":{"start":{"line":1056,"column":4},"end":{"line":1056,"column":84}},"322":{"start":{"line":1058,"column":4},"end":{"line":1067,"column":7}},"323":{"start":{"line":1080,"column":0},"end":{"line":1107,"column":2}},"324":{"start":{"line":1087,"column":2},"end":{"line":1087,"column":20}},"325":{"start":{"line":1089,"column":2},"end":{"line":1089,"column":136}},"326":{"start":{"line":1095,"column":2},"end":{"line":1106,"column":5}},"327":{"start":{"line":1098,"column":4},"end":{"line":1099,"column":134}},"328":{"start":{"line":1099,"column":6},"end":{"line":1099,"column":134}},"329":{"start":{"line":1101,"column":4},"end":{"line":1101,"column":30}},"330":{"start":{"line":1102,"column":4},"end":{"line":1102,"column":30}},"331":{"start":{"line":1105,"column":4},"end":{"line":1105,"column":98}},"332":{"start":{"line":1124,"column":0},"end":{"line":1242,"column":2}},"333":{"start":{"line":1131,"column":2},"end":{"line":1131,"column":20}},"334":{"start":{"line":1132,"column":2},"end":{"line":1132,"column":25}},"335":{"start":{"line":1134,"column":2},"end":{"line":1134,"column":87}},"336":{"start":{"line":1136,"column":2},"end":{"line":1136,"column":31}},"337":{"start":{"line":1137,"column":2},"end":{"line":1137,"column":31}},"338":{"start":{"line":1139,"column":2},"end":{"line":1241,"column":5}},"339":{"start":{"line":1140,"column":4},"end":{"line":1141,"column":148}},"340":{"start":{"line":1141,"column":6},"end":{"line":1141,"column":148}},"341":{"start":{"line":1143,"column":4},"end":{"line":1143,"column":42}},"342":{"start":{"line":1144,"column":4},"end":{"line":1144,"column":44}},"343":{"start":{"line":1147,"column":4},"end":{"line":1148,"column":82}},"344":{"start":{"line":1148,"column":6},"end":{"line":1148,"column":82}},"345":{"start":{"line":1151,"column":4},"end":{"line":1154,"column":5}},"346":{"start":{"line":1152,"column":6},"end":{"line":1152,"column":61}},"347":{"start":{"line":1153,"column":6},"end":{"line":1153,"column":111}},"348":{"start":{"line":1156,"column":4},"end":{"line":1156,"column":52}},"349":{"start":{"line":1157,"column":4},"end":{"line":1157,"column":54}},"350":{"start":{"line":1158,"column":4},"end":{"line":1158,"column":56}},"351":{"start":{"line":1161,"column":4},"end":{"line":1161,"column":39}},"352":{"start":{"line":1162,"column":4},"end":{"line":1162,"column":37}},"353":{"start":{"line":1164,"column":4},"end":{"line":1240,"column":7}},"354":{"start":{"line":1167,"column":6},"end":{"line":1168,"column":176}},"355":{"start":{"line":1168,"column":8},"end":{"line":1168,"column":176}},"356":{"start":{"line":1169,"column":6},"end":{"line":1170,"column":176}},"357":{"start":{"line":1170,"column":8},"end":{"line":1170,"column":176}},"358":{"start":{"line":1172,"column":6},"end":{"line":1172,"column":32}},"359":{"start":{"line":1173,"column":6},"end":{"line":1173,"column":32}},"360":{"start":{"line":1177,"column":6},"end":{"line":1239,"column":7}},"361":{"start":{"line":1179,"column":8},"end":{"line":1180,"column":131}},"362":{"start":{"line":1180,"column":10},"end":{"line":1180,"column":131}},"363":{"start":{"line":1182,"column":8},"end":{"line":1182,"column":22}},"364":{"start":{"line":1183,"column":8},"end":{"line":1187,"column":9}},"365":{"start":{"line":1184,"column":10},"end":{"line":1184,"column":69}},"366":{"start":{"line":1186,"column":10},"end":{"line":1186,"column":151}},"367":{"start":{"line":1189,"column":8},"end":{"line":1189,"column":42}},"368":{"start":{"line":1190,"column":8},"end":{"line":1190,"column":32}},"369":{"start":{"line":1191,"column":8},"end":{"line":1191,"column":50}},"370":{"start":{"line":1194,"column":8},"end":{"line":1194,"column":55}},"371":{"start":{"line":1195,"column":8},"end":{"line":1195,"column":50}},"372":{"start":{"line":1196,"column":8},"end":{"line":1224,"column":11}},"373":{"start":{"line":1197,"column":10},"end":{"line":1198,"column":139}},"374":{"start":{"line":1198,"column":12},"end":{"line":1198,"column":139}},"375":{"start":{"line":1200,"column":10},"end":{"line":1200,"column":60}},"376":{"start":{"line":1202,"column":10},"end":{"line":1202,"column":38}},"377":{"start":{"line":1204,"column":10},"end":{"line":1208,"column":11}},"378":{"start":{"line":1205,"column":12},"end":{"line":1205,"column":48}},"379":{"start":{"line":1207,"column":12},"end":{"line":1207,"column":136}},"380":{"start":{"line":1211,"column":10},"end":{"line":1212,"column":114}},"381":{"start":{"line":1212,"column":12},"end":{"line":1212,"column":114}},"382":{"start":{"line":1214,"column":10},"end":{"line":1223,"column":13}},"383":{"start":{"line":1227,"column":8},"end":{"line":1227,"column":94}},"384":{"start":{"line":1229,"column":8},"end":{"line":1238,"column":11}},"385":{"start":{"line":1251,"column":0},"end":{"line":1335,"column":2}},"386":{"start":{"line":1258,"column":2},"end":{"line":1258,"column":20}},"387":{"start":{"line":1260,"column":2},"end":{"line":1260,"column":69}},"388":{"start":{"line":1262,"column":2},"end":{"line":1267,"column":4}},"389":{"start":{"line":1269,"column":2},"end":{"line":1269,"column":71}},"390":{"start":{"line":1270,"column":2},"end":{"line":1270,"column":71}},"391":{"start":{"line":1272,"column":2},"end":{"line":1273,"column":52}},"392":{"start":{"line":1273,"column":4},"end":{"line":1273,"column":52}},"393":{"start":{"line":1274,"column":2},"end":{"line":1275,"column":50}},"394":{"start":{"line":1275,"column":4},"end":{"line":1275,"column":50}},"395":{"start":{"line":1276,"column":2},"end":{"line":1277,"column":42}},"396":{"start":{"line":1277,"column":4},"end":{"line":1277,"column":42}},"397":{"start":{"line":1278,"column":2},"end":{"line":1284,"column":3}},"398":{"start":{"line":1280,"column":4},"end":{"line":1283,"column":5}},"399":{"start":{"line":1281,"column":6},"end":{"line":1282,"column":83}},"400":{"start":{"line":1282,"column":8},"end":{"line":1282,"column":83}},"401":{"start":{"line":1286,"column":2},"end":{"line":1286,"column":20}},"402":{"start":{"line":1287,"column":2},"end":{"line":1294,"column":3}},"403":{"start":{"line":1288,"column":4},"end":{"line":1289,"column":101}},"404":{"start":{"line":1289,"column":6},"end":{"line":1289,"column":101}},"405":{"start":{"line":1291,"column":4},"end":{"line":1291,"column":39}},"406":{"start":{"line":1292,"column":4},"end":{"line":1293,"column":122}},"407":{"start":{"line":1293,"column":6},"end":{"line":1293,"column":122}},"408":{"start":{"line":1297,"column":2},"end":{"line":1297,"column":130}},"409":{"start":{"line":1298,"column":2},"end":{"line":1298,"column":46}},"410":{"start":{"line":1299,"column":2},"end":{"line":1299,"column":68}},"411":{"start":{"line":1300,"column":2},"end":{"line":1301,"column":31}},"412":{"start":{"line":1301,"column":4},"end":{"line":1301,"column":31}},"413":{"start":{"line":1303,"column":2},"end":{"line":1303,"column":45}},"414":{"start":{"line":1304,"column":2},"end":{"line":1305,"column":26}},"415":{"start":{"line":1305,"column":4},"end":{"line":1305,"column":26}},"416":{"start":{"line":1306,"column":2},"end":{"line":1307,"column":30}},"417":{"start":{"line":1307,"column":4},"end":{"line":1307,"column":30}},"418":{"start":{"line":1308,"column":2},"end":{"line":1309,"column":54}},"419":{"start":{"line":1309,"column":4},"end":{"line":1309,"column":54}},"420":{"start":{"line":1311,"column":2},"end":{"line":1318,"column":3}},"421":{"start":{"line":1312,"column":4},"end":{"line":1312,"column":33}},"422":{"start":{"line":1313,"column":4},"end":{"line":1313,"column":59}},"423":{"start":{"line":1317,"column":4},"end":{"line":1317,"column":69}},"424":{"start":{"line":1321,"column":2},"end":{"line":1321,"column":35}},"425":{"start":{"line":1324,"column":2},"end":{"line":1324,"column":83}},"426":{"start":{"line":1325,"column":2},"end":{"line":1325,"column":83}},"427":{"start":{"line":1326,"column":2},"end":{"line":1326,"column":15}},"428":{"start":{"line":1329,"column":2},"end":{"line":1332,"column":88}},"429":{"start":{"line":1330,"column":4},"end":{"line":1330,"column":88}},"430":{"start":{"line":1332,"column":4},"end":{"line":1332,"column":88}},"431":{"start":{"line":1334,"column":2},"end":{"line":1334,"column":33}},"432":{"start":{"line":1344,"column":0},"end":{"line":1398,"column":2}},"433":{"start":{"line":1345,"column":2},"end":{"line":1345,"column":77}},"434":{"start":{"line":1347,"column":2},"end":{"line":1353,"column":4}},"435":{"start":{"line":1355,"column":2},"end":{"line":1361,"column":3}},"436":{"start":{"line":1357,"column":4},"end":{"line":1360,"column":5}},"437":{"start":{"line":1358,"column":6},"end":{"line":1359,"column":89}},"438":{"start":{"line":1359,"column":8},"end":{"line":1359,"column":89}},"439":{"start":{"line":1363,"column":2},"end":{"line":1380,"column":3}},"440":{"start":{"line":1365,"column":4},"end":{"line":1365,"column":60}},"441":{"start":{"line":1366,"column":4},"end":{"line":1366,"column":82}},"442":{"start":{"line":1369,"column":4},"end":{"line":1369,"column":75}},"443":{"start":{"line":1371,"column":4},"end":{"line":1377,"column":7}},"444":{"start":{"line":1373,"column":8},"end":{"line":1376,"column":54}},"445":{"start":{"line":1374,"column":10},"end":{"line":1374,"column":27}},"446":{"start":{"line":1376,"column":10},"end":{"line":1376,"column":54}},"447":{"start":{"line":1379,"column":4},"end":{"line":1379,"column":127}},"448":{"start":{"line":1382,"column":2},"end":{"line":1382,"column":53}},"449":{"start":{"line":1384,"column":2},"end":{"line":1384,"column":49}},"450":{"start":{"line":1386,"column":2},"end":{"line":1397,"column":5}},"451":{"start":{"line":1387,"column":4},"end":{"line":1396,"column":5}},"452":{"start":{"line":1387,"column":15},"end":{"line":1387,"column":31}},"453":{"start":{"line":1389,"column":6},"end":{"line":1389,"column":18}},"454":{"start":{"line":1390,"column":6},"end":{"line":1394,"column":7}},"455":{"start":{"line":1391,"column":8},"end":{"line":1391,"column":35}},"456":{"start":{"line":1393,"column":8},"end":{"line":1393,"column":42}},"457":{"start":{"line":1395,"column":6},"end":{"line":1395,"column":30}},"458":{"start":{"line":1405,"column":0},"end":{"line":1408,"column":2}},"459":{"start":{"line":1406,"column":2},"end":{"line":1406,"column":60}},"460":{"start":{"line":1407,"column":2},"end":{"line":1407,"column":28}},"461":{"start":{"line":1415,"column":0},"end":{"line":1432,"column":2}},"462":{"start":{"line":1416,"column":2},"end":{"line":1416,"column":52}},"463":{"start":{"line":1417,"column":2},"end":{"line":1417,"column":78}},"464":{"start":{"line":1418,"column":2},"end":{"line":1418,"column":52}},"465":{"start":{"line":1419,"column":2},"end":{"line":1419,"column":78}},"466":{"start":{"line":1421,"column":2},"end":{"line":1429,"column":4}},"467":{"start":{"line":1431,"column":2},"end":{"line":1431,"column":16}},"468":{"start":{"line":1434,"column":0},"end":{"line":1434,"column":26}}},"branchMap":{"1":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"2":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":4},"end":{"line":95,"column":4}},{"start":{"line":95,"column":4},"end":{"line":95,"column":4}}]},"3":{"line":109,"type":"cond-expr","locations":[{"start":{"line":109,"column":48},"end":{"line":109,"column":75}},{"start":{"line":109,"column":78},"end":{"line":109,"column":101}}]},"4":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":2},"end":{"line":112,"column":2}},{"start":{"line":112,"column":2},"end":{"line":112,"column":2}}]},"5":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":2},"end":{"line":121,"column":2}},{"start":{"line":121,"column":2},"end":{"line":121,"column":2}}]},"6":{"line":335,"type":"if","locations":[{"start":{"line":335,"column":2},"end":{"line":335,"column":2}},{"start":{"line":335,"column":2},"end":{"line":335,"column":2}}]},"7":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":2},"end":{"line":340,"column":2}},{"start":{"line":340,"column":2},"end":{"line":340,"column":2}}]},"8":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":60},"end":{"line":345,"column":82}},{"start":{"line":345,"column":86},"end":{"line":345,"column":102}}]},"9":{"line":345,"type":"binary-expr","locations":[{"start":{"line":345,"column":104},"end":{"line":345,"column":125}},{"start":{"line":345,"column":129},"end":{"line":345,"column":144}}]},"10":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":58},"end":{"line":347,"column":80}},{"start":{"line":347,"column":84},"end":{"line":347,"column":100}}]},"11":{"line":347,"type":"binary-expr","locations":[{"start":{"line":347,"column":102},"end":{"line":347,"column":123}},{"start":{"line":347,"column":127},"end":{"line":347,"column":142}}]},"12":{"line":382,"type":"binary-expr","locations":[{"start":{"line":382,"column":14},"end":{"line":382,"column":32}},{"start":{"line":382,"column":37},"end":{"line":382,"column":67}}]},"13":{"line":384,"type":"if","locations":[{"start":{"line":384,"column":2},"end":{"line":384,"column":2}},{"start":{"line":384,"column":2},"end":{"line":384,"column":2}}]},"14":{"line":391,"type":"if","locations":[{"start":{"line":391,"column":2},"end":{"line":391,"column":2}},{"start":{"line":391,"column":2},"end":{"line":391,"column":2}}]},"15":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"16":{"line":395,"type":"binary-expr","locations":[{"start":{"line":395,"column":6},"end":{"line":395,"column":23}},{"start":{"line":395,"column":28},"end":{"line":395,"column":65}},{"start":{"line":395,"column":69},"end":{"line":395,"column":91}},{"start":{"line":395,"column":95},"end":{"line":395,"column":122}}]},"17":{"line":397,"type":"if","locations":[{"start":{"line":397,"column":2},"end":{"line":397,"column":2}},{"start":{"line":397,"column":2},"end":{"line":397,"column":2}}]},"18":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":2},"end":{"line":408,"column":2}},{"start":{"line":408,"column":2},"end":{"line":408,"column":2}}]},"19":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":2},"end":{"line":417,"column":2}},{"start":{"line":417,"column":2},"end":{"line":417,"column":2}}]},"20":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":2},"end":{"line":437,"column":2}},{"start":{"line":437,"column":2},"end":{"line":437,"column":2}}]},"21":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":2},"end":{"line":439,"column":2}},{"start":{"line":439,"column":2},"end":{"line":439,"column":2}}]},"22":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":2},"end":{"line":442,"column":2}},{"start":{"line":442,"column":2},"end":{"line":442,"column":2}}]},"23":{"line":445,"type":"if","locations":[{"start":{"line":445,"column":2},"end":{"line":445,"column":2}},{"start":{"line":445,"column":2},"end":{"line":445,"column":2}}]},"24":{"line":445,"type":"binary-expr","locations":[{"start":{"line":445,"column":6},"end":{"line":445,"column":20}},{"start":{"line":445,"column":24},"end":{"line":445,"column":54}}]},"25":{"line":455,"type":"if","locations":[{"start":{"line":455,"column":2},"end":{"line":455,"column":2}},{"start":{"line":455,"column":2},"end":{"line":455,"column":2}}]},"26":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":2},"end":{"line":457,"column":2}},{"start":{"line":457,"column":2},"end":{"line":457,"column":2}}]},"27":{"line":460,"type":"if","locations":[{"start":{"line":460,"column":2},"end":{"line":460,"column":2}},{"start":{"line":460,"column":2},"end":{"line":460,"column":2}}]},"28":{"line":467,"type":"if","locations":[{"start":{"line":467,"column":2},"end":{"line":467,"column":2}},{"start":{"line":467,"column":2},"end":{"line":467,"column":2}}]},"29":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":2},"end":{"line":474,"column":2}},{"start":{"line":474,"column":2},"end":{"line":474,"column":2}}]},"30":{"line":488,"type":"if","locations":[{"start":{"line":488,"column":2},"end":{"line":488,"column":2}},{"start":{"line":488,"column":2},"end":{"line":488,"column":2}}]},"31":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":2},"end":{"line":498,"column":2}},{"start":{"line":498,"column":2},"end":{"line":498,"column":2}}]},"32":{"line":499,"type":"if","locations":[{"start":{"line":499,"column":4},"end":{"line":499,"column":4}},{"start":{"line":499,"column":4},"end":{"line":499,"column":4}}]},"33":{"line":499,"type":"binary-expr","locations":[{"start":{"line":499,"column":8},"end":{"line":499,"column":21}},{"start":{"line":499,"column":25},"end":{"line":499,"column":46}}]},"34":{"line":502,"type":"if","locations":[{"start":{"line":502,"column":11},"end":{"line":502,"column":11}},{"start":{"line":502,"column":11},"end":{"line":502,"column":11}}]},"35":{"line":505,"type":"if","locations":[{"start":{"line":505,"column":6},"end":{"line":505,"column":6}},{"start":{"line":505,"column":6},"end":{"line":505,"column":6}}]},"36":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":6},"end":{"line":507,"column":6}},{"start":{"line":507,"column":6},"end":{"line":507,"column":6}}]},"37":{"line":513,"type":"if","locations":[{"start":{"line":513,"column":2},"end":{"line":513,"column":2}},{"start":{"line":513,"column":2},"end":{"line":513,"column":2}}]},"38":{"line":568,"type":"binary-expr","locations":[{"start":{"line":568,"column":17},"end":{"line":568,"column":24}},{"start":{"line":568,"column":28},"end":{"line":568,"column":47}}]},"39":{"line":569,"type":"binary-expr","locations":[{"start":{"line":569,"column":20},"end":{"line":569,"column":27}},{"start":{"line":569,"column":31},"end":{"line":569,"column":50}}]},"40":{"line":570,"type":"binary-expr","locations":[{"start":{"line":570,"column":23},"end":{"line":570,"column":30}},{"start":{"line":570,"column":34},"end":{"line":570,"column":56}}]},"41":{"line":571,"type":"binary-expr","locations":[{"start":{"line":571,"column":19},"end":{"line":571,"column":26}},{"start":{"line":571,"column":30},"end":{"line":571,"column":48}}]},"42":{"line":572,"type":"binary-expr","locations":[{"start":{"line":572,"column":20},"end":{"line":572,"column":27}},{"start":{"line":572,"column":31},"end":{"line":572,"column":50}}]},"43":{"line":573,"type":"binary-expr","locations":[{"start":{"line":573,"column":15},"end":{"line":573,"column":22}},{"start":{"line":573,"column":26},"end":{"line":573,"column":40}}]},"44":{"line":574,"type":"binary-expr","locations":[{"start":{"line":574,"column":32},"end":{"line":574,"column":39}},{"start":{"line":574,"column":43},"end":{"line":574,"column":74}}]},"45":{"line":575,"type":"binary-expr","locations":[{"start":{"line":575,"column":33},"end":{"line":575,"column":40}},{"start":{"line":575,"column":44},"end":{"line":575,"column":76}}]},"46":{"line":576,"type":"binary-expr","locations":[{"start":{"line":576,"column":17},"end":{"line":576,"column":24}},{"start":{"line":576,"column":28},"end":{"line":576,"column":44}}]},"47":{"line":579,"type":"if","locations":[{"start":{"line":579,"column":2},"end":{"line":579,"column":2}},{"start":{"line":579,"column":2},"end":{"line":579,"column":2}}]},"48":{"line":579,"type":"binary-expr","locations":[{"start":{"line":579,"column":6},"end":{"line":579,"column":20}},{"start":{"line":579,"column":24},"end":{"line":579,"column":72}},{"start":{"line":579,"column":76},"end":{"line":579,"column":122}}]},"49":{"line":619,"type":"if","locations":[{"start":{"line":619,"column":8},"end":{"line":619,"column":8}},{"start":{"line":619,"column":8},"end":{"line":619,"column":8}}]},"50":{"line":622,"type":"if","locations":[{"start":{"line":622,"column":15},"end":{"line":622,"column":15}},{"start":{"line":622,"column":15},"end":{"line":622,"column":15}}]},"51":{"line":622,"type":"binary-expr","locations":[{"start":{"line":622,"column":19},"end":{"line":622,"column":35}},{"start":{"line":622,"column":39},"end":{"line":622,"column":51}}]},"52":{"line":625,"type":"if","locations":[{"start":{"line":625,"column":15},"end":{"line":625,"column":15}},{"start":{"line":625,"column":15},"end":{"line":625,"column":15}}]},"53":{"line":625,"type":"binary-expr","locations":[{"start":{"line":625,"column":19},"end":{"line":625,"column":34}},{"start":{"line":625,"column":38},"end":{"line":625,"column":49}}]},"54":{"line":628,"type":"if","locations":[{"start":{"line":628,"column":15},"end":{"line":628,"column":15}},{"start":{"line":628,"column":15},"end":{"line":628,"column":15}}]},"55":{"line":640,"type":"if","locations":[{"start":{"line":640,"column":6},"end":{"line":640,"column":6}},{"start":{"line":640,"column":6},"end":{"line":640,"column":6}}]},"56":{"line":663,"type":"if","locations":[{"start":{"line":663,"column":2},"end":{"line":663,"column":2}},{"start":{"line":663,"column":2},"end":{"line":663,"column":2}}]},"57":{"line":663,"type":"binary-expr","locations":[{"start":{"line":663,"column":7},"end":{"line":663,"column":16}},{"start":{"line":663,"column":21},"end":{"line":663,"column":43}},{"start":{"line":663,"column":47},"end":{"line":663,"column":70}},{"start":{"line":664,"column":5},"end":{"line":664,"column":13}},{"start":{"line":664,"column":18},"end":{"line":664,"column":39}},{"start":{"line":664,"column":43},"end":{"line":664,"column":65}}]},"58":{"line":672,"type":"if","locations":[{"start":{"line":672,"column":2},"end":{"line":672,"column":2}},{"start":{"line":672,"column":2},"end":{"line":672,"column":2}}]},"59":{"line":672,"type":"binary-expr","locations":[{"start":{"line":672,"column":6},"end":{"line":672,"column":15}},{"start":{"line":672,"column":20},"end":{"line":672,"column":35}},{"start":{"line":672,"column":39},"end":{"line":672,"column":57}},{"start":{"line":672,"column":61},"end":{"line":672,"column":75}}]},"60":{"line":674,"type":"if","locations":[{"start":{"line":674,"column":7},"end":{"line":674,"column":7}},{"start":{"line":674,"column":7},"end":{"line":674,"column":7}}]},"61":{"line":674,"type":"binary-expr","locations":[{"start":{"line":674,"column":11},"end":{"line":674,"column":19}},{"start":{"line":674,"column":24},"end":{"line":674,"column":38}},{"start":{"line":674,"column":42},"end":{"line":674,"column":59}},{"start":{"line":674,"column":63},"end":{"line":674,"column":76}}]},"62":{"line":677,"type":"if","locations":[{"start":{"line":677,"column":2},"end":{"line":677,"column":2}},{"start":{"line":677,"column":2},"end":{"line":677,"column":2}}]},"63":{"line":683,"type":"if","locations":[{"start":{"line":683,"column":4},"end":{"line":683,"column":4}},{"start":{"line":683,"column":4},"end":{"line":683,"column":4}}]},"64":{"line":683,"type":"binary-expr","locations":[{"start":{"line":683,"column":8},"end":{"line":683,"column":20}},{"start":{"line":683,"column":24},"end":{"line":683,"column":49}}]},"65":{"line":687,"type":"if","locations":[{"start":{"line":687,"column":6},"end":{"line":687,"column":6}},{"start":{"line":687,"column":6},"end":{"line":687,"column":6}}]},"66":{"line":699,"type":"if","locations":[{"start":{"line":699,"column":2},"end":{"line":699,"column":2}},{"start":{"line":699,"column":2},"end":{"line":699,"column":2}}]},"67":{"line":699,"type":"binary-expr","locations":[{"start":{"line":699,"column":6},"end":{"line":699,"column":21}},{"start":{"line":699,"column":25},"end":{"line":699,"column":36}},{"start":{"line":699,"column":40},"end":{"line":699,"column":50}}]},"68":{"line":700,"type":"if","locations":[{"start":{"line":700,"column":4},"end":{"line":700,"column":4}},{"start":{"line":700,"column":4},"end":{"line":700,"column":4}}]},"69":{"line":705,"type":"if","locations":[{"start":{"line":705,"column":4},"end":{"line":705,"column":4}},{"start":{"line":705,"column":4},"end":{"line":705,"column":4}}]},"70":{"line":710,"type":"if","locations":[{"start":{"line":710,"column":4},"end":{"line":710,"column":4}},{"start":{"line":710,"column":4},"end":{"line":710,"column":4}}]},"71":{"line":718,"type":"if","locations":[{"start":{"line":718,"column":4},"end":{"line":718,"column":4}},{"start":{"line":718,"column":4},"end":{"line":718,"column":4}}]},"72":{"line":722,"type":"cond-expr","locations":[{"start":{"line":722,"column":34},"end":{"line":722,"column":59}},{"start":{"line":722,"column":62},"end":{"line":722,"column":66}}]},"73":{"line":726,"type":"if","locations":[{"start":{"line":726,"column":2},"end":{"line":726,"column":2}},{"start":{"line":726,"column":2},"end":{"line":726,"column":2}}]},"74":{"line":726,"type":"binary-expr","locations":[{"start":{"line":726,"column":6},"end":{"line":726,"column":37}},{"start":{"line":726,"column":41},"end":{"line":726,"column":62}}]},"75":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":2},"end":{"line":734,"column":2}},{"start":{"line":734,"column":2},"end":{"line":734,"column":2}}]},"76":{"line":734,"type":"binary-expr","locations":[{"start":{"line":734,"column":6},"end":{"line":734,"column":36}},{"start":{"line":734,"column":40},"end":{"line":734,"column":68}},{"start":{"line":735,"column":5},"end":{"line":735,"column":26}},{"start":{"line":735,"column":30},"end":{"line":735,"column":52}}]},"77":{"line":739,"type":"if","locations":[{"start":{"line":739,"column":2},"end":{"line":739,"column":2}},{"start":{"line":739,"column":2},"end":{"line":739,"column":2}}]},"78":{"line":739,"type":"binary-expr","locations":[{"start":{"line":739,"column":6},"end":{"line":739,"column":25}},{"start":{"line":739,"column":29},"end":{"line":739,"column":43}}]},"79":{"line":742,"type":"if","locations":[{"start":{"line":742,"column":2},"end":{"line":742,"column":2}},{"start":{"line":742,"column":2},"end":{"line":742,"column":2}}]},"80":{"line":742,"type":"binary-expr","locations":[{"start":{"line":742,"column":6},"end":{"line":742,"column":25}},{"start":{"line":742,"column":29},"end":{"line":742,"column":59}},{"start":{"line":742,"column":63},"end":{"line":742,"column":85}}]},"81":{"line":752,"type":"if","locations":[{"start":{"line":752,"column":2},"end":{"line":752,"column":2}},{"start":{"line":752,"column":2},"end":{"line":752,"column":2}}]},"82":{"line":752,"type":"binary-expr","locations":[{"start":{"line":752,"column":6},"end":{"line":752,"column":36}},{"start":{"line":752,"column":40},"end":{"line":752,"column":61}}]},"83":{"line":758,"type":"if","locations":[{"start":{"line":758,"column":2},"end":{"line":758,"column":2}},{"start":{"line":758,"column":2},"end":{"line":758,"column":2}}]},"84":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":10},"end":{"line":789,"column":10}},{"start":{"line":789,"column":10},"end":{"line":789,"column":10}}]},"85":{"line":801,"type":"if","locations":[{"start":{"line":801,"column":6},"end":{"line":801,"column":6}},{"start":{"line":801,"column":6},"end":{"line":801,"column":6}}]},"86":{"line":828,"type":"if","locations":[{"start":{"line":828,"column":6},"end":{"line":828,"column":6}},{"start":{"line":828,"column":6},"end":{"line":828,"column":6}}]},"87":{"line":835,"type":"binary-expr","locations":[{"start":{"line":835,"column":17},"end":{"line":835,"column":24}},{"start":{"line":835,"column":28},"end":{"line":835,"column":37}},{"start":{"line":835,"column":42},"end":{"line":835,"column":90}}]},"88":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":8},"end":{"line":838,"column":8}},{"start":{"line":838,"column":8},"end":{"line":838,"column":8}}]},"89":{"line":840,"type":"if","locations":[{"start":{"line":840,"column":8},"end":{"line":840,"column":8}},{"start":{"line":840,"column":8},"end":{"line":840,"column":8}}]},"90":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":6},"end":{"line":853,"column":6}},{"start":{"line":853,"column":6},"end":{"line":853,"column":6}}]},"91":{"line":853,"type":"binary-expr","locations":[{"start":{"line":853,"column":10},"end":{"line":853,"column":26}},{"start":{"line":853,"column":30},"end":{"line":853,"column":42}}]},"92":{"line":862,"type":"if","locations":[{"start":{"line":862,"column":6},"end":{"line":862,"column":6}},{"start":{"line":862,"column":6},"end":{"line":862,"column":6}}]},"93":{"line":864,"type":"if","locations":[{"start":{"line":864,"column":6},"end":{"line":864,"column":6}},{"start":{"line":864,"column":6},"end":{"line":864,"column":6}}]},"94":{"line":864,"type":"binary-expr","locations":[{"start":{"line":864,"column":10},"end":{"line":864,"column":36}},{"start":{"line":864,"column":40},"end":{"line":864,"column":62}},{"start":{"line":864,"column":67},"end":{"line":864,"column":90}},{"start":{"line":864,"column":94},"end":{"line":864,"column":118}}]},"95":{"line":879,"type":"if","locations":[{"start":{"line":879,"column":6},"end":{"line":879,"column":6}},{"start":{"line":879,"column":6},"end":{"line":879,"column":6}}]},"96":{"line":879,"type":"binary-expr","locations":[{"start":{"line":879,"column":10},"end":{"line":879,"column":41}},{"start":{"line":879,"column":46},"end":{"line":879,"column":76}},{"start":{"line":879,"column":80},"end":{"line":879,"column":101}}]},"97":{"line":884,"type":"if","locations":[{"start":{"line":884,"column":6},"end":{"line":884,"column":6}},{"start":{"line":884,"column":6},"end":{"line":884,"column":6}}]},"98":{"line":887,"type":"if","locations":[{"start":{"line":887,"column":6},"end":{"line":887,"column":6}},{"start":{"line":887,"column":6},"end":{"line":887,"column":6}}]},"99":{"line":887,"type":"binary-expr","locations":[{"start":{"line":887,"column":10},"end":{"line":887,"column":47}},{"start":{"line":887,"column":51},"end":{"line":887,"column":79}}]},"100":{"line":911,"type":"if","locations":[{"start":{"line":911,"column":2},"end":{"line":911,"column":2}},{"start":{"line":911,"column":2},"end":{"line":911,"column":2}}]},"101":{"line":913,"type":"if","locations":[{"start":{"line":913,"column":7},"end":{"line":913,"column":7}},{"start":{"line":913,"column":7},"end":{"line":913,"column":7}}]},"102":{"line":918,"type":"if","locations":[{"start":{"line":918,"column":6},"end":{"line":918,"column":6}},{"start":{"line":918,"column":6},"end":{"line":918,"column":6}}]},"103":{"line":947,"type":"if","locations":[{"start":{"line":947,"column":2},"end":{"line":947,"column":2}},{"start":{"line":947,"column":2},"end":{"line":947,"column":2}}]},"104":{"line":954,"type":"if","locations":[{"start":{"line":954,"column":2},"end":{"line":954,"column":2}},{"start":{"line":954,"column":2},"end":{"line":954,"column":2}}]},"105":{"line":956,"type":"if","locations":[{"start":{"line":956,"column":9},"end":{"line":956,"column":9}},{"start":{"line":956,"column":9},"end":{"line":956,"column":9}}]},"106":{"line":965,"type":"if","locations":[{"start":{"line":965,"column":4},"end":{"line":965,"column":4}},{"start":{"line":965,"column":4},"end":{"line":965,"column":4}}]},"107":{"line":974,"type":"if","locations":[{"start":{"line":974,"column":4},"end":{"line":974,"column":4}},{"start":{"line":974,"column":4},"end":{"line":974,"column":4}}]},"108":{"line":977,"type":"if","locations":[{"start":{"line":977,"column":6},"end":{"line":977,"column":6}},{"start":{"line":977,"column":6},"end":{"line":977,"column":6}}]},"109":{"line":977,"type":"binary-expr","locations":[{"start":{"line":977,"column":10},"end":{"line":977,"column":23}},{"start":{"line":977,"column":27},"end":{"line":977,"column":69}}]},"110":{"line":979,"type":"if","locations":[{"start":{"line":979,"column":11},"end":{"line":979,"column":11}},{"start":{"line":979,"column":11},"end":{"line":979,"column":11}}]},"111":{"line":979,"type":"binary-expr","locations":[{"start":{"line":979,"column":15},"end":{"line":979,"column":28}},{"start":{"line":979,"column":32},"end":{"line":979,"column":74}}]},"112":{"line":984,"type":"if","locations":[{"start":{"line":984,"column":6},"end":{"line":984,"column":6}},{"start":{"line":984,"column":6},"end":{"line":984,"column":6}}]},"113":{"line":989,"type":"if","locations":[{"start":{"line":989,"column":4},"end":{"line":989,"column":4}},{"start":{"line":989,"column":4},"end":{"line":989,"column":4}}]},"114":{"line":989,"type":"binary-expr","locations":[{"start":{"line":989,"column":8},"end":{"line":989,"column":24}},{"start":{"line":989,"column":28},"end":{"line":989,"column":50}},{"start":{"line":989,"column":54},"end":{"line":989,"column":97}}]},"115":{"line":993,"type":"if","locations":[{"start":{"line":993,"column":4},"end":{"line":993,"column":4}},{"start":{"line":993,"column":4},"end":{"line":993,"column":4}}]},"116":{"line":995,"type":"if","locations":[{"start":{"line":995,"column":6},"end":{"line":995,"column":6}},{"start":{"line":995,"column":6},"end":{"line":995,"column":6}}]},"117":{"line":1000,"type":"if","locations":[{"start":{"line":1000,"column":4},"end":{"line":1000,"column":4}},{"start":{"line":1000,"column":4},"end":{"line":1000,"column":4}}]},"118":{"line":1002,"type":"if","locations":[{"start":{"line":1002,"column":6},"end":{"line":1002,"column":6}},{"start":{"line":1002,"column":6},"end":{"line":1002,"column":6}}]},"119":{"line":1024,"type":"if","locations":[{"start":{"line":1024,"column":2},"end":{"line":1024,"column":2}},{"start":{"line":1024,"column":2},"end":{"line":1024,"column":2}}]},"120":{"line":1098,"type":"if","locations":[{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}},{"start":{"line":1098,"column":4},"end":{"line":1098,"column":4}}]},"121":{"line":1140,"type":"if","locations":[{"start":{"line":1140,"column":4},"end":{"line":1140,"column":4}},{"start":{"line":1140,"column":4},"end":{"line":1140,"column":4}}]},"122":{"line":1147,"type":"if","locations":[{"start":{"line":1147,"column":4},"end":{"line":1147,"column":4}},{"start":{"line":1147,"column":4},"end":{"line":1147,"column":4}}]},"123":{"line":1151,"type":"if","locations":[{"start":{"line":1151,"column":4},"end":{"line":1151,"column":4}},{"start":{"line":1151,"column":4},"end":{"line":1151,"column":4}}]},"124":{"line":1167,"type":"if","locations":[{"start":{"line":1167,"column":6},"end":{"line":1167,"column":6}},{"start":{"line":1167,"column":6},"end":{"line":1167,"column":6}}]},"125":{"line":1167,"type":"binary-expr","locations":[{"start":{"line":1167,"column":10},"end":{"line":1167,"column":28}},{"start":{"line":1167,"column":32},"end":{"line":1167,"column":68}}]},"126":{"line":1169,"type":"if","locations":[{"start":{"line":1169,"column":6},"end":{"line":1169,"column":6}},{"start":{"line":1169,"column":6},"end":{"line":1169,"column":6}}]},"127":{"line":1169,"type":"binary-expr","locations":[{"start":{"line":1169,"column":10},"end":{"line":1169,"column":28}},{"start":{"line":1169,"column":32},"end":{"line":1169,"column":68}}]},"128":{"line":1177,"type":"if","locations":[{"start":{"line":1177,"column":6},"end":{"line":1177,"column":6}},{"start":{"line":1177,"column":6},"end":{"line":1177,"column":6}}]},"129":{"line":1177,"type":"binary-expr","locations":[{"start":{"line":1177,"column":10},"end":{"line":1177,"column":30}},{"start":{"line":1177,"column":34},"end":{"line":1177,"column":50}}]},"130":{"line":1179,"type":"if","locations":[{"start":{"line":1179,"column":8},"end":{"line":1179,"column":8}},{"start":{"line":1179,"column":8},"end":{"line":1179,"column":8}}]},"131":{"line":1197,"type":"if","locations":[{"start":{"line":1197,"column":10},"end":{"line":1197,"column":10}},{"start":{"line":1197,"column":10},"end":{"line":1197,"column":10}}]},"132":{"line":1211,"type":"if","locations":[{"start":{"line":1211,"column":10},"end":{"line":1211,"column":10}},{"start":{"line":1211,"column":10},"end":{"line":1211,"column":10}}]},"133":{"line":1272,"type":"if","locations":[{"start":{"line":1272,"column":2},"end":{"line":1272,"column":2}},{"start":{"line":1272,"column":2},"end":{"line":1272,"column":2}}]},"134":{"line":1274,"type":"if","locations":[{"start":{"line":1274,"column":2},"end":{"line":1274,"column":2}},{"start":{"line":1274,"column":2},"end":{"line":1274,"column":2}}]},"135":{"line":1276,"type":"if","locations":[{"start":{"line":1276,"column":2},"end":{"line":1276,"column":2}},{"start":{"line":1276,"column":2},"end":{"line":1276,"column":2}}]},"136":{"line":1278,"type":"if","locations":[{"start":{"line":1278,"column":2},"end":{"line":1278,"column":2}},{"start":{"line":1278,"column":2},"end":{"line":1278,"column":2}}]},"137":{"line":1281,"type":"if","locations":[{"start":{"line":1281,"column":6},"end":{"line":1281,"column":6}},{"start":{"line":1281,"column":6},"end":{"line":1281,"column":6}}]},"138":{"line":1287,"type":"if","locations":[{"start":{"line":1287,"column":2},"end":{"line":1287,"column":2}},{"start":{"line":1287,"column":2},"end":{"line":1287,"column":2}}]},"139":{"line":1288,"type":"if","locations":[{"start":{"line":1288,"column":4},"end":{"line":1288,"column":4}},{"start":{"line":1288,"column":4},"end":{"line":1288,"column":4}}]},"140":{"line":1288,"type":"binary-expr","locations":[{"start":{"line":1288,"column":8},"end":{"line":1288,"column":20}},{"start":{"line":1288,"column":24},"end":{"line":1288,"column":42}}]},"141":{"line":1292,"type":"if","locations":[{"start":{"line":1292,"column":4},"end":{"line":1292,"column":4}},{"start":{"line":1292,"column":4},"end":{"line":1292,"column":4}}]},"142":{"line":1292,"type":"binary-expr","locations":[{"start":{"line":1292,"column":8},"end":{"line":1292,"column":15}},{"start":{"line":1292,"column":19},"end":{"line":1292,"column":55}}]},"143":{"line":1297,"type":"cond-expr","locations":[{"start":{"line":1297,"column":56},"end":{"line":1297,"column":109}},{"start":{"line":1297,"column":113},"end":{"line":1297,"column":129}}]},"144":{"line":1299,"type":"cond-expr","locations":[{"start":{"line":1299,"column":40},"end":{"line":1299,"column":60}},{"start":{"line":1299,"column":63},"end":{"line":1299,"column":67}}]},"145":{"line":1300,"type":"if","locations":[{"start":{"line":1300,"column":2},"end":{"line":1300,"column":2}},{"start":{"line":1300,"column":2},"end":{"line":1300,"column":2}}]},"146":{"line":1304,"type":"if","locations":[{"start":{"line":1304,"column":2},"end":{"line":1304,"column":2}},{"start":{"line":1304,"column":2},"end":{"line":1304,"column":2}}]},"147":{"line":1306,"type":"if","locations":[{"start":{"line":1306,"column":2},"end":{"line":1306,"column":2}},{"start":{"line":1306,"column":2},"end":{"line":1306,"column":2}}]},"148":{"line":1308,"type":"if","locations":[{"start":{"line":1308,"column":2},"end":{"line":1308,"column":2}},{"start":{"line":1308,"column":2},"end":{"line":1308,"column":2}}]},"149":{"line":1311,"type":"if","locations":[{"start":{"line":1311,"column":2},"end":{"line":1311,"column":2}},{"start":{"line":1311,"column":2},"end":{"line":1311,"column":2}}]},"150":{"line":1329,"type":"if","locations":[{"start":{"line":1329,"column":2},"end":{"line":1329,"column":2}},{"start":{"line":1329,"column":2},"end":{"line":1329,"column":2}}]},"151":{"line":1355,"type":"if","locations":[{"start":{"line":1355,"column":2},"end":{"line":1355,"column":2}},{"start":{"line":1355,"column":2},"end":{"line":1355,"column":2}}]},"152":{"line":1358,"type":"if","locations":[{"start":{"line":1358,"column":6},"end":{"line":1358,"column":6}},{"start":{"line":1358,"column":6},"end":{"line":1358,"column":6}}]},"153":{"line":1363,"type":"if","locations":[{"start":{"line":1363,"column":2},"end":{"line":1363,"column":2}},{"start":{"line":1363,"column":2},"end":{"line":1363,"column":2}}]},"154":{"line":1373,"type":"if","locations":[{"start":{"line":1373,"column":8},"end":{"line":1373,"column":8}},{"start":{"line":1373,"column":8},"end":{"line":1373,"column":8}}]},"155":{"line":1387,"type":"if","locations":[{"start":{"line":1387,"column":4},"end":{"line":1387,"column":4}},{"start":{"line":1387,"column":4},"end":{"line":1387,"column":4}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the 'Software'), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","","'use strict';","","/* eslint no-underscore-dangle: 0 */","","// third party packages","const async = require('async');","const base64url = require('base64url');","const cacheManager = require('cache-manager');","const _ = require('lodash');","const jws = require('jws');","const passport = require('passport');","const querystring = require('querystring');","const url = require('url');","const urlValidator = require('valid-url');","const util = require('util');","","// packages from this library","const aadutils = require('./aadutils');","const CONSTANTS = require('./constants');","const jwt = require('./jsonWebToken');","const jwe = require('./jwe');","","// For the following packages we get a constructor and we will use 'new' to create an instance","const InternalOAuthError = require('./errors/internaloautherror');","const InternalOpenIDError = require('./errors/internalopeniderror');","const Log = require('./logging').getLogger;","const Metadata = require('./metadata').Metadata;","const OAuth2 = require('oauth').OAuth2;","const SessionContentHandler = require('./sessionContentHandler').SessionContentHandler;","const CookieContentHandler = require('./cookieContentHandler').CookieContentHandler;","const Validator = require('./validator').Validator;","","// global variable definitions","const log = new Log('AzureAD: OIDC Passport Strategy');","","const memoryCache = cacheManager.caching({ store: 'memory', max: 3600, ttl: 1800 /* seconds */ });","const ttl = 1800; // 30 minutes cache","// Note: callback is optional in set() and del().","","// For each microsoft login page, we generate a tuple containing nonce/state/etc, and save it in session.","// 1. NONCE_LIFE_TIME is the default life time of the tuple. The default value is 3600 seconds. The life","//    time is configurable by user.","// 2. NONCE_MAX_AMOUNT is the max amount of tuples a user's session can have. We limit it to 10.","//    This value limits the amount of microsoft login page tabs a user can open before the user types","//    username and password to 10. If the user opens more than 10 login tabs, we only honor the most ","//    recent 10 tabs within the life time.","const NONCE_MAX_AMOUNT = 10;","const NONCE_LIFE_TIME = 3600; // second","","function makeProfileObject(src, raw) {","  return {","    sub: src.sub,","    oid: src.oid,","    upn: src.upn,","    displayName: src.name,","    name: {","      familyName: src.family_name,","      givenName: src.given_name,","      middleName: src.middle_name,","    },","    emails: src.emails,","    _raw: raw,","    _json: src,","  };","}","","function onProfileLoaded(strategy, args) {","  function verified(err, user, info) {","    if (err) {","      return strategy.error(err);","    }","    if (!user) {","      return strategy.failWithLog(info);","    }","    return strategy.success(user, info);","  }","","  const verifyArityArgsMap = {","    8: 'iss sub profile jwtClaims access_token refresh_token params',","    7: 'iss sub profile access_token refresh_token params',","    6: 'iss sub profile access_token refresh_token',","    4: 'iss sub profile',","    3: 'iss sub',","  };","","  const arity = (strategy._passReqToCallback) ? strategy._verify.length - 1 : strategy._verify.length;","  let verifyArgs = [args.profile, verified];","","  if (verifyArityArgsMap[arity]) {","    verifyArgs = verifyArityArgsMap[arity]","      .split(' ')","      .map((argName) => {","        return args[argName];","      })","      .concat([verified]);","  }","","  if (strategy._passReqToCallback) {","    verifyArgs.unshift(args.req);","  }","","  return strategy._verify.apply(strategy, verifyArgs);","}","","/**"," * Applications must supply a `verify` callback, for which the function"," * signature is:"," *"," *     function(token, done) { ... }"," * or"," *     function(req, token, done) { .... }  "," *  "," * (passReqToCallback must be set true in options in order to use the second signature.)"," *"," * `token` is the verified and decoded bearer token provided as a credential."," * The verify callback is responsible for finding the user who posesses the"," * token, and invoking `done` with the following arguments:"," *"," *     done(err, user, info);"," *"," * If the token is not valid, `user` should be set to `false` to indicate an"," * authentication failure.  Additional token `info` can optionally be passed as"," * a third argument, which will be set by Passport at `req.authInfo`, where it"," * can be used by later middleware for access control.  This is typically used"," * to pass any scope associated with the token."," *"," * Options:"," *"," *   - `identityMetadata`   (1) Required"," *                          (2) must be a https url string"," *                          (3) Description:"," *                          the metadata endpoint provided by the Microsoft Identity Portal that provides "," *                          the keys and other important info at runtime. Examples:"," *                          <1> v1 tenant-specific endpoint"," *                          - https://login.microsoftonline.com/your_tenant_name.onmicrosoft.com/.well-known/openid-configuration"," *                          - https://login.microsoftonline.com/your_tenant_guid/.well-known/openid-configuration"," *                          <2> v1 common endpoint"," *                          - https://login.microsoftonline.com/common/.well-known/openid-configuration"," *                          <3> v2 tenant-specific endpoint"," *                          - https://login.microsoftonline.com/your_tenant_name.onmicrosoft.com/v2.0/.well-known/openid-configuration"," *                          - https://login.microsoftonline.com/your_tenant_guid/v2.0/.well-known/openid-configuration"," *                          <4> v2 common endpoint"," *                          - https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration"," *"," *   - `clientID`           (1) Required"," *                          (2) must be a string"," *                          (3) Description:"," *                          The Client ID of your app in AAD"," *"," *   - `responseType`       (1) Required"," *                          (2) must be 'code', 'code id_token', 'id_token code' or 'id_token'"," *                          (3) Description:"," *                          For login only flows use 'id_token'. For accessing resources use `code id_token`, 'id_token code' or `code`"," *"," *   - `responseMode`       (1) Required"," *                          (2) must be 'query' or 'form_post'"," *                          (3) Description:"," *                          How you get the authorization code and tokens back"," *"," *   - `redirectUrl`        (1) Required"," *                          (2) must be a https url string, unless you set `allowHttpForRedirectUrl` to true"," *                          (3) Description:"," *                          The reply URL registered in AAD for your app"," *"," *   - `allowHttpForRedirectUrl`"," *                          (1) Required to set to true if you want to use http url for redirectUrl"," *                          (2) Description:"," *                          The default value is false. It's OK to use http like 'http://localhost:3000' in the"," *                          dev environment, but in production environment https should always be used. "," *"," *   - `clientSecret`       (1) This option only applies when `responseType` is 'code', 'id_token code' or 'code id_token'."," *                              To redeem an authorization code, we can use either client secret flow or client assertion flow."," *                              (1.1) For B2C, clientSecret is required since client assertion is not supported"," *                              (1.2) For non-B2C, both flows are supported. Developer must provide either clientSecret, or "," *                                    thumbprint and privatePEMKey. We use clientSecret if it is provided, otherwise we use "," *                                    thumbprint and privatePEMKey for the client assertion flow."," *                          (2) must be a string"," *                          (3) Description:"," *                          The app key of your app from AAD. "," *                          NOTE: For B2C, the app key sometimes contains '\\', please replace '\\' with '\\\\' in the app key, otherwise"," *                          '\\' will be treated as the beginning of a escaping character"," *"," *   - `thumbprint`         (1) Required if you want to use client assertion to redeem an authorization code (non-B2C only)"," *                          (2) must be a base64url encoded string"," *                          (3) Description:"," *                          The thumbprint (hash value) of the public key"," *"," *   - `privatePEMKey`      (1) Required if you want to use client assertion to redeem an authorization code (non-B2C only)"," *                          (2) must be a pem key"," *                          (3) Description:"," *                          The private key used to sign the client assertion JWT"," *"," *   - `isB2C`              (1) Required for B2C"," *                          (2) must be true for B2C, default is false"," *                          (3) Description:"," *                          set to true if you are using B2C, default is false"," *"," *   - `validateIssuer`     (1) Required to set to false if you don't want to validate issuer, default is true"," *                          (2) Description:"," *                          For common endpoint, you should either set `validateIssuer` to false, or provide the `issuer`, since"," *                          we cannot grab the `issuer` value from metadata."," *                          For non-common endpoint, we use the `issuer` from metadata, and `validateIssuer` should be always true"," *"," *   - `issuer`             (1) Required if you are using common endpoint and set `validateIssuer` to true, or if you want to specify the allowed issuers"," *                          (2) must be a string or an array of strings"," *                          (3) Description:"," *                          For common endpoint, we use the `issuer` provided."," *                          For non-common endpoint, if the `issuer` is not provided, we use the issuer provided by metadata"," *"," *   - `passReqToCallback`  (1) Required to set true if you want to use the `function(req, token, done)` signature for the verify function, default is false"," *                          (2) Description:"," *                          Set `passReqToCallback` to true use the `function(req, token, done)` signature for the verify function"," *                          Set `passReqToCallback` to false use the `function(token, done)` signature for the verify function "," *"," *   - `useCookieInsteadOfSession`"," *                          (1) Required to set true if you don't want to use session. Default value is false."," *                          (2) Description:"," *                          Passport-azure-ad needs to save state and nonce somewhere for validation purpose. If this option is set true, it will encrypt "," *                          state and nonce and put them into cookie. If this option is false, we save state and nonce in session."," *"," *   - `cookieEncryptionKeys`"," *                          (1) Required if `useCookieInsteadOfSession` is true."," *                          (2) Description:"," *                          This must be an array of key items. Each key item has the form { key: '...', iv: '...' }, where key is any string of length 32,"," *                          and iv is any string of length 12. "," *                          We always use the first key item with AES-256-GCM algorithm to encrypt cookie, but we will try every key item when we decrypt"," *                          cookie. This helps when you want to do key roll over."," *"," *   - `scope`              (1) Optional"," *                          (2) must be a string or an array of strings"," *                          (3) Description:"," *                          list of scope values indicating the required scope of the access token for accessing the requested"," *                          resource. Ex: ['email', 'profile']. "," *                          We send 'openid' by default. For B2C, we also send 'offline_access' (to get refresh_token) and"," *                          clientID (to get access_token) by default."," *"," *   - `loggingLevel`       (1) Optional"," *                          (2) must be 'info', 'warn', 'error'"," *                          (3) Description:  "," *                          logging level  "," *"," *   - `nonceLifetime`      (1) Optional"," *                          (2) must be a positive integer"," *                          (3) Description:"," *                          the lifetime of nonce in session or cookie, default value is NONCE_LIFE_TIME"," *"," *   - `nonceMaxAmount`     (1) Optional"," *                          (2) must be a positive integer"," *                          (3) Description:"," *                          the max amount of nonce in session or cookie, default value is NONCE_MAX_AMOUNT"," *"," *   - `clockSkew`          (1) Optional"," *                          (2) must be a positive integer"," *                          (3) Description:"," *                          the clock skew (in seconds) allowed in token validation, default value is CLOCK_SKEW"," *"," * Examples:"," *"," * passport.use(new OIDCStrategy({"," *     identityMetadata: config.creds.identityMetadata,"," *     clientID: config.creds.clientID,"," *     responseType: config.creds.responseType,"," *     responseMode: config.creds.responseMode"," *     redirectUrl: config.creds.redirectUrl, "," *     allowHttpForRedirectUrl: config.creds.allowHttpForRedirectUrl,"," *     clientSecret: config.creds.clientSecret,"," *     thumbprint: config.creds.thumbprint,"," *     privatePEMKey: config.crecs.privatePEMKey,"," *     isB2C: config.creds.isB2C,"," *     validateIssuer: config.creds.validateIssuer,"," *     issuer: config.creds.issuer,"," *     scope: config.creds.scopes,"," *     passReqToCallback: config.creds.passReqToCallback,"," *     loggingLevel: config.creds.loggingLevel,"," *     nonceLifetime: config.creds.nonceLifetime,"," *     useCookieInsteadOfSession: config.creds.useCookieInsteadOfSession,"," *     cookieEncryptionKeys: config.creds.cookieEncryptionKeys"," *   },"," *   function(token, done) {"," *     User.findById(token.sub, function (err, user) {"," *       if (err) { return done(err); }"," *       if (!user) { return done(null, false); }"," *       return done(null, user, token);"," *     });"," *   }"," * ));"," *"," * For further details on HTTP Bearer authentication, refer to [The OAuth 2.0 Authorization Protocol: Bearer Tokens](http://tools.ietf.org/html/draft-ietf-oauth-v2-bearer)"," * For further details on JSON Web Token, refert to [JSON Web Token](http://tools.ietf.org/html/draft-ietf-oauth-json-web-token)"," *"," * @param {object} options - The Options."," * @param {Function} verify - The verify callback."," * @constructor"," */","function Strategy(options, verify) {","  passport.Strategy.call(this);","","  /*","   *  Caution when you want to change these values in the member functions of","   *  Strategy, don't use `this`, since `this` points to a subclass of `Strategy`.","   *  To get `Strategy`, use Object.getPrototypeOf(this).","   *  ","   *  More comments at the beginning of `Strategy.prototype.authenticate`. ","   */","  this._options = options;","  this.name = 'azuread-openidconnect';","","  // stuff related to the verify function","  this._verify = verify;","  this._passReqToCallback = !!options.passReqToCallback;","","  if (options.useCookieInsteadOfSession === true)","    this._useCookieInsteadOfSession = true;","  else","    this._useCookieInsteadOfSession = false;","","  if (!this._useCookieInsteadOfSession) {","    // For each microsoft login page tab, we generate a {state, nonce, policy, timeStamp} tuple,","    // normally user won't keep opening microsoft login page in new tabs without putting their ","    // password for more than 10 tabs, so we only keep the most recent 10 tuples in session.","    // The lifetime of each tuple is 60 minutes or user specified.","    this._sessionContentHandler = new SessionContentHandler(options.nonceMaxAmount || NONCE_MAX_AMOUNT, options.nonceLifetime || NONCE_LIFE_TIME);","  } else {","    this._cookieContentHandler = new CookieContentHandler(options.nonceMaxAmount || NONCE_MAX_AMOUNT, options.nonceLifetime || NONCE_LIFE_TIME, options.cookieEncryptionKeys);","  }","","  /* When a user is authenticated for the first time, passport adds a new field","   * to req.session called 'passport', and puts a 'user' property inside (or your","   * choice of field name and property name if you change passport._key and ","   * passport._userProperty values). req.session['passport']['user'] is usually ","   * user_id (or something similar) of the authenticated user to reduce the size","   * of session. When the user logs out, req.session['passport']['user'] will be","   * destroyed. Any request between login (when authenticated for the first time)","   * and logout will have the 'user_id' in req.session['passport']['user'], so","   * passport can fetch it, find the user object in database and put the user","   * object into a new field: req.user. Then the subsequent middlewares and the ","   * app can use the user object. This is how passport keeps user authenticated. ","   *","   * For state validation, we also take advantage of req.session. we create a new","   * field: req.session[sessionKey], where the sessionKey is our choice (in fact, ","   * this._key, see below). When we send a request with state, we put state into","   * req.session[sessionKey].state; when we expect a request with state in query","   * or body, we compare the state in query/body with the one stored in ","   * req.session[sessionKey].state, and then destroy req.session[sessionKey].state.","   * User can provide a state by using `authenticate(Strategy, {state: 'xxx'})`, or","   * one will be generated automatically. This is essentially how passport-oauth2","   * library does the state validation, and we use the same way in our library. ","   *","   * request structure will look like the following. In real request some fields","   * might not be there depending on the purpose of the request.","   *","   *    request ---|--- sessionID","   *               |--- session --- |--- ...","   *               |                |--- 'passport' ---| --- 'user': 'user_id etc'","   *               |                |---  sessionKey---| --- state: 'xxx'            ","   *               |--- ...","   *               |--- 'user':  full user info","   */","  this._key = options.sessionKey || ('OIDC: ' + options.redirectUrl);","","  if (!options.identityMetadata) {","    // default value should be https://login.microsoftonline.com/common/.well-known/openid-configuration","    log.error('OIDCStrategy requires a metadata location that contains cert data for RSA and ECDSA callback.');","    throw new TypeError(`OIDCStrategy requires a metadata location that contains cert data for RSA and ECDSA callback.`);","  }","","  // if logging level specified, switch to it.","  if (options.loggingLevel) { log.levels('console', options.loggingLevel); }","  this.log = log;","","  // clock skew. Must be a postive integer","  if (options.clockSkew && (typeof options.clockSkew !== 'number' || options.clockSkew <= 0 || options.clockSkew % 1 !== 0))","    throw new Error('clockSkew must be a positive integer');","  if (!options.clockSkew)","    options.clockSkew = CONSTANTS.CLOCK_SKEW;","","  /****************************************************************************************","   * Take care of identityMetadata","   * (1) Check if it is common endpoint","   * (2) For B2C, one cannot use the common endpoint. tenant name or guid must be specified","   * (3) We add telemetry to identityMetadata automatically","   ***************************************************************************************/","","  // check existence","  if (!options.identityMetadata) {","    log.error('OIDCStrategy requires a metadata location that contains cert data for RSA and ECDSA callback.');","    throw new TypeError(`OIDCStrategy requires a metadata location that contains cert data for RSA and ECDSA callback.`);","  }","","  // check if we are using the common endpoint","  options.isCommonEndpoint = (options.identityMetadata.indexOf('/common/') != -1);","","  // isB2C is false by default  ","  if (options.isB2C !== true)","    options.isB2C = false;","","  // add telemetry","  options.identityMetadata = options.identityMetadata.concat(`?${aadutils.getLibraryProductParameterName()}=${aadutils.getLibraryProduct()}`)","  .concat(`&${aadutils.getLibraryVersionParameterName()}=${aadutils.getLibraryVersion()}`);","","  /****************************************************************************************","   * Take care of issuer and audience","   * (1) We use user provided `issuer`, and the issuer value from metadata if the metadata","   *     comes from tenant-specific endpoint (in other words, either the identityMetadata","   *     is tenant-specific, or it is common but you provide tenantIdOrName in ","   *     passport.authenticate). ","   *","   *     For common endpoint, if `issuer` is not provided by user, and `tenantIdOrName` is ","   *     not used in passport.authenticate, then we don't know the issuer, and `validateIssuer`","   *     must be set to false","   * (2) `validateIssuer` is true by default. we validate issuer unless validateIssuer is set false","   * (3) `audience` must be the clientID of this app","   ***************************************************************************************/","  if (options.validateIssuer !== false)","    options.validateIssuer = true;","  if (!options.validateIssuer)","    log.warn(`Production environments should always validate the issuer.`);","","  if (options.issuer === '')","    options.issuer = null;","  // make issuer an array","  if (options.issuer && !Array.isArray(options.issuer))","    options.issuer = [options.issuer];","","  options.audience = options.clientID;","  options.allowMultiAudiencesInToken = false;","","  /****************************************************************************************","   * Take care of scope","   ***************************************************************************************/","   // make scope an array","  if (!options.scope)","    options.scope = [];","  if (!Array.isArray(options.scope))","    options.scope = [options.scope];","  // always have 'openid' scope for openID Connect","  if (options.scope.indexOf('openid') === -1)","    options.scope.push('openid');","  options.scope = options.scope.join(' ');","","  /****************************************************************************************","   * Check if we are using v2 endpoint, v2 doesn't have an userinfo endpoint","   ***************************************************************************************/","  if (options.identityMetadata.indexOf('/v2.0/') != -1)","    options._isV2 = true;","","  /****************************************************************************************","   * validate other necessary option items provided, we validate them here and only once","   ***************************************************************************************/","  // change responseType 'id_token code' to 'code id_token' since the former is not supported by B2C","  if (options.responseType === 'id_token code')","    options.responseType = 'code id_token';","","  var itemsToValidate = {};","  aadutils.copyObjectFields(options, itemsToValidate, ['clientID', 'redirectUrl', 'responseType', 'responseMode', 'identityMetadata']); ","","  var validatorConfiguration = {","    clientID: Validator.isNonEmpty,","    responseType: Validator.isTypeLegal,","    responseMode: Validator.isModeLegal,","    identityMetadata: Validator.isHttpsURL","  };","  ","  // redirectUrl is https by default","  if (options.allowHttpForRedirectUrl === true)","    validatorConfiguration.redirectUrl = Validator.isURL;","  else","    validatorConfiguration.redirectUrl = Validator.isHttpsURL;","","  // validator will throw exception if a required option is missing","  var validator = new Validator(validatorConfiguration);","  validator.validate(itemsToValidate);","","  // validate client secret, thumbprint and privatePEMKey for hybrid and authorization flow","  if (options.responseType !== 'id_token') {","    if (options.isB2C && !options.clientSecret) {","      // for B2C, clientSecret is required to redeem authorization code.","      throw new Error('clientSecret must be provided for B2C hybrid flow and authorization code flow.');","    } else if (!options.clientSecret) {","      // for non-B2C, we can use either clientSecret or clientAssertion to redeem authorization code.","      // Therefore, we need either clientSecret, or privatePEMKey and thumbprint (so we can create clientAssertion).","      if (!options.privatePEMKey)","        throw new Error('privatePEMKey is not provided. Please provide either clientSecret, or privatePEMKey and thumbprint.');","      if (!options.thumbprint)","        throw new Error('thumbprint is not provided. Please provide either clientSecret, or privatePEMKey and thumbprint.');","    }","  }","","  // we allow 'http' for the redirectUrl, but don't recommend using 'http'","  if (urlValidator.isHttpUri(options.redirectUrl))","    log.warn(`Using http for redirectUrl is not recommended, please consider using https`);","}","","// Inherit from `passport.Strategy`.","util.inherits(Strategy, passport.Strategy);","","/**"," * Authenticate request by delegating to an OpenID Connect provider."," *"," * @param {Object} req"," * @param {Object} options"," * @api protected"," */","Strategy.prototype.authenticate = function authenticateStrategy(req, options) {","  /* ","   * We should be careful using 'this'. Avoid the usage like `this.xxx = ...`","   * unless you know what you are doing.","   *","   * In the passport source code ","   * (https://github.com/jaredhanson/passport/blob/master/lib/middleware/authenticate.js)","   * when it attempts to call the `oidcstrategy.authenticate` function, passport","   * creates an instance inherting oidcstrategy and then calls `instance.authenticate`.  ","   * Therefore, when we come here, `this` is the instance, its prototype is the","   * actual oidcstrategy, i.e. the `Strategy`. This means:","   * (1) `this._options = `, `this._verify = `, etc only adds new fields to the","   *      instance, it doesn't change the values in oidcstrategy, i.e. `Strategy`. ","   * (2) `this._options`, `this._verify`, etc returns the field in the instance,","   *     and if there is none, returns the field in oidcstrategy, i.e. `strategy`.","   * (3) each time we call `authenticate`, we will get a brand new instance","   * ","   * If you want to change the values in `Strategy`, use ","   *      const oidcstrategy = Object.getPrototypeOf(self);","   * to get the strategy first.","   *","   * Note: Simply do `const self = Object.getPrototypeOf(this)` and use `self`","   * won't work, since the `this` instance has a couple of functions like","   * success/fail/error... which `authenticate` will call. The following is the","   * structure of `this`:","   *","   *   this","   *   | --  success:  function(user, info)","   *   | --  fail:     function(challenge, status)","   *   | --  redirect: function(url, status)","   *   | --  pass:     function()","   *   | --  __proto__:  Strategy","   *                 | --  _verify","   *                 | --  _options","   *                 | --  ...","   *                 | --  __proto__:","   *                              | --  authenticate:  function(req, options)","   *                              | --  ...","   */ ","  const self = this;","","  var resource = options && options.resourceURL;","  var customState = options && options.customState;","  var tenantIdOrName = options && options.tenantIdOrName;","  var login_hint = options && options.login_hint;","  var domain_hint = options && options.domain_hint;","  var prompt = options && options.prompt;","  var extraAuthReqQueryParams = options && options.extraAuthReqQueryParams;","  var extraTokenReqQueryParams = options && options.extraTokenReqQueryParams;","  var response = options && options.response;","","  // validate tenantIdOrName if it is provided","  if (tenantIdOrName && !CONSTANTS.TENANTNAME_REGEX.test(tenantIdOrName) && !CONSTANTS.TENANTID_REGEX.test(tenantIdOrName))","    return self.failWithLog(`In passport.authenticate: invalid tenantIdOrName ${tenantIdOrName}`);","","  // 'params': items we get from the request or metadata, such as id_token, code, policy, metadata, cacheKey, etc","  var params = { 'tenantIdOrName': tenantIdOrName, 'extraAuthReqQueryParams': extraAuthReqQueryParams, 'extraTokenReqQueryParams': extraTokenReqQueryParams }; ","  // 'oauthConfig': items needed for oauth flow (like redirection, code redemption), such as token_endpoint, userinfo_endpoint, etc","  var oauthConfig = { 'resource': resource, 'customState': customState, 'domain_hint': domain_hint, 'login_hint': login_hint, 'prompt': prompt, 'response': response };","  // 'optionsToValidate': items we need to validate id_token against, such as issuer, audience, etc  ","  var optionsToValidate = {}; ","","  async.waterfall(","    [","      /*****************************************************************************","       * Step 1. Collect information from the req and save the info into params","       ****************************************************************************/","      (next) => {","        return self.collectInfoFromReq(params, req, next, response);","      },","","      /*****************************************************************************","       * Step 2. Load metadata, use the information from 'params' and 'self._options'","       * to configure 'oauthConfig' and 'optionsToValidate'","       ****************************************************************************/","      (next) => {","        return self.setOptions(params, oauthConfig, optionsToValidate, next);","      },","","      /***************************************************************************** ","       * Step 3. Handle the flows","       *----------------------------------------------------------------------------","       * (1) implicit flow (response_type = 'id_token')","       *     This case we get a 'id_token'","       * (2) hybrid flow (response_type = 'id_token code')","       *     This case we get both 'id_token' and 'code'","       * (3) authorization code flow (response_type = 'code')","       *     This case we get a 'code', we will use it to get 'access_token' and 'id_token'","       * (4) for any other request, we will ask for authorization and initialize ","       *     the authorization process ","       ****************************************************************************/","      (next) => {","        if (params.err) {","          // handle the error","          return self._errorResponseHandler(params.err, params.err_description, next);","        } else if (!params.id_token && !params.code) {","          // ask for authorization, initialize the authorization process","          return self._flowInitializationHandler(oauthConfig, req, next);","        } else if (params.id_token && params.code) {","          // handle hybrid flow","          return self._hybridFlowHandler(params, oauthConfig, optionsToValidate, req, next);","        } else if (params.id_token) {","          // handle implicit flow","          return self._implicitFlowHandler(params, optionsToValidate, req, next);","        } else {","          // handle authorization code flow","          return self._authCodeFlowHandler(params, oauthConfig, optionsToValidate, req, next);","        }","      }","    ],","","    (waterfallError) => {","      // this code gets called after the three steps above are done","      if (waterfallError) {","        return self.failWithLog(`${aadutils.getErrorMessage(waterfallError)}`);","      }","      return true;","    });","};","","/**"," * Collect information from the request, for instance, code, err, id_token etc"," *"," * @param {Object} params "," * @param {Object} req    "," * @param {Object} next"," */","Strategy.prototype.collectInfoFromReq = function(params, req, next, response) {","  const self = this;","","  // the things we will put into 'params':","  // err, err_description, id_token, code, policy, state, nonce, cachekey, metadata","","  // -------------------------------------------------------------------------","  // we shouldn't get any access_token or refresh_token from the request","  // -------------------------------------------------------------------------","  if ((req.query && (req.query.access_token || req.query.refresh_token)) ||","    (req.body && (req.body.access_token || req.body.refresh_token)))","    return next(new Error('In collectInfoFromReq: neither access token nor refresh token is expected in the incoming request'));","","  // -------------------------------------------------------------------------","  // we might get err, id_token, code, state from the request","  // -------------------------------------------------------------------------","  var source = null;","","  if (req.query && (req.query.error || req.query.id_token || req.query.code))","    source = req.query;","  else if (req.body && (req.body.error || req.body.id_token || req.body.code))","    source = req.body;","","  if (source) {","    params.err = source.error;","    params.err_description = source.error_description;","    params.id_token = source.id_token;","    params.code = source.code;","    params.state = source.state;","    if (source.state && source.state.length >= 38) {","      // the random generated state always has 32 characters. This state is longer than 32 ","      // so it must be a custom state. We added 'CUSTOM' prefix and a random 32 byte long","      // string in front of the original custom state, now we change it back.","      if (!source.state.startsWith('CUSTOM'))","        return next(new Error(`In collectInfoFromReq: invalid custom state ${state}`));","","      source.state = source.state.substring(38);","    }","  }","","  // -------------------------------------------------------------------------","  // If we received code, id_token or err, we must have received state, now we","  // find the state/nonce/policy tuple from session.","  // If we received none of them, find policy in query       ","  // -------------------------------------------------------------------------","  if (params.id_token || params.code || params.err) {","    if (!params.state)","      return next(new Error('In collectInfoFromReq: missing state in the request'));","","    var tuple;","","    if (!self._useCookieInsteadOfSession)","      tuple = self._sessionContentHandler.findAndDeleteTupleByState(req, self._key, params.state);","    else","      tuple = self._cookieContentHandler.findAndDeleteTupleByState(req, response, params.state);","","    if (!tuple)","      return next(new Error('In collectInfoFromReq: invalid state received in the request'));","","    params.nonce = tuple['nonce'];","    params.policy = tuple['policy'];","    params.resource = tuple['resource'];","","    // user provided tenantIdOrName will be ignored for redirectUrl, since we saved the one we used in session","    if (params.tenantIdOrName)","      log.info(`user provided tenantIdOrName '${params.tenantIdOrName}' is ignored for redirectUrl, we will use the one stored in session`);","    params.tenantIdOrName = tuple['tenantIdOrName'];","  } else {","    params.policy = req.query.p ? req.query.p.toLowerCase() : null;","  }","","  // if we are not using the common endpoint, but we have tenantIdOrName, just ignore it","  if (!self._options.isCommonEndpoint && params.tenantIdOrName) {","    log.info(`identityMetadata is tenant-specific, so we ignore the tenantIdOrName '${params.tenantIdOrName}'`);","    params.tenantIdOrName = null;","  }","","  // if we are using the common endpoint and we want to validate issuer, then user has to ","  // provide issuer in config, or provide tenant id or name using tenantIdOrName option in","  // passport.authenticate. Otherwise we won't know the issuer.","  if (self._options.isCommonEndpoint && self._options.validateIssuer &&","    (!self._options.issuer && !params.tenantIdOrName))","    return next(new Error('In collectInfoFromReq: issuer or tenantIdOrName must be provided in order to validate issuer on common endpoint'));","","  // for B2C, we must have policy","  if (self._options.isB2C && !params.policy)","    return next(new Error('In collectInfoFromReq: policy is missing'));","  // for B2C, if we are using common endpoint, we must have tenantIdOrName provided","  if (self._options.isB2C && self._options.isCommonEndpoint && !params.tenantIdOrName)","    return next(new Error('In collectInfoFromReq: we are using common endpoint for B2C but tenantIdOrName is not provided'));","","  // -------------------------------------------------------------------------","  // calculate metadataUrl, create a cachekey and an Metadata object instance  ","  // we will fetch the metadata, save it into the object using the cachekey       ","  // -------------------------------------------------------------------------   ","  var metadataUrl = self._options.identityMetadata;   ","","  // if we are using common endpoint and we are given the tenantIdOrName, let's replace it","  if (self._options.isCommonEndpoint && params.tenantIdOrName) {","    metadataUrl = metadataUrl.replace('/common/', `/${params.tenantIdOrName}/`);","    log.info(`we are replacing 'common' with the tenantIdOrName ${params.tenantIdOrName}`);","  }","","  // add policy for B2C","  if (self._options.isB2C)","    metadataUrl = metadataUrl.concat(`&p=${params.policy}`);","","  // we use the metadataUrl as the cachekey","  params.cachekey = metadataUrl;","  params.metadata = new Metadata(metadataUrl, 'oidc', self._options);","","  log.info(`metadataUrl is: ${metadataUrl}`);","  log.info(`received the following items in params: ${JSON.stringify(params)}`);","","  return next();","};","","/**"," * Set the information we need for oauth flow and id_token validation"," *"," * @param {Object} params             -- parameters we get from the request"," * @param {Object} oauthConfig        -- the items we need for oauth flow"," * @param {Object} optionsToValidate  -- the items we need to validate id_token"," * @param {Function} done             -- the callback "," */","Strategy.prototype.setOptions = function setOptions(params, oauthConfig, optionsToValidate, done) {","  const self = this;","","  async.waterfall([","    // ------------------------------------------------------------------------","    // load metadata","    // ------------------------------------------------------------------------","    (next) => {","      memoryCache.wrap(params.cachekey, (cacheCallback) => {","        params.metadata.fetch((fetchMetadataError) => {","          if (fetchMetadataError) {","            return cacheCallback(new Error(`In setOptions: Unable to fetch metadata`)); ","          }","          return cacheCallback(null, params.metadata);","        });","      }, { ttl }, next);","    },","","    // ------------------------------------------------------------------------","    // set oauthConfig: the information we need for oauth flow like redeeming code/access_token","    // ------------------------------------------------------------------------","    (metadata, next) => {","      if (!metadata.oidc)","        return next(new Error('In setOptions: failed to load metadata'));","      params.metadata = metadata;","      ","      // copy the fields needed into 'oauthConfig'","      aadutils.copyObjectFields(metadata.oidc, oauthConfig, ['authorization_endpoint', 'token_endpoint', 'userinfo_endpoint']);","      aadutils.copyObjectFields(self._options, oauthConfig, ['clientID', 'clientSecret', 'privatePEMKey', 'thumbprint', 'responseType', 'responseMode', 'scope', 'redirectUrl']);","      oauthConfig.tenantIdOrName = params.tenantIdOrName;","      oauthConfig.extraAuthReqQueryParams = params.extraAuthReqQueryParams;","      oauthConfig.extraTokenReqQueryParams = params.extraTokenReqQueryParams;","","      // validate oauthConfig","      const validatorConfig = {","        authorization_endpoint: Validator.isHttpsURL,","        token_endpoint: Validator.isHttpsURL,","        userinfo_endpoint: Validator.isHttpsURLIfExists,","      };","","      try {","        // validator will throw exception if a required option is missing","        const checker = new Validator(validatorConfig);","        checker.validate(oauthConfig);","      } catch (ex) {","        return next(new Error(`In setOptions: ${aadutils.getErrorMessage(ex)}`));","      }","","      // for B2C, verify the endpoints in oauthConfig has the correct policy","      if (self._options.isB2C){","        var policyChecker = (endpoint, policy) => {","          var u = {};          ","          try {","            u = url.parse(endpoint, true);","          } catch (ex) {","          }","          return u.query && u.query.p && (policy.toLowerCase() === u.query.p.toLowerCase());","        };","        // B2C has no userinfo_endpoint, so no need to check it","        if (!policyChecker(oauthConfig.authorization_endpoint, params.policy))","          return next(new Error(`policy in ${oauthConfig.authorization_endpoint} should be ${params.policy}`));","        if (!policyChecker(oauthConfig.token_endpoint, params.policy))","          return next(new Error(`policy in ${oauthConfig.token_endpoint} should be ${params.policy}`));","      }","","      return next(null, metadata);","    },","","    // ------------------------------------------------------------------------","    // set optionsToValidate: the information we need for id_token validation.","    // we do this only if params has id_token or code, otherwise there is no","    // id_token to validate","    // ------------------------------------------------------------------------","    (metadata, next) => {","      if (!params.id_token && !params.code)","        return next(null);","","      // set items from self._options","      aadutils.copyObjectFields(self._options, optionsToValidate, ","        ['validateIssuer', 'audience', 'allowMultiAudiencesInToken', 'ignoreExpiration', 'allowMultiAudiencesInToken']);","","      // algorithms","      var algorithms = metadata.oidc.algorithms;","      if (!algorithms)","        return next(new Error('In setOptions: algorithms is missing in metadata'));","      if (!Array.isArray(algorithms) || algorithms.length == 0 || (algorithms.length === 1 && algorithms[0] === 'none'))","        return next(new Error('In setOptions: algorithms must be an array containing at least one algorithm'));","      optionsToValidate.algorithms = algorithms;","","      // nonce","      optionsToValidate.nonce = params.nonce;","","      // clock skew","      optionsToValidate.clockSkew = self._options.clockSkew;","","      // jweKeyStore","      optionsToValidate.jweKeyStore = self._options.jweKeyStore;","","      // issuer","      // if the metadata is not coming from common endpoint, we record the issuer value from metadata","      if (!self._options.isCommonEndpoint || (self._options.isCommonEndpoint && params.tenantIdOrName))","        optionsToValidate.issuer = [metadata.oidc.issuer];","      else","        optionsToValidate.issuer = [];","      // if user provided issuer, we also record these issuer values","      if (self._options.issuer)","        optionsToValidate.issuer = optionsToValidate.issuer.concat(self._options.issuer);","      // if we don't get any issuer value and we want to validate issuer, we should fail","      if (optionsToValidate.issuer.length === 0 && self._options.validateIssuer)","        return next(new Error('In setOptions: we want to validate issuer but issuer is not found'));","","      return next(null);","    },","  ], done);","};","","/**"," * validate id_token, and pass the validated claims and the payload to callback"," * if code (resp. access_token) is provided, we will validate the c_hash (resp at_hash) as well"," *"," * @param {String} params"," * @param {String} optionsToValidate"," * @param {Object} req"," * @param {Function} next  -- when error occurs, call next(err)"," * @param {Function} callback"," */","Strategy.prototype._idTokenHandler = function idTokenHandler(params, optionsToValidate, req, next, callback) {","  const self = this;","","  var id_token = params.id_token;","  var parts = id_token.split('.');","","  if (parts.length === 3)","    return self._validateResponse(params, optionsToValidate, req, next, callback);","  else if (parts.length === 5) {","    log.info('In _idTokenHandler: we received an id_token of JWE format, we are decrypting it');","    var decrypted_token;","","    return jwe.decrypt(id_token, optionsToValidate.jweKeyStore, log, (err, decrypted_token) => {","      if(err)","        return next(err);","","      params.id_token = decrypted_token;","      return self._validateResponse(params, optionsToValidate, req, next, callback);","    });","  } else","    return next(new Error(`id_token has ${parts.length} parts, it is neither jwe nor jws`));","};","","/**"," * validate id_token, and pass the validated claims and the payload to callback"," * if code (resp. access_token) is provided, we will validate the c_hash (resp at_hash) as well"," *"," * @param {String} params"," * @param {String} optionsToValidate"," * @param {Object} req"," * @param {Function} next  -- when error occurs, call next(err)"," * @param {Function} callback"," */","Strategy.prototype._validateResponse = function validateResponse(params, optionsToValidate, req, next, callback) {","  const self = this;","","  var id_token = params.id_token;","  var code = params.code;","  var access_token = params.access_token;","","  // decode id_token","  const decoded = jws.decode(id_token);","  if (decoded == null)","    return next(new Error('In _validateResponse: Invalid JWT token'));","","  log.info('token decoded: ', decoded);","","  // get Pem Key","  var PEMkey = null;","  if (decoded.header.kid) {","    PEMkey = params.metadata.generateOidcPEM(decoded.header.kid);","  } else if (decoded.header.x5t) {","    PEMkey = params.metadata.generateOidcPEM(decoded.header.x5t);","  } else {","    return next(new Error('In _validateResponse: We did not receive a token we know how to validate'));","  }","  log.info('PEMkey generated: ' + PEMkey);","","  // verify id_token signature and claims","  return jwt.verify(id_token, PEMkey, optionsToValidate, (err, jwtClaims) => {","    if (err)","      return next(new Error(`In _validateResponse: ${aadutils.getErrorMessage(err)}`));","","    log.info(\"Claims received: \", jwtClaims);","","    // jwt checks the 'nbf', 'exp', 'aud', 'iss' claims","    // there are a few other things we will check below","","    // For B2C, check the policy","    if (self._options.isB2C) {","      var policy_in_idToken;","","      if (jwtClaims.acr && CONSTANTS.POLICY_REGEX.test(jwtClaims.acr))","        policy_in_idToken = jwtClaims.acr;","      else if (jwtClaims.tfp && CONSTANTS.POLICY_REGEX.test(jwtClaims.tfp))","        policy_in_idToken = jwtClaims.tfp.toLowerCase();","      else","        return next(new Error('In _validateResponse: invalid B2C policy in id_token'));","","      if (params.policy !== policy_in_idToken)","        return next(new Error(\"In _validateResponse: policy in id_token does not match the policy used\"));","    }","","    // check nonce","    if (!jwtClaims.nonce || jwtClaims.nonce === '' || jwtClaims.nonce !== optionsToValidate.nonce)","      return next(new Error('In _validateResponse: invalid nonce'));","","    // check c_hash","    if (jwtClaims.c_hash) {","      // checkHashValueRS256 checks if code is null, so we don't bother here","      if (!aadutils.checkHashValueRS256(code, jwtClaims.c_hash)) ","        return next(new Error(\"In _validateResponse: invalid c_hash\"));","    }","","    // check at_hash","    if (jwtClaims.at_hash) {","      // checkHashValueRS256 checks if access_token is null, so we don't bother here","      if (!aadutils.checkHashValueRS256(access_token, jwtClaims.at_hash))","        return next(new Error(\"In _validateResponse: invalid at_hash\"));","    }","","    // return jwt claims and jwt claims string","    var idTokenSegments = id_token.split('.');","    var jwtClaimsStr = base64url.decode(idTokenSegments[1]);","    return callback(jwtClaimsStr, jwtClaims);","  });","};","","/**"," * handle error response"," *"," * @params {String} err "," * @params {String} err_description"," * @params {Function} next  -- callback to pass error to async.waterfall"," */","Strategy.prototype._errorResponseHandler = function errorResponseHandler(err, err_description, next) {","  const self = this;","","  log.info('Error received in the response was: ', err);","  if (err_description)","    log.info('Error description received in the response was: ', err_description);","","  // Unfortunately, we cannot return the 'error description' to the user, since ","  // it goes to http header by default and it usually contains characters that","  // http header doesn't like, which causes the program to crash. ","  return next(new Error(err));","};","","/**"," * handle the response where we only get 'id_token' in the response"," *"," * @params {Object} params"," * @params {Object} optionsToValidate "," * @params {Object} req"," * @params {Function} next  -- callback to pass error to async.waterfall"," */","Strategy.prototype._implicitFlowHandler = function implicitFlowHandler(params, optionsToValidate, req, next) {","  /* we will do the following things in order","   * (1) validate id_token","   * (2) use the claims in the id_token for user's profile","   */","","  const self = this;","","  log.info('entering Strategy.prototype._implicitFlowHandler, received id_token: ' + params.id_token);","","  // validate the id_token","  return self._idTokenHandler(params, optionsToValidate, req, next, (jwtClaimsStr, jwtClaims) => {","    const sub = jwtClaims.sub;","    const iss = jwtClaims.iss;","","    log.info('we are in implicit flow, use the content in id_token as the profile');","","    return onProfileLoaded(self, {","      req,","      sub,","      iss,","      profile: makeProfileObject(jwtClaims, jwtClaimsStr),","      jwtClaims,","      access_token: null,","      refresh_token: null,","      params: null","    });","  });","};","","/**"," * handle the response where we get 'id_token' and 'code' in the response"," *"," * @params {Object} params"," * @params {Object} oauthConfig"," * @params {Object} optionsToValidate "," * @params {Object} req"," * @params {Function} next  -- callback to pass error to async.waterfall"," */","Strategy.prototype._hybridFlowHandler = function hybridFlowHandler(params, oauthConfig, optionsToValidate, req, next) {","  /* we will do the following things in order","   * (1) validate the id_token and the code","   * (2) if there is no userinfo token needed (or ignored if using AAD v2 ), we use ","   *     the claims in id_token for user's profile","   * (3) if userinfo token is needed, we will use the 'code' and the authorization code flow","   */","  const self = this;","","  log.info('entering Strategy.prototype._hybridFlowHandler, received code: ' + params.code + ', received id_token: ' + params.id_token);","","  // save nonce, since if we use the authorization code flow later, we have to check ","  // nonce again.","","  // validate the id_token and the code","  return self._idTokenHandler(params, optionsToValidate, req, next, (jwtClaimsStr, jwtClaims) => {","    // c_hash is required for 'code id_token' flow. If we have c_hash, then _validateResponse already","    // validates it; otherwise, _validateResponse ignores the c_hash check, and we check here","    if (!jwtClaims.c_hash)","      return next(new Error(\"In _hybridFlowHandler: we are in hybrid flow using code id_token, but c_hash is not found in id_token\"));","","    const sub = jwtClaims.sub;","    const iss = jwtClaims.iss;","","    // now we use the authorization code flow","    return self._authCodeFlowHandler(params, oauthConfig, optionsToValidate, req, next, iss, sub);","  });","};","","/**"," * handle the response where we only get 'code' in the response"," *"," * @params {Object} params"," * @params {Object} oauthConfig"," * @params {Object} optionsToValidate "," * @params {Object} req"," * @params {Function} next  -- callback to pass error to async.waterfall"," * // the following are required if you used 'code id_token' flow then call this function to "," * // redeem the code for another id_token from the token endpoint. iss and sub are those "," * // in the id_token from authorization endpoint, and they should match those in the id_token"," * // from the token endpoint "," * @params {String} iss"," * @params {String} sub"," */","Strategy.prototype._authCodeFlowHandler = function authCodeFlowHandler(params, oauthConfig, optionsToValidate, req, next, iss, sub) {","  /* we will do the following things in order:","   * (1) use code to get id_token and access_token","   * (2) validate the id_token and the access_token received","   * (3) if user asks for userinfo and we are using AAD v1, then we use access_token to get","   *     userinfo, then make sure the userinfo has the same 'sub' as that in the 'id_token'","   */","  const self = this;","  var code = params.code;","","  log.info('entering Strategy.prototype._authCodeFlowHandler, received code: ' + code);","","  var issFromPrevIdToken = iss;","  var subFromPrevIdToken = sub;","","  return self._getAccessTokenBySecretOrAssertion(code, oauthConfig, next, (getOAuthAccessTokenError, items) => {","    if (getOAuthAccessTokenError)","      return next(new Error(`In _authCodeFlowHandler: failed to redeem authorization code: ${aadutils.getErrorMessage(getOAuthAccessTokenError)}`));","","    var access_token = items.access_token;","    var refresh_token = items.refresh_token;","","    // id_token should be present","    if (!items.id_token)","      return next(new Error('In _authCodeFlowHandler: id_token is not received'));","","    // token_type must be 'Bearer' ignoring the case","    if (items.token_type.toLowerCase() !== 'bearer') {","      log.info('token_type received is: ', items.token_type);","      return next(new Error(`In _authCodeFlowHandler: token_type received is not 'Bearer' ignoring the case`));","    }","","    log.info('received id_token: ', items.id_token);","    log.info('received access_token: ', access_token);","    log.info('received refresh_token: ', refresh_token);","","    // validate id_token and access_token, so put them into params","    params.access_token = access_token;","    params.id_token = items.id_token;","","    return self._idTokenHandler(params, optionsToValidate, req, next, (jwtClaimsStr, jwtClaims) => {","      // for 'code id_token' flow, check iss/sub in the id_token from the authorization endpoint","      // with those in the id_token from token endpoint","      if (issFromPrevIdToken && issFromPrevIdToken !== jwtClaims.iss)","        return next(new Error('In _authCodeFlowHandler: After redeeming the code, iss in id_token from authorize_endpoint does not match iss in id_token from token_endpoint'));","      if (subFromPrevIdToken && subFromPrevIdToken !== jwtClaims.sub)","        return next(new Error('In _authCodeFlowHandler: After redeeming the code, sub in id_token from authorize_endpoint does not match sub in id_token from token_endpoint'));","","      const sub = jwtClaims.sub;","      const iss = jwtClaims.iss;","      ","      // load the userinfo, if this is not v2 and if we don't specify the resource","      // for v1 if we don't specify the resource, then the access_token we got is for userinfo endpoint, so we can use it to get userinfo ","      if (!self._options._isV2 && !params.resource) {","        // make sure we get an access_token","        if (!access_token)","          return next(new Error(\"In _authCodeFlowHandler: we want to access userinfo endpoint, but access_token is not received\"));","","        let parsedUrl;","        try {","          parsedUrl = url.parse(oauthConfig.userinfo_endpoint, true);","        } catch (urlParseException) {","          return next(new Error(`In _authCodeFlowHandler: Failed to parse config property 'userInfoURL' with value ${oauthConfig.userinfo_endpoint}`));","        }","","        parsedUrl.query.schema = 'openid';","        delete parsedUrl.search; // delete operations are slow; should we rather just overwrite it with {}","        const userInfoURL = url.format(parsedUrl);","","        // ask oauth2 to use authorization header to bearer access token","        var oauth2 = createOauth2Instance(oauthConfig);","        oauth2.useAuthorizationHeaderforGET(true);","        return oauth2.get(userInfoURL, access_token, (getUserInfoError, body) => {","          if (getUserInfoError)","            return next(new Error(`In _authCodeFlowHandler: failed to fetch user profile: ${aadutils.getErrorMessage(getUserInfoError)}`));","","          log.info('Profile loaded from MS identity', body);","","          var userinfoReceived = null;","          // use try / catch around JSON.parse --> could fail unexpectedly","          try {","            userinfoReceived = JSON.parse(body);","          } catch (ex) {","            return next(new Error(`In _authCodeFlowHandler: failed to parse userinfo ${body}, due to ${aadutils.getErrorMessage(ex)}`));","          }","","          // make sure the 'sub' in userinfo is the same as the one in 'id_token'","          if (userinfoReceived.sub !== jwtClaims.sub)","            return next(new Error('In _authCodeFlowHandler: sub received in userinfo and id_token do not match'));","","          return onProfileLoaded(self, {","            req,","            sub,","            iss,","            profile: makeProfileObject(userinfoReceived, body),","            jwtClaims,","            access_token,","            refresh_token,","            params: items,","          });","        });","      } else {","        // v2 doesn't have userinfo endpoint, so we use the content in id_token as the profile","        log.info('v2 has no userinfo endpoint, using the content in id_token as the profile');","","        return onProfileLoaded(self, {","          req,","          sub,","          iss,","          profile: makeProfileObject(jwtClaims, jwtClaimsStr),","          jwtClaims,","          access_token,","          refresh_token,","          params: items,","        });","      }","    });","  });","};","","/**"," * prepare the initial authorization request"," *"," * @params {Object} oauthConfig"," * @params {Object} req"," * @params {Function} next  -- callback to pass error to async.waterfall"," */","Strategy.prototype._flowInitializationHandler = function flowInitializationHandler(oauthConfig, req, next) {","  // The request being authenticated is initiating OpenID Connect","  // authentication. Prior to redirecting to the provider, configuration will","  // be loaded. The configuration is typically either pre-configured or","  // discovered dynamically. When using dynamic discovery, a user supplies","  // their identifer as input.","","  const self = this;","","  log.info(`entering Strategy.prototype._flowInitializationHandler`);","","  const params = {","    'redirect_uri': oauthConfig.redirectUrl,","    'response_type': oauthConfig.responseType,","    'response_mode': oauthConfig.responseMode,","    'client_id': oauthConfig.clientID","  };","","  log.info('We are sending the response_type: ', params.response_type);","  log.info('We are sending the response_mode: ', params.response_mode);","","  if (oauthConfig.domain_hint)","    params['domain_hint'] = oauthConfig.domain_hint;","  if (oauthConfig.login_hint)","    params['login_hint'] = oauthConfig.login_hint;","  if (oauthConfig.prompt)","    params['prompt'] = oauthConfig.prompt;","  if (oauthConfig.extraAuthReqQueryParams) {","    // copy the extra query parameters into params","    for (var attributeName in oauthConfig.extraAuthReqQueryParams) {","      if (oauthConfig.extraAuthReqQueryParams.hasOwnProperty(attributeName))","        params[attributeName] = oauthConfig.extraAuthReqQueryParams[attributeName];","    }","  }","","  var policy = null;","  if (self._options.isB2C) {","    if (!req.query.p || req.query.p === '')","      return next(new Error('In _flowInitializationHandler: missing policy in the request for B2C'));","    // policy is not case sensitive. AAD turns policy to lower case.","    policy = req.query.p.toLowerCase();","    if (!policy || !CONSTANTS.POLICY_REGEX.test(policy))","      return next(new Error(`In _flowInitializationHandler: the given policy ${policy} given in the request is invalid`));","  }","","  // add state/nonce/policy/timeStamp tuple to session or cookie","  let state = params.state = oauthConfig.customState ? ('CUSTOM' + aadutils.uid(32) + oauthConfig.customState) : aadutils.uid(32);","  let nonce = params.nonce = aadutils.uid(32);","  let resource = oauthConfig.resource ? oauthConfig.resource : null;","  if (resource)","    params.resource = resource;","","  var tuple = { state: state, nonce: nonce };","  if (policy)","    tuple.policy = policy;","  if (resource)","    tuple.resource = resource;","  if (oauthConfig.tenantIdOrName)","    tuple.tenantIdOrName = oauthConfig.tenantIdOrName;","","  if (!self._useCookieInsteadOfSession) {","    tuple.timeStamp = Date.now();","    self._sessionContentHandler.add(req, self._key, tuple);","  } else {","    // we don't need to record timestamp if we use cookie, since we can set the","    // expiration when we set cookie","    self._cookieContentHandler.add(req, oauthConfig.response, tuple);","  }","  ","  // add scope","  params.scope = oauthConfig.scope;","","  // add telemetry","  params[aadutils.getLibraryProductParameterName()] = aadutils.getLibraryProduct();","  params[aadutils.getLibraryVersionParameterName()] = aadutils.getLibraryVersion();","  let location;","","  // Implement support for standard OpenID Connect params (display, prompt, etc.)","  if (self._options.isB2C)","    location = `${oauthConfig.authorization_endpoint}&${querystring.stringify(params)}`;","  else","    location = `${oauthConfig.authorization_endpoint}?${querystring.stringify(params)}`;","","  return self.redirect(location);","};","","/**"," * get access_token using client secret or client assertion"," *"," * @params {String} code"," * @params {Object} oauthConfig"," * @params {Function} callback"," */","Strategy.prototype._getAccessTokenBySecretOrAssertion = (code, oauthConfig, next, callback) => {","  var post_headers = { 'Content-Type': 'application/x-www-form-urlencoded' };","","  var post_params = {","    code: code,","    client_id: oauthConfig.clientID,","    redirect_uri: oauthConfig.redirectUrl,","    scope: oauthConfig.scope,","    grant_type: 'authorization_code'","  };","","  if (oauthConfig.extraTokenReqQueryParams) {","    // copy the extra query parameters into post_params","    for (var attributeName in oauthConfig.extraTokenReqQueryParams) {","      if (oauthConfig.extraTokenReqQueryParams.hasOwnProperty(attributeName))","        post_params[attributeName] = oauthConfig.extraTokenReqQueryParams[attributeName];","    }","  }","","  if (oauthConfig.clientSecret) {","    // use client secret if it exists","    post_params['client_secret'] = oauthConfig.clientSecret;","    log.info('In _getAccessTokenBySecretOrAssertion: we are using client secret');","  } else {","    // otherwise generate a client assertion","    post_params['client_assertion_type'] = CONSTANTS.CLIENT_ASSERTION_TYPE;   ","","    jwt.generateClientAssertion(oauthConfig.clientID, oauthConfig.token_endpoint, oauthConfig.privatePEMKey, oauthConfig.thumbprint,","      (err, assertion) => {","        if (err)","          return next(err);","        else","          post_params['client_assertion'] = assertion;","    });","","    log.info('In _getAccessTokenBySecretOrAssertion: we created a client assertion with thumbprint ' + oauthConfig.thumbprint);","  };","","  var post_data = querystring.stringify(post_params);","","  var oauth2 = createOauth2Instance(oauthConfig);","","  oauth2._request('POST', oauthConfig.token_endpoint, post_headers, post_data, null, (error, data, response) => {","    if (error) callback(error);","    else {","      var results;","      try {","        results = JSON.parse(data);","      } catch(e) {","        results = querystring.parse(data);","      }","      callback(null, results);","    }","  });   ","};","","/**"," * fail and log the given message"," *"," * @params {String} message"," */","Strategy.prototype.failWithLog = function(message) {","  this.log.info(`authentication failed due to: ${message}`);","  return this.fail(message);","};","","/**"," * create an oauth2 instance"," *"," * @params {Object} oauthConfig"," */","var createOauth2Instance = function(oauthConfig) {","  let libraryVersion = aadutils.getLibraryVersion();","  let libraryVersionParameterName = aadutils.getLibraryVersionParameterName();","  let libraryProduct = aadutils.getLibraryProduct();","  let libraryProductParameterName = aadutils.getLibraryProductParameterName();","","  var oauth2 = new OAuth2(","    oauthConfig.clientID, // consumerKey","    oauthConfig.clientSecret, // consumer secret","    '', // baseURL (empty string because we use absolute urls for authorize and token paths)","    oauthConfig.authorization_endpoint, // authorizePath","    oauthConfig.token_endpoint, // accessTokenPath","    {libraryProductParameterName : libraryProduct,","     libraryVersionParameterName : libraryVersion} // customHeaders","  );","","  return oauth2;","};","","module.exports = Strategy;",""],"l":{"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"41":1,"42":1,"43":1,"44":1,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"57":1,"59":1,"60":1,"70":1,"71":1,"73":1,"74":0,"90":1,"91":1,"92":0,"93":0,"95":0,"96":0,"98":0,"101":0,"109":0,"110":0,"112":0,"113":0,"116":0,"121":0,"122":0,"125":0,"318":1,"319":0,"328":0,"329":0,"332":0,"333":0,"335":0,"336":0,"338":0,"340":0,"345":0,"347":0,"382":0,"384":0,"386":0,"387":0,"391":0,"392":0,"395":0,"396":0,"397":0,"398":0,"408":0,"409":0,"410":0,"414":0,"417":0,"418":0,"421":0,"437":0,"438":0,"439":0,"440":0,"442":0,"443":0,"445":0,"446":0,"448":0,"449":0,"455":0,"456":0,"457":0,"458":0,"460":0,"461":0,"462":0,"467":0,"468":0,"474":0,"475":0,"477":0,"478":0,"480":0,"488":0,"489":0,"491":0,"494":0,"495":0,"498":0,"499":0,"501":0,"502":0,"505":0,"506":0,"507":0,"508":0,"513":0,"514":0,"518":1,"527":1,"566":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"579":0,"580":0,"583":0,"585":0,"587":0,"589":0,"595":0,"603":0,"619":0,"621":0,"622":0,"624":0,"625":0,"627":0,"628":0,"630":0,"633":0,"640":0,"641":0,"643":0,"654":1,"655":0,"663":0,"665":0,"670":0,"672":0,"673":0,"674":0,"675":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"687":0,"688":0,"690":0,"699":0,"700":0,"701":0,"703":0,"705":0,"706":0,"708":0,"710":0,"711":0,"713":0,"714":0,"715":0,"718":0,"719":0,"720":0,"722":0,"726":0,"727":0,"728":0,"734":0,"736":0,"739":0,"740":0,"742":0,"743":0,"749":0,"752":0,"753":0,"754":0,"758":0,"759":0,"762":0,"763":0,"765":0,"766":0,"768":0,"779":1,"780":0,"782":0,"787":0,"788":0,"789":0,"790":0,"792":0,"801":0,"802":0,"803":0,"806":0,"807":0,"808":0,"809":0,"810":0,"813":0,"819":0,"821":0,"822":0,"824":0,"828":0,"829":0,"830":0,"831":0,"832":0,"835":0,"838":0,"839":0,"840":0,"841":0,"844":0,"853":0,"854":0,"857":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"869":0,"872":0,"875":0,"879":0,"880":0,"882":0,"884":0,"885":0,"887":0,"888":0,"890":0,"905":1,"906":0,"908":0,"909":0,"911":0,"912":0,"913":0,"914":0,"915":0,"917":0,"918":0,"919":0,"921":0,"922":0,"925":0,"938":1,"939":0,"941":0,"942":0,"943":0,"946":0,"947":0,"948":0,"950":0,"953":0,"954":0,"955":0,"956":0,"957":0,"959":0,"961":0,"964":0,"965":0,"966":0,"968":0,"974":0,"975":0,"977":0,"978":0,"979":0,"980":0,"982":0,"984":0,"985":0,"989":0,"990":0,"993":0,"995":0,"996":0,"1000":0,"1002":0,"1003":0,"1007":0,"1008":0,"1009":0,"1020":1,"1021":0,"1023":0,"1024":0,"1025":0,"1030":0,"1041":1,"1047":0,"1049":0,"1052":0,"1053":0,"1054":0,"1056":0,"1058":0,"1080":1,"1087":0,"1089":0,"1095":0,"1098":0,"1099":0,"1101":0,"1102":0,"1105":0,"1124":1,"1131":0,"1132":0,"1134":0,"1136":0,"1137":0,"1139":0,"1140":0,"1141":0,"1143":0,"1144":0,"1147":0,"1148":0,"1151":0,"1152":0,"1153":0,"1156":0,"1157":0,"1158":0,"1161":0,"1162":0,"1164":0,"1167":0,"1168":0,"1169":0,"1170":0,"1172":0,"1173":0,"1177":0,"1179":0,"1180":0,"1182":0,"1183":0,"1184":0,"1186":0,"1189":0,"1190":0,"1191":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1200":0,"1202":0,"1204":0,"1205":0,"1207":0,"1211":0,"1212":0,"1214":0,"1227":0,"1229":0,"1251":1,"1258":0,"1260":0,"1262":0,"1269":0,"1270":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1280":0,"1281":0,"1282":0,"1286":0,"1287":0,"1288":0,"1289":0,"1291":0,"1292":0,"1293":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1311":0,"1312":0,"1313":0,"1317":0,"1321":0,"1324":0,"1325":0,"1326":0,"1329":0,"1330":0,"1332":0,"1334":0,"1344":1,"1345":0,"1347":0,"1355":0,"1357":0,"1358":0,"1359":0,"1363":0,"1365":0,"1366":0,"1369":0,"1371":0,"1373":0,"1374":0,"1376":0,"1379":0,"1382":0,"1384":0,"1386":0,"1387":0,"1389":0,"1390":0,"1391":0,"1393":0,"1395":0,"1405":1,"1406":0,"1407":0,"1415":1,"1416":0,"1417":0,"1418":0,"1419":0,"1421":0,"1431":0,"1434":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/jwe.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/jwe.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":1,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":1,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0]},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":28,"column":0},"end":{"line":28,"column":31}},"2":{"start":{"line":29,"column":0},"end":{"line":29,"column":37}},"3":{"start":{"line":30,"column":0},"end":{"line":30,"column":39}},"4":{"start":{"line":32,"column":0},"end":{"line":32,"column":37}},"5":{"start":{"line":33,"column":0},"end":{"line":33,"column":37}},"6":{"start":{"line":46,"column":0},"end":{"line":63,"column":2}},"7":{"start":{"line":47,"column":2},"end":{"line":48,"column":80}},"8":{"start":{"line":48,"column":4},"end":{"line":48,"column":80}},"9":{"start":{"line":50,"column":2},"end":{"line":62,"column":3}},"10":{"start":{"line":51,"column":4},"end":{"line":56,"column":31}},"11":{"start":{"line":52,"column":6},"end":{"line":52,"column":41}},"12":{"start":{"line":53,"column":9},"end":{"line":56,"column":31}},"13":{"start":{"line":54,"column":6},"end":{"line":54,"column":32}},"14":{"start":{"line":56,"column":6},"end":{"line":56,"column":31}},"15":{"start":{"line":58,"column":4},"end":{"line":61,"column":30}},"16":{"start":{"line":59,"column":6},"end":{"line":59,"column":40}},"17":{"start":{"line":61,"column":6},"end":{"line":61,"column":30}},"18":{"start":{"line":72,"column":0},"end":{"line":83,"column":2}},"19":{"start":{"line":73,"column":2},"end":{"line":73,"column":13}},"20":{"start":{"line":74,"column":2},"end":{"line":78,"column":3}},"21":{"start":{"line":75,"column":4},"end":{"line":75,"column":11}},"22":{"start":{"line":75,"column":12},"end":{"line":75,"column":19}},"23":{"start":{"line":77,"column":4},"end":{"line":77,"column":11}},"24":{"start":{"line":77,"column":12},"end":{"line":77,"column":19}},"25":{"start":{"line":79,"column":2},"end":{"line":79,"column":27}},"26":{"start":{"line":80,"column":2},"end":{"line":81,"column":54}},"27":{"start":{"line":81,"column":4},"end":{"line":81,"column":54}},"28":{"start":{"line":82,"column":2},"end":{"line":82,"column":11}},"29":{"start":{"line":97,"column":0},"end":{"line":170,"column":2}},"30":{"start":{"line":104,"column":2},"end":{"line":104,"column":22}},"31":{"start":{"line":105,"column":2},"end":{"line":105,"column":23}},"32":{"start":{"line":106,"column":2},"end":{"line":106,"column":14}},"33":{"start":{"line":114,"column":2},"end":{"line":114,"column":23}},"34":{"start":{"line":115,"column":2},"end":{"line":115,"column":28}},"35":{"start":{"line":116,"column":2},"end":{"line":117,"column":32}},"36":{"start":{"line":117,"column":4},"end":{"line":117,"column":32}},"37":{"start":{"line":127,"column":2},"end":{"line":148,"column":3}},"38":{"start":{"line":128,"column":4},"end":{"line":147,"column":5}},"39":{"start":{"line":130,"column":6},"end":{"line":130,"column":37}},"40":{"start":{"line":131,"column":6},"end":{"line":132,"column":24}},"41":{"start":{"line":132,"column":8},"end":{"line":132,"column":24}},"42":{"start":{"line":133,"column":6},"end":{"line":133,"column":39}},"43":{"start":{"line":136,"column":6},"end":{"line":136,"column":58}},"44":{"start":{"line":137,"column":6},"end":{"line":137,"column":32}},"45":{"start":{"line":138,"column":6},"end":{"line":138,"column":72}},"46":{"start":{"line":139,"column":6},"end":{"line":139,"column":28}},"47":{"start":{"line":140,"column":6},"end":{"line":140,"column":33}},"48":{"start":{"line":143,"column":6},"end":{"line":143,"column":24}},"49":{"start":{"line":146,"column":6},"end":{"line":146,"column":33}},"50":{"start":{"line":161,"column":2},"end":{"line":169,"column":3}},"51":{"start":{"line":162,"column":4},"end":{"line":162,"column":22}},"52":{"start":{"line":163,"column":4},"end":{"line":164,"column":45}},"53":{"start":{"line":164,"column":6},"end":{"line":164,"column":45}},"54":{"start":{"line":166,"column":4},"end":{"line":166,"column":18}},"55":{"start":{"line":168,"column":4},"end":{"line":168,"column":58}},"56":{"start":{"line":187,"column":0},"end":{"line":274,"column":2}},"57":{"start":{"line":190,"column":2},"end":{"line":206,"column":4}},"58":{"start":{"line":211,"column":2},"end":{"line":212,"column":79}},"59":{"start":{"line":212,"column":4},"end":{"line":212,"column":79}},"60":{"start":{"line":213,"column":2},"end":{"line":214,"column":89}},"61":{"start":{"line":214,"column":4},"end":{"line":214,"column":89}},"62":{"start":{"line":216,"column":2},"end":{"line":216,"column":32}},"63":{"start":{"line":219,"column":2},"end":{"line":220,"column":73}},"64":{"start":{"line":220,"column":4},"end":{"line":220,"column":73}},"65":{"start":{"line":221,"column":2},"end":{"line":222,"column":74}},"66":{"start":{"line":222,"column":4},"end":{"line":222,"column":74}},"67":{"start":{"line":223,"column":2},"end":{"line":224,"column":120}},"68":{"start":{"line":224,"column":4},"end":{"line":224,"column":120}},"69":{"start":{"line":227,"column":2},"end":{"line":228,"column":72}},"70":{"start":{"line":228,"column":4},"end":{"line":228,"column":72}},"71":{"start":{"line":229,"column":2},"end":{"line":230,"column":73}},"72":{"start":{"line":230,"column":4},"end":{"line":230,"column":73}},"73":{"start":{"line":231,"column":2},"end":{"line":232,"column":105}},"74":{"start":{"line":232,"column":4},"end":{"line":232,"column":105}},"75":{"start":{"line":235,"column":2},"end":{"line":236,"column":73}},"76":{"start":{"line":236,"column":4},"end":{"line":236,"column":73}},"77":{"start":{"line":237,"column":2},"end":{"line":238,"column":74}},"78":{"start":{"line":238,"column":4},"end":{"line":238,"column":74}},"79":{"start":{"line":243,"column":2},"end":{"line":243,"column":39}},"80":{"start":{"line":244,"column":2},"end":{"line":244,"column":36}},"81":{"start":{"line":252,"column":2},"end":{"line":252,"column":32}},"82":{"start":{"line":253,"column":2},"end":{"line":253,"column":43}},"83":{"start":{"line":254,"column":2},"end":{"line":254,"column":30}},"84":{"start":{"line":257,"column":2},"end":{"line":257,"column":56}},"85":{"start":{"line":258,"column":2},"end":{"line":258,"column":18}},"86":{"start":{"line":259,"column":2},"end":{"line":259,"column":17}},"87":{"start":{"line":260,"column":2},"end":{"line":260,"column":26}},"88":{"start":{"line":261,"column":2},"end":{"line":261,"column":23}},"89":{"start":{"line":262,"column":2},"end":{"line":262,"column":58}},"90":{"start":{"line":265,"column":2},"end":{"line":266,"column":80}},"91":{"start":{"line":266,"column":4},"end":{"line":266,"column":80}},"92":{"start":{"line":269,"column":2},"end":{"line":269,"column":72}},"93":{"start":{"line":270,"column":2},"end":{"line":270,"column":46}},"94":{"start":{"line":271,"column":2},"end":{"line":271,"column":59}},"95":{"start":{"line":273,"column":2},"end":{"line":273,"column":19}},"96":{"start":{"line":289,"column":0},"end":{"line":327,"column":2}},"97":{"start":{"line":290,"column":2},"end":{"line":290,"column":19}},"98":{"start":{"line":291,"column":2},"end":{"line":291,"column":17}},"99":{"start":{"line":293,"column":2},"end":{"line":324,"column":3}},"100":{"start":{"line":294,"column":4},"end":{"line":294,"column":19}},"101":{"start":{"line":296,"column":4},"end":{"line":310,"column":5}},"102":{"start":{"line":297,"column":6},"end":{"line":303,"column":7}},"103":{"start":{"line":298,"column":8},"end":{"line":298,"column":59}},"104":{"start":{"line":299,"column":8},"end":{"line":299,"column":42}},"105":{"start":{"line":301,"column":8},"end":{"line":301,"column":71}},"106":{"start":{"line":302,"column":8},"end":{"line":302,"column":52}},"107":{"start":{"line":304,"column":11},"end":{"line":310,"column":5}},"108":{"start":{"line":305,"column":6},"end":{"line":305,"column":53}},"109":{"start":{"line":306,"column":6},"end":{"line":306,"column":45}},"110":{"start":{"line":308,"column":6},"end":{"line":308,"column":42}},"111":{"start":{"line":309,"column":6},"end":{"line":309,"column":43}},"112":{"start":{"line":312,"column":4},"end":{"line":321,"column":23}},"113":{"start":{"line":313,"column":6},"end":{"line":313,"column":108}},"114":{"start":{"line":314,"column":9},"end":{"line":321,"column":23}},"115":{"start":{"line":315,"column":6},"end":{"line":315,"column":113}},"116":{"start":{"line":316,"column":9},"end":{"line":321,"column":23}},"117":{"start":{"line":317,"column":6},"end":{"line":317,"column":67}},"118":{"start":{"line":318,"column":9},"end":{"line":321,"column":23}},"119":{"start":{"line":319,"column":6},"end":{"line":319,"column":67}},"120":{"start":{"line":321,"column":6},"end":{"line":321,"column":23}},"121":{"start":{"line":323,"column":4},"end":{"line":323,"column":15}},"122":{"start":{"line":326,"column":2},"end":{"line":326,"column":38}},"123":{"start":{"line":337,"column":0},"end":{"line":371,"column":2}},"124":{"start":{"line":338,"column":2},"end":{"line":338,"column":93}},"125":{"start":{"line":340,"column":2},"end":{"line":341,"column":79}},"126":{"start":{"line":341,"column":4},"end":{"line":341,"column":79}},"127":{"start":{"line":342,"column":2},"end":{"line":343,"column":96}},"128":{"start":{"line":343,"column":4},"end":{"line":343,"column":96}},"129":{"start":{"line":345,"column":2},"end":{"line":345,"column":17}},"130":{"start":{"line":347,"column":2},"end":{"line":357,"column":3}},"131":{"start":{"line":348,"column":4},"end":{"line":354,"column":5}},"132":{"start":{"line":349,"column":6},"end":{"line":353,"column":7}},"133":{"start":{"line":350,"column":8},"end":{"line":350,"column":29}},"134":{"start":{"line":351,"column":8},"end":{"line":351,"column":60}},"135":{"start":{"line":352,"column":8},"end":{"line":352,"column":69}},"136":{"start":{"line":356,"column":4},"end":{"line":356,"column":96}},"137":{"start":{"line":359,"column":2},"end":{"line":359,"column":82}},"138":{"start":{"line":362,"column":2},"end":{"line":368,"column":3}},"139":{"start":{"line":363,"column":4},"end":{"line":367,"column":5}},"140":{"start":{"line":364,"column":6},"end":{"line":364,"column":84}},"141":{"start":{"line":365,"column":6},"end":{"line":366,"column":22}},"142":{"start":{"line":366,"column":8},"end":{"line":366,"column":22}},"143":{"start":{"line":370,"column":2},"end":{"line":370,"column":101}},"144":{"start":{"line":384,"column":0},"end":{"line":415,"column":2}},"145":{"start":{"line":385,"column":2},"end":{"line":386,"column":83}},"146":{"start":{"line":386,"column":4},"end":{"line":386,"column":83}},"147":{"start":{"line":387,"column":2},"end":{"line":388,"column":100}},"148":{"start":{"line":388,"column":4},"end":{"line":388,"column":100}},"149":{"start":{"line":390,"column":2},"end":{"line":396,"column":4}},"150":{"start":{"line":398,"column":2},"end":{"line":414,"column":3}},"151":{"start":{"line":399,"column":4},"end":{"line":399,"column":23}},"152":{"start":{"line":401,"column":4},"end":{"line":409,"column":5}},"153":{"start":{"line":402,"column":6},"end":{"line":402,"column":74}},"154":{"start":{"line":403,"column":6},"end":{"line":403,"column":27}},"155":{"start":{"line":404,"column":6},"end":{"line":404,"column":35}},"156":{"start":{"line":405,"column":6},"end":{"line":405,"column":44}},"157":{"start":{"line":406,"column":6},"end":{"line":406,"column":59}},"158":{"start":{"line":408,"column":6},"end":{"line":408,"column":97}},"159":{"start":{"line":411,"column":4},"end":{"line":411,"column":60}},"160":{"start":{"line":413,"column":4},"end":{"line":413,"column":44}},"161":{"start":{"line":428,"column":0},"end":{"line":460,"column":2}},"162":{"start":{"line":429,"column":2},"end":{"line":429,"column":17}},"163":{"start":{"line":432,"column":2},"end":{"line":445,"column":3}},"164":{"start":{"line":433,"column":4},"end":{"line":439,"column":5}},"165":{"start":{"line":434,"column":6},"end":{"line":438,"column":7}},"166":{"start":{"line":435,"column":8},"end":{"line":435,"column":29}},"167":{"start":{"line":436,"column":8},"end":{"line":436,"column":103}},"168":{"start":{"line":437,"column":8},"end":{"line":437,"column":14}},"169":{"start":{"line":441,"column":4},"end":{"line":444,"column":98}},"170":{"start":{"line":442,"column":6},"end":{"line":442,"column":98}},"171":{"start":{"line":444,"column":6},"end":{"line":444,"column":98}},"172":{"start":{"line":447,"column":2},"end":{"line":447,"column":107}},"173":{"start":{"line":450,"column":2},"end":{"line":456,"column":3}},"174":{"start":{"line":451,"column":4},"end":{"line":455,"column":5}},"175":{"start":{"line":452,"column":6},"end":{"line":452,"column":115}},"176":{"start":{"line":453,"column":6},"end":{"line":454,"column":22}},"177":{"start":{"line":454,"column":8},"end":{"line":454,"column":22}},"178":{"start":{"line":458,"column":2},"end":{"line":458,"column":92}},"179":{"start":{"line":459,"column":2},"end":{"line":459,"column":133}},"180":{"start":{"line":470,"column":0},"end":{"line":523,"column":2}},"181":{"start":{"line":480,"column":2},"end":{"line":480,"column":35}},"182":{"start":{"line":481,"column":2},"end":{"line":482,"column":123}},"183":{"start":{"line":482,"column":4},"end":{"line":482,"column":123}},"184":{"start":{"line":484,"column":2},"end":{"line":484,"column":13}},"185":{"start":{"line":485,"column":2},"end":{"line":489,"column":3}},"186":{"start":{"line":486,"column":4},"end":{"line":486,"column":62}},"187":{"start":{"line":488,"column":4},"end":{"line":488,"column":83}},"188":{"start":{"line":491,"column":2},"end":{"line":491,"column":35}},"189":{"start":{"line":492,"column":2},"end":{"line":492,"column":51}},"190":{"start":{"line":493,"column":2},"end":{"line":493,"column":40}},"191":{"start":{"line":494,"column":2},"end":{"line":494,"column":48}},"192":{"start":{"line":495,"column":2},"end":{"line":495,"column":45}},"193":{"start":{"line":497,"column":2},"end":{"line":497,"column":70}},"194":{"start":{"line":499,"column":2},"end":{"line":499,"column":17}},"195":{"start":{"line":500,"column":2},"end":{"line":500,"column":21}},"196":{"start":{"line":503,"column":2},"end":{"line":517,"column":3}},"197":{"start":{"line":504,"column":4},"end":{"line":504,"column":98}},"198":{"start":{"line":509,"column":4},"end":{"line":509,"column":73}},"199":{"start":{"line":510,"column":4},"end":{"line":511,"column":40}},"200":{"start":{"line":511,"column":6},"end":{"line":511,"column":40}},"201":{"start":{"line":516,"column":4},"end":{"line":516,"column":99}},"202":{"start":{"line":519,"column":2},"end":{"line":520,"column":64}},"203":{"start":{"line":520,"column":4},"end":{"line":520,"column":64}},"204":{"start":{"line":522,"column":2},"end":{"line":522,"column":64}},"205":{"start":{"line":525,"column":0},"end":{"line":525,"column":36}}},"branchMap":{"1":{"line":47,"type":"if","locations":[{"start":{"line":47,"column":2},"end":{"line":47,"column":2}},{"start":{"line":47,"column":2},"end":{"line":47,"column":2}}]},"2":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":6},"end":{"line":47,"column":28}},{"start":{"line":47,"column":32},"end":{"line":47,"column":56}},{"start":{"line":47,"column":60},"end":{"line":47,"column":84}}]},"3":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":2},"end":{"line":50,"column":2}},{"start":{"line":50,"column":2},"end":{"line":50,"column":2}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":4},"end":{"line":51,"column":4}},{"start":{"line":51,"column":4},"end":{"line":51,"column":4}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":9},"end":{"line":53,"column":9}},{"start":{"line":53,"column":9},"end":{"line":53,"column":9}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"7":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"8":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":131,"column":6}},{"start":{"line":131,"column":6},"end":{"line":131,"column":6}}]},"9":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"10":{"line":211,"type":"if","locations":[{"start":{"line":211,"column":2},"end":{"line":211,"column":2}},{"start":{"line":211,"column":2},"end":{"line":211,"column":2}}]},"11":{"line":213,"type":"if","locations":[{"start":{"line":213,"column":2},"end":{"line":213,"column":2}},{"start":{"line":213,"column":2},"end":{"line":213,"column":2}}]},"12":{"line":219,"type":"if","locations":[{"start":{"line":219,"column":2},"end":{"line":219,"column":2}},{"start":{"line":219,"column":2},"end":{"line":219,"column":2}}]},"13":{"line":221,"type":"if","locations":[{"start":{"line":221,"column":2},"end":{"line":221,"column":2}},{"start":{"line":221,"column":2},"end":{"line":221,"column":2}}]},"14":{"line":223,"type":"if","locations":[{"start":{"line":223,"column":2},"end":{"line":223,"column":2}},{"start":{"line":223,"column":2},"end":{"line":223,"column":2}}]},"15":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]},"16":{"line":229,"type":"if","locations":[{"start":{"line":229,"column":2},"end":{"line":229,"column":2}},{"start":{"line":229,"column":2},"end":{"line":229,"column":2}}]},"17":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"18":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":2},"end":{"line":235,"column":2}},{"start":{"line":235,"column":2},"end":{"line":235,"column":2}}]},"19":{"line":237,"type":"if","locations":[{"start":{"line":237,"column":2},"end":{"line":237,"column":2}},{"start":{"line":237,"column":2},"end":{"line":237,"column":2}}]},"20":{"line":265,"type":"if","locations":[{"start":{"line":265,"column":2},"end":{"line":265,"column":2}},{"start":{"line":265,"column":2},"end":{"line":265,"column":2}}]},"21":{"line":265,"type":"binary-expr","locations":[{"start":{"line":265,"column":6},"end":{"line":265,"column":14}},{"start":{"line":265,"column":18},"end":{"line":265,"column":35}},{"start":{"line":265,"column":40},"end":{"line":265,"column":100}}]},"22":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":4},"end":{"line":296,"column":4}},{"start":{"line":296,"column":4},"end":{"line":296,"column":4}}]},"23":{"line":296,"type":"binary-expr","locations":[{"start":{"line":296,"column":8},"end":{"line":296,"column":24}},{"start":{"line":296,"column":28},"end":{"line":296,"column":46}}]},"24":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":6},"end":{"line":297,"column":6}},{"start":{"line":297,"column":6},"end":{"line":297,"column":6}}]},"25":{"line":304,"type":"if","locations":[{"start":{"line":304,"column":11},"end":{"line":304,"column":11}},{"start":{"line":304,"column":11},"end":{"line":304,"column":11}}]},"26":{"line":304,"type":"binary-expr","locations":[{"start":{"line":304,"column":15},"end":{"line":304,"column":31}},{"start":{"line":304,"column":35},"end":{"line":304,"column":51}}]},"27":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":312,"column":4}},{"start":{"line":312,"column":4},"end":{"line":312,"column":4}}]},"28":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":9},"end":{"line":314,"column":9}},{"start":{"line":314,"column":9},"end":{"line":314,"column":9}}]},"29":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":9},"end":{"line":316,"column":9}},{"start":{"line":316,"column":9},"end":{"line":316,"column":9}}]},"30":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":9},"end":{"line":318,"column":9}},{"start":{"line":318,"column":9},"end":{"line":318,"column":9}}]},"31":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":2},"end":{"line":340,"column":2}},{"start":{"line":340,"column":2},"end":{"line":340,"column":2}}]},"32":{"line":342,"type":"if","locations":[{"start":{"line":342,"column":2},"end":{"line":342,"column":2}},{"start":{"line":342,"column":2},"end":{"line":342,"column":2}}]},"33":{"line":347,"type":"if","locations":[{"start":{"line":347,"column":2},"end":{"line":347,"column":2}},{"start":{"line":347,"column":2},"end":{"line":347,"column":2}}]},"34":{"line":349,"type":"if","locations":[{"start":{"line":349,"column":6},"end":{"line":349,"column":6}},{"start":{"line":349,"column":6},"end":{"line":349,"column":6}}]},"35":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":10},"end":{"line":349,"column":43}},{"start":{"line":349,"column":47},"end":{"line":349,"column":94}}]},"36":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":4},"end":{"line":363,"column":4}},{"start":{"line":363,"column":4},"end":{"line":363,"column":4}}]},"37":{"line":365,"type":"if","locations":[{"start":{"line":365,"column":6},"end":{"line":365,"column":6}},{"start":{"line":365,"column":6},"end":{"line":365,"column":6}}]},"38":{"line":365,"type":"binary-expr","locations":[{"start":{"line":365,"column":10},"end":{"line":365,"column":23}},{"start":{"line":365,"column":27},"end":{"line":365,"column":37}}]},"39":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":2},"end":{"line":385,"column":2}},{"start":{"line":385,"column":2},"end":{"line":385,"column":2}}]},"40":{"line":387,"type":"if","locations":[{"start":{"line":387,"column":2},"end":{"line":387,"column":2}},{"start":{"line":387,"column":2},"end":{"line":387,"column":2}}]},"41":{"line":401,"type":"if","locations":[{"start":{"line":401,"column":4},"end":{"line":401,"column":4}},{"start":{"line":401,"column":4},"end":{"line":401,"column":4}}]},"42":{"line":401,"type":"binary-expr","locations":[{"start":{"line":401,"column":8},"end":{"line":401,"column":32}},{"start":{"line":401,"column":36},"end":{"line":401,"column":60}}]},"43":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":2},"end":{"line":432,"column":2}},{"start":{"line":432,"column":2},"end":{"line":432,"column":2}}]},"44":{"line":434,"type":"if","locations":[{"start":{"line":434,"column":6},"end":{"line":434,"column":6}},{"start":{"line":434,"column":6},"end":{"line":434,"column":6}}]},"45":{"line":434,"type":"binary-expr","locations":[{"start":{"line":434,"column":10},"end":{"line":434,"column":43}},{"start":{"line":434,"column":47},"end":{"line":434,"column":75}}]},"46":{"line":441,"type":"if","locations":[{"start":{"line":441,"column":4},"end":{"line":441,"column":4}},{"start":{"line":441,"column":4},"end":{"line":441,"column":4}}]},"47":{"line":451,"type":"if","locations":[{"start":{"line":451,"column":4},"end":{"line":451,"column":4}},{"start":{"line":451,"column":4},"end":{"line":451,"column":4}}]},"48":{"line":453,"type":"if","locations":[{"start":{"line":453,"column":6},"end":{"line":453,"column":6}},{"start":{"line":453,"column":6},"end":{"line":453,"column":6}}]},"49":{"line":481,"type":"if","locations":[{"start":{"line":481,"column":2},"end":{"line":481,"column":2}},{"start":{"line":481,"column":2},"end":{"line":481,"column":2}}]},"50":{"line":503,"type":"if","locations":[{"start":{"line":503,"column":2},"end":{"line":503,"column":2}},{"start":{"line":503,"column":2},"end":{"line":503,"column":2}}]},"51":{"line":510,"type":"if","locations":[{"start":{"line":510,"column":4},"end":{"line":510,"column":4}},{"start":{"line":510,"column":4},"end":{"line":510,"column":4}}]},"52":{"line":519,"type":"if","locations":[{"start":{"line":519,"column":2},"end":{"line":519,"column":2}},{"start":{"line":519,"column":2},"end":{"line":519,"column":2}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the \"Software\"), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */"," "," /* eslint-disable no-new */","","'use strict';","","var crypto = require('crypto');","var constants = require('constants');","const base64url = require('base64url');","","var aadutils = require('./aadutils');","var jwkToPem = require('jwk-to-pem');","","/******************************************************************************"," * utility functions"," *****************************************************************************/","","/**"," * Create a buffer depends on the version of node"," *"," * @param{Buffer/String/Number}  data: buffer, string, or size"," * @param{String}  encoding: ignored if data is a buffer"," * @return{Buffer} "," */","var createBuffer = (data, encoding) => {","  if (!Buffer.isBuffer(data) && typeof data !== 'string' && typeof data !== 'number')","    throw new Error('in createBuffer, data must be a buffer, string or number');","","  if (process.version >= 'v6') {","    if (typeof data === 'string')","      return Buffer.from(data, encoding);","    else if (typeof data === 'number')","      return Buffer.alloc(data);","    else","      return Buffer.from(data);","  } else {","    if (typeof data === 'string')","      return new Buffer(data, encoding);","    else","      return new Buffer(data);","  } ","};","","/**"," * xor of two number in buffer format"," *"," * @param{Buffer}  a: first number"," * @param{Buffer}  b: second number"," * @return{Buffer}  a^b"," */","var xor = (a, b) => {","  var c1, c2;","  if (a.length > b.length) {","    c1 = a; c2 = b;","  } else {","    c2 = a; c1 = b;","  }","  var c = createBuffer(c1);","  for (var i = 1; i <= c2.length; i++)","    c[c1.length-i] = c[c1.length-i] ^ c2[c2.length-i];","  return c;","};","","/******************************************************************************"," * AES key unwrap algorithms"," *****************************************************************************/","","/**"," * Unwrap wrapped_cek using AES with kek"," *"," * @param{String}  algorithm: algorithm"," * @param{Buffer}  wrapped_cek: wrapped key"," * @param{Buffer}  kek: key encryption key"," * @return{Buffer}  cek, the unwrapped key"," */","var AESKeyUnWrap = (algorithm, wrapped_cek, kek) => {","","  /****************************************************************************","   * Inputs: CipherText, (n+1) 64-bit values {C0, C1, ..., Cn}, and ","   *         Key, K (the KEK)","   * Outputs: Plaintext, n 64-bit values {P0, P1, K, Pn}","   ***************************************************************************/","  var C = wrapped_cek;","  var n = C.length/8-1;","  var K = kek;","","  /****************************************************************************","   * 1) Initialize variables","   *    Set A = C[0]","   *    For i = 1 to b","   *      R[i] = C[i]","   ***************************************************************************/","  var A = C.slice(0,8);","  var R = [createBuffer(1)];","  for (var i = 1; i <= n; i++)","    R.push(C.slice(8*i, 8*i+8));","","  /****************************************************************************","   * 2) compute intermediate values","   *    For j = 5 to 0","   *      For i = n to 1","   *        B = AES-1(K, (A^t) | R[i]) where t = n*j+i","   *        A = MSB(64, B)","   *        R[i] = LSB(64, B)","   ***************************************************************************/","  for(var j=5; j >= 0; j--) {","    for(var i=n; i >= 1; i--) {","      // turn t = n*j+i into buffer","      var str = (n*j+i).toString(16);","      if (str.length %2 !== 0)","        str = '0' + str;","      var t = createBuffer(str, 'hex');","","      // B = AES-1(K, (A^t) | R[i])","      var aes = crypto.createDecipheriv(algorithm, K, '');","      aes.setAutoPadding(false);","      var B = aes.update(Buffer.concat([xor(A, t), R[i]]), null, 'hex');","      B += aes.final('hex');","      B = createBuffer(B, 'hex');","","      // A = MSB(64, B)","      A = B.slice(0, 8);","","      // R[i] = LSB(64, B)","      R[i] = B.slice(B.length-8);","    }","  }","","  /****************************************************************************","   * 3) Output results.","   *    If A is an appropriate initial value","   *    Then","   *      For i = 1 to n","   *        P[i] = R[i]","   *    Else","   *      Return an error","   ***************************************************************************/","  ","  // check A","  if (A.toString('hex').toUpperCase() === 'A6A6A6A6A6A6A6A6') {","    var result = R[1];","    for (var i = 2; i <= n; i++)","      result = Buffer.concat([result, R[i]]);","    ","    return result;","  } else {","    throw new Error('aes decryption failed: invalid key');","  }","};","","/******************************************************************************"," * AES-CBC-HMAC-SHA2 decryption"," *****************************************************************************/","","/**"," * decrypt ciperText using aes-cbc-hmac-sha2 algorithm"," *"," * @param{String}  algorithm: algorithm"," * @param{Buffer}  key: encryption key"," * @param{Buffer}  cipherText: encrypted content"," * @param{Buffer}  iv: intialization vector"," * @param{Buffer}  aad: additional authentication data"," * @param{Buffer}  authTag: authentication tag"," * @return{Buffer}  decrypted content"," */","var decrypt_AES_CBC_HMAC_SHA2 = (algorithm, key, cipherText, iv, aad, authTag) => {","  // algorithm information","  // note ENC_KEY_LEN = MAC_KEY_LEN = T_LEN = len","  var algInfo = {","    'aes-128-cbc-hmac-sha-256': {","        'cipher_algo': 'aes-128-cbc', ","        'hash_algo': 'sha256', ","        'len': 16","      },","    'aes-192-cbc-hmac-sha-384': {","        'cipher_algo': 'aes-192-cbc', ","        'hash_algo': 'sha384', ","        'len': 24","      },","    'aes-256-cbc-hmac-sha-512': {","        'cipher_algo': 'aes-256-cbc', ","        'hash_algo': 'sha512', ","        'len': 32","      }","  };","","  // 1. Verify input","","  // check if we have a supported algorithm","  if (!algorithm)","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: algorithm is not provided');","  if (!algInfo[algorithm])","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: unsupported algorithm: ' + algorithm);","","  var algo = algInfo[algorithm];","","  // check the size of key","  if (!key)","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: key is not provided');","  if (!(key instanceof Buffer))","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: key must be a buffer');","  if (key.length !== algInfo[algorithm].len * 2)","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: key has size ' + key.length + ', it must have size ' + algo.len * 2);","  ","  // check the size of iv","  if (!iv)","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: iv is not provided');","  if (!(iv instanceof Buffer))","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: iv must be a buffer');","  if (iv.length !== 16)","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: iv has size ' + iv.length + ', it must have size 16');","","  // check the existence of aad","  if (!aad)","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: aad is not provided');","  if (!(aad instanceof Buffer))","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: aad must be a buffer');","","  // 2. Split key","","  // first half is mac_key and the second half is enc_key","  var mac_key = key.slice(0, algo.len);","  var enc_key = key.slice(algo.len);","","  // 3. Verify tag","","  // tag should be: hash(aad + iv + cipherText + aad_len) where aad_len is the","  // number of bits in aad expressed as a 64-bit unsigned big-endian integer","","  // 3.1 compute aad_len","  var aad_len = createBuffer(8);","  aad_len.writeUInt32BE(aad.length * 8, 4);","  aad_len.writeUInt32BE(0, 0);","","  // 3.2 create hmac algorithm","  var hmac = crypto.createHmac(algo.hash_algo, mac_key);","  hmac.write(aad);","  hmac.write(iv);","  hmac.update(cipherText);","  hmac.update(aad_len);","  var computed_authTag = hmac.digest().slice(0, algo.len);","","  // 3.3 verify the tag","  if (!authTag || !computed_authTag || (authTag.toString('hex') !== computed_authTag.toString('hex')))","    throw new Error('In decrypt_AES_CBC_HMAC_SHA2: invalid authentication tag');","","  // 4. Decrypt cipherText","  var decipher = crypto.createDecipheriv(algo.cipher_algo, enc_key, iv);","  var plainText = decipher.update(cipherText);","  plainText = Buffer.concat([plainText, decipher.final()]);","  ","  return plainText;","};","","","/******************************************************************************"," * JWE decryption"," *****************************************************************************/","","/**"," * decrypt cek helper function"," *"," * @param{String}  alg: algorithm"," * @param{Buffer}  encrypted_cek: encrypted cek"," * @param{Buffer}  key: encryption key"," * @return{Function}  log: logging function"," */","var decryptCEKHelper = (alg, encrypted_cek, key, log) => {","  var error = null;","  var cek = null;","","  try {","    var key_to_use;","","    if (alg === 'RSA1_5' || alg === 'RSA-OAEP') {","      if (key['privatePemKey']) {","        log.info('using RSA privatePemKey to decrypt cek');","        key_to_use = key['privatePemKey'];","      } else {","        log.info('converting jwk to RSA privatePemKey to decrypt cek');","        key_to_use = jwkToPem(key, {private: true});","      }","    } else if (alg === 'A128KW' || alg === 'A256KW') {","      log.info('using symmetric key to decrypt cek');","      key_to_use = base64url.toBuffer(key.k);","    } else {","      log.info('unsupported alg: ' + alg);","      return {'error': error, 'cek': null};","    }","","    if (alg === 'RSA1_5')","      cek = crypto.privateDecrypt({ key: key_to_use, padding: constants.RSA_PKCS1_PADDING }, encrypted_cek);","    else if (alg === 'RSA-OAEP')","      cek = crypto.privateDecrypt({ key: key_to_use, padding: constants.RSA_PKCS1_OAEP_PADDING }, encrypted_cek);","    else if (alg === 'A128KW')","      cek = AESKeyUnWrap('aes-128-ecb', encrypted_cek, key_to_use);","    else if (alg === 'A256KW')","      cek = AESKeyUnWrap('aes-256-ecb', encrypted_cek, key_to_use);","    else","      cek = key_to_use;  // dir ","  } catch (ex) {","    error = ex;","  }","","  return {'error': error, 'cek': cek};","};","","/**"," * decrypt cek function (except header.alg == dir)"," *"," * @param{Object}  header: header"," * @param{Buffer}  encrypted_cek: encrypted cek"," * @param{Object}  jweKeyStore: list of keys"," * @return{Function}  log: logging function"," */","var decryptCEK = (header, encrypted_cek, jweKeyStore, log) => {","  var algKtyMapper = { 'RSA1_5': 'RSA', 'RSA-OAEP': 'RSA', 'A128KW': 'oct', 'A256KW': 'oct'};","","  if (!header.alg)","    return { 'error': new Error('alg is missing in JWE header'), 'cek': null };","  if(['RSA1_5', 'RSA-OAEP', 'dir', 'A128KW', 'A256KW'].indexOf(header.alg) === -1)","    return { 'error' : new Error('Unsupported alg in JWE header: ' + header.alg), 'cek': null };","","  var key = null;","","  if (header.kid) {","    for (var i = 0; i < jweKeyStore.length; i++) {","      if (header.kid === jweKeyStore[i].kid && algKtyMapper[header.alg] === jweKeyStore[i].kty) {","        key = jweKeyStore[i];","        log.info('found a key matching kid: ' + header.kid);","        return decryptCEKHelper(header.alg, encrypted_cek, key, log);","      }","    }","","    return { 'error': new Error('cannot find a key matching kid: ' + header.kid), 'cek': null };","  }","","  log.info('kid is not provided in JWE header, now we try all the possible keys');","","  // kid matching failed, now we try every possible key","  for(var i = 0; i < jweKeyStore.length; i++) {","    if (jweKeyStore[i].kty === algKtyMapper[header.alg]) {","      var result = decryptCEKHelper(header.alg, encrypted_cek, jweKeyStore[i], log);","      if (!result.error && result.cek)","        return result;","    }","  }","","  return { 'error': new Error('tried all keys to decrypt cek but none of them works'), 'cek': null };","};","","/**"," * decrypt content function with provided cek"," *"," * @param{Object}  header: header"," * @param{Buffer}  cek: cek"," * @param{Buffer}  cipherText: encrypted content"," * @param{Buffer}  iv: initialization vector"," * @param{Buffer}  authTag: authentication tag"," * @param{Buffer}  aad: additional authentication information"," * @return{Function}  log: logging function"," */","var decryptContent = (header, cek, cipherText, iv, authTag, aad, log) => {","  if (!header.enc)","    return { 'error': new Error('enc is missing in JWE header'), 'content': null };","  if (['A128GCM', 'A256GCM', 'A128CBC-HS256', 'A192CBC-HS384', 'A256CBC-HS512'].indexOf(header.enc) === -1)","    return { 'error' : new Error('Unsupported enc in JWE header: ' + header.enc), 'content': null };","","  var mapper = { ","    'A128GCM': 'aes-128-gcm', ","    'A256GCM': 'aes-256-gcm', ","    'A128CBC-HS256': 'aes-128-cbc-hmac-sha-256',","    'A192CBC-HS384': 'aes-192-cbc-hmac-sha-384',","    'A256CBC-HS512': 'aes-256-cbc-hmac-sha-512'","  };","","  try {","    var content = null;","","    if (header.enc === 'A128GCM' || header.enc === 'A256GCM') {","      var decipher = crypto.createDecipheriv(mapper[header.enc], cek, iv);","      decipher.setAAD(aad);","      decipher.setAuthTag(authTag);","      content = decipher.update(cipherText);","      content = Buffer.concat([content, decipher.final()]);","    } else {","      content = decrypt_AES_CBC_HMAC_SHA2(mapper[header.enc], cek, cipherText, iv, aad, authTag);    ","    }","","    return { 'error': null, 'content': content.toString() };","  } catch (ex) {","    return { 'error': ex, 'content': null };","  }","};","","/**"," * decrypt content function for the case where alg is dir"," *"," * @param{Object}  header: header"," * @param{Buffer}  jweKeyStore: list of keys"," * @param{Buffer}  cipherText: encrypted content"," * @param{Buffer}  iv: initialization vector"," * @param{Buffer}  authTag: authentication tag"," * @param{Buffer}  aad: additional authentication information"," * @return{Function}  log: logging function"," */","var decryptContentForDir = (header, jweKeyStore, cipherText, iv, authTag, aad, log) => {","  var key = null;","","  // try the key with the corresponding kid","  if (header.kid) {","    for (var i = 0; i < jweKeyStore.length; i++) {","      if (header.kid === jweKeyStore[i].kid && jweKeyStore[i].kty === 'oct') {","        key = jweKeyStore[i];","        log.info('Decrypting JWE content, header.alg == dir, found a key matching kid: ' + header.kid);","        break;","      }","    }","","    if (key)","      return decryptContent(header, base64url.toBuffer(key.k), cipherText, iv, authTag, aad, log);","    else","      return { 'error': new Error('cannot find a key matching kid: ' + header.kid), 'cek': null };","  }","","  log.info('In decryptContentForDir: kid is not provided in JWE header, now we try all the possible keys');","","  // kid matching failed, now we try every possible key","  for(var i = 0; i < jweKeyStore.length; i++) {","    if (jweKeyStore[i].kty === 'oct') {","      var result = decryptContent(header, base64url.toBuffer(jweKeyStore[i].k), cipherText, iv, authTag, aad, log);","      if (!result.error)","        return result;","    }","  }","","  log.info('In decryptContentForDir: tried all keys to decrypt the content but all failed');","  return { error: new Error('In decryptContentForDir: tried all keys to decrypt the content but all failed'), content_result: null };","};","","/**"," * The main decryption function"," *"," * @param{String}  jweString:  JWE id_token"," * @param{Object}  jweKeyStore: list of keys"," * @return{Function}  log: logging function"," * @return{Function}  callback: callback function"," */","exports.decrypt = (jweString, jweKeyStore, log, callback) => {","  /****************************************************************************","   *   JWE compact format structure","   ****************************************************************************","   * BASE64URL(UTF8(JWE Protected Header)) || '.' ||","   * BASE64URL(JWE Encrypted Key) || '.' || ","   * BASE64URL(JWE Initialization Vector) || '.' || ","   * BASE64URL(JWE Ciphertext) || '.' || ","   * BASE64URL(JWE Authentication Tag)","   ***************************************************************************/","  var parts = jweString.split('.');","  if (parts.length !== 5)","    return callback(new Error('In jwe.decrypt: invalid JWE string, it has ' + parts.length + ' parts instead of 5'), null);","  ","  var header;","  try {","    header = JSON.parse(base64url.decode(parts[0], 'binary'));","  } catch (ex) {","    return callback(new Error('In jwe.decrypt: failed to parse JWE header'), null);","  }","","  var aad = createBuffer(parts[0]);","  var encrypted_cek = base64url.toBuffer(parts[1]);","  var iv = base64url.toBuffer(parts[2]);","  var cipherText = base64url.toBuffer(parts[3]);","  var authTag = base64url.toBuffer(parts[4]);","","  log.info('In jwe.decrypt: the header is ' + JSON.stringify(header));","","  var cek_result;","  var content_result;","","  // special treatment of 'dir'","  if (header.alg === 'dir') {","    content_result = decryptContentForDir(header, jweKeyStore, cipherText, iv, authTag, aad, log);","  } else {","    /****************************************************************************","     *  cek decryption","     ***************************************************************************/","    var cek_result = decryptCEK(header, encrypted_cek, jweKeyStore, log);","    if (cek_result.error)","      return callback(cek_result.error);","","    /****************************************************************************","     *  content decryption","     ***************************************************************************/","    var content_result = decryptContent(header, cek_result.cek, cipherText, iv, authTag, aad, log);","  }","","  if (!content_result.error)","    log.info('In jwe.decrypt: successfully decrypted id_token');","  ","  return callback(content_result.error, content_result.content);","};","","exports.createBuffer = createBuffer;","","","",""],"l":{"28":1,"29":1,"30":1,"32":1,"33":1,"46":1,"47":0,"48":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":0,"59":0,"61":0,"72":1,"73":0,"74":0,"75":0,"77":0,"79":0,"80":0,"81":0,"82":0,"97":1,"104":0,"105":0,"106":0,"114":0,"115":0,"116":0,"117":0,"127":0,"128":0,"130":0,"131":0,"132":0,"133":0,"136":0,"137":0,"138":0,"139":0,"140":0,"143":0,"146":0,"161":0,"162":0,"163":0,"164":0,"166":0,"168":0,"187":1,"190":0,"211":0,"212":0,"213":0,"214":0,"216":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"235":0,"236":0,"237":0,"238":0,"243":0,"244":0,"252":0,"253":0,"254":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"265":0,"266":0,"269":0,"270":0,"271":0,"273":0,"289":1,"290":0,"291":0,"293":0,"294":0,"296":0,"297":0,"298":0,"299":0,"301":0,"302":0,"304":0,"305":0,"306":0,"308":0,"309":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"321":0,"323":0,"326":0,"337":1,"338":0,"340":0,"341":0,"342":0,"343":0,"345":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"356":0,"359":0,"362":0,"363":0,"364":0,"365":0,"366":0,"370":0,"384":1,"385":0,"386":0,"387":0,"388":0,"390":0,"398":0,"399":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"408":0,"411":0,"413":0,"428":1,"429":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"441":0,"442":0,"444":0,"447":0,"450":0,"451":0,"452":0,"453":0,"454":0,"458":0,"459":0,"470":1,"480":0,"481":0,"482":0,"484":0,"485":0,"486":0,"488":0,"491":0,"492":0,"493":0,"494":0,"495":0,"497":0,"499":0,"500":0,"503":0,"504":0,"509":0,"510":0,"511":0,"516":0,"519":0,"520":0,"522":0,"525":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/errors/internaloautherror.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/errors/internaloautherror.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"InternalOAuthError","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":42}}},"2":{"name":"toString","line":31,"loc":{"start":{"line":31,"column":40},"end":{"line":31,"column":60}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":19}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":52}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":35}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":24}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":62}},"8":{"start":{"line":31,"column":0},"end":{"line":41,"column":2}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":23}},"10":{"start":{"line":33,"column":2},"end":{"line":39,"column":3}},"11":{"start":{"line":34,"column":4},"end":{"line":38,"column":5}},"12":{"start":{"line":35,"column":6},"end":{"line":35,"column":35}},"13":{"start":{"line":36,"column":11},"end":{"line":38,"column":5}},"14":{"start":{"line":37,"column":6},"end":{"line":37,"column":83}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":11}},"16":{"start":{"line":46,"column":0},"end":{"line":46,"column":36}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":11}},{"start":{"line":36,"column":11},"end":{"line":36,"column":11}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":15},"end":{"line":36,"column":41}},{"start":{"line":36,"column":45},"end":{"line":36,"column":65}}]}},"code":["'use strict';","","/**"," * `InternalOAuthError` error."," *"," * InternalOAuthError wraps errors generated by node-oauth.  By wrapping these"," * objects, error messages can be formatted in a manner that aids in debugging"," * OAuth issues."," *"," * @api public"," */","function InternalOAuthError(message, err) {","  Error.call(this);","  Error.captureStackTrace(this, InternalOAuthError);","  this.name = 'InternalOAuthError';","  this.message = message;","  this.oauthError = err;","}","","/**"," * Inherit from `Error`."," */","InternalOAuthError.prototype = Object.create(Error.prototype);","","/**"," * Returns a string representing the error."," *"," * @return {String}"," * @api public"," */","InternalOAuthError.prototype.toString = function toString() {","  let m = this.message;","  if (this.oauthError) {","    if (this.oauthError instanceof Error) {","      m += ` (${this.oauthError})`;","    } else if (this.oauthError.statusCode && this.oauthError.data) {","      m += `(status: ${this.oauthError.statusCode} data: ${this.oauthError.data})`;","    }","  }","  return m;","};","","/**"," * Expose `InternalOAuthError`."," */","module.exports = InternalOAuthError;",""],"l":{"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"23":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"40":0,"46":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/errors/internalopeniderror.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/errors/internalopeniderror.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"InternalOpenIDError","line":12,"loc":{"start":{"line":12,"column":0},"end":{"line":12,"column":43}}},"2":{"name":"toString","line":31,"loc":{"start":{"line":31,"column":41},"end":{"line":31,"column":61}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":18,"column":1}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":19}},"3":{"start":{"line":14,"column":2},"end":{"line":14,"column":53}},"4":{"start":{"line":15,"column":2},"end":{"line":15,"column":36}},"5":{"start":{"line":16,"column":2},"end":{"line":16,"column":25}},"6":{"start":{"line":17,"column":2},"end":{"line":17,"column":25}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":63}},"8":{"start":{"line":31,"column":0},"end":{"line":41,"column":2}},"9":{"start":{"line":32,"column":2},"end":{"line":32,"column":23}},"10":{"start":{"line":33,"column":2},"end":{"line":39,"column":3}},"11":{"start":{"line":34,"column":4},"end":{"line":38,"column":5}},"12":{"start":{"line":35,"column":6},"end":{"line":35,"column":36}},"13":{"start":{"line":36,"column":11},"end":{"line":38,"column":5}},"14":{"start":{"line":37,"column":6},"end":{"line":37,"column":55}},"15":{"start":{"line":40,"column":2},"end":{"line":40,"column":11}},"16":{"start":{"line":46,"column":0},"end":{"line":46,"column":37}}},"branchMap":{"1":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":33,"column":2}},{"start":{"line":33,"column":2},"end":{"line":33,"column":2}}]},"2":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":34,"column":4}},{"start":{"line":34,"column":4},"end":{"line":34,"column":4}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":11},"end":{"line":36,"column":11}},{"start":{"line":36,"column":11},"end":{"line":36,"column":11}}]}},"code":["'use strict';","","/**"," * `InternalOpenIDError` error."," *"," * InternalOpenIDError wraps errors generated by node-openid.  By wrapping these"," * objects, error messages can be formatted in a manner that aids in debugging"," * OpenID issues."," *"," * @api public"," */","function InternalOpenIDError(message, err) {","  Error.call(this);","  Error.captureStackTrace(this, InternalOpenIDError);","  this.name = 'InternalOpenIDError';","  this.message = message;","  this.openidError = err;","}","","/**"," * Inherit from `Error`."," */","InternalOpenIDError.prototype = Object.create(Error.prototype);","","/**"," * Returns a string representing the error."," *"," * @return {String}"," * @api public"," */","InternalOpenIDError.prototype.toString = function toString() {","  let m = this.message;","  if (this.openidError) {","    if (this.openidError instanceof Error) {","      m += ` (${this.openidError})`;","    } else if (this.openidError.message) {","      m += ` (message: '${this.openidError.message}')`;","    }","  }","  return m;","};","","/**"," * Expose `InternalOpenIDError`."," */","module.exports = InternalOpenIDError;",""],"l":{"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"23":1,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"40":0,"46":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/sessionContentHandler.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/sessionContentHandler.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1},"b":{"1":[0,0],"2":[0,0,0,0],"3":[0,0],"4":[0,0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":0,"2":0,"3":0},"fnMap":{"1":{"name":"SessionContentHandler","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":33,"column":50}}},"2":{"name":"(anonymous_2)","line":42,"loc":{"start":{"line":42,"column":60},"end":{"line":42,"column":99}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":38},"end":{"line":66,"column":76}}}},"statementMap":{"1":{"start":{"line":24,"column":0},"end":{"line":24,"column":15}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":39}},"3":{"start":{"line":33,"column":0},"end":{"line":40,"column":1}},"4":{"start":{"line":34,"column":2},"end":{"line":35,"column":83}},"5":{"start":{"line":35,"column":4},"end":{"line":35,"column":83}},"6":{"start":{"line":36,"column":2},"end":{"line":37,"column":79}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":79}},"8":{"start":{"line":38,"column":2},"end":{"line":38,"column":23}},"9":{"start":{"line":39,"column":2},"end":{"line":39,"column":29}},"10":{"start":{"line":42,"column":0},"end":{"line":64,"column":2}},"11":{"start":{"line":43,"column":2},"end":{"line":44,"column":129}},"12":{"start":{"line":44,"column":4},"end":{"line":44,"column":129}},"13":{"start":{"line":47,"column":2},"end":{"line":47,"column":76}},"14":{"start":{"line":48,"column":2},"end":{"line":49,"column":15}},"15":{"start":{"line":49,"column":4},"end":{"line":49,"column":15}},"16":{"start":{"line":52,"column":2},"end":{"line":52,"column":60}},"17":{"start":{"line":55,"column":2},"end":{"line":55,"column":69}},"18":{"start":{"line":58,"column":2},"end":{"line":59,"column":46}},"19":{"start":{"line":59,"column":4},"end":{"line":59,"column":46}},"20":{"start":{"line":60,"column":2},"end":{"line":61,"column":35}},"21":{"start":{"line":61,"column":4},"end":{"line":61,"column":35}},"22":{"start":{"line":63,"column":2},"end":{"line":63,"column":15}},"23":{"start":{"line":66,"column":0},"end":{"line":78,"column":2}},"24":{"start":{"line":67,"column":2},"end":{"line":68,"column":21}},"25":{"start":{"line":68,"column":4},"end":{"line":68,"column":21}},"26":{"start":{"line":69,"column":2},"end":{"line":70,"column":33}},"27":{"start":{"line":70,"column":4},"end":{"line":70,"column":33}},"28":{"start":{"line":71,"column":2},"end":{"line":72,"column":44}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":44}},"30":{"start":{"line":74,"column":2},"end":{"line":74,"column":49}},"31":{"start":{"line":75,"column":2},"end":{"line":75,"column":62}},"32":{"start":{"line":77,"column":2},"end":{"line":77,"column":25}},"33":{"start":{"line":80,"column":0},"end":{"line":80,"column":54}}},"branchMap":{"1":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":2},"end":{"line":34,"column":2}},{"start":{"line":34,"column":2},"end":{"line":34,"column":2}}]},"2":{"line":34,"type":"binary-expr","locations":[{"start":{"line":34,"column":6},"end":{"line":34,"column":16}},{"start":{"line":34,"column":21},"end":{"line":34,"column":50}},{"start":{"line":34,"column":54},"end":{"line":34,"column":68}},{"start":{"line":34,"column":72},"end":{"line":34,"column":91}}]},"3":{"line":36,"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":36,"column":2}},{"start":{"line":36,"column":2},"end":{"line":36,"column":2}}]},"4":{"line":36,"type":"binary-expr","locations":[{"start":{"line":36,"column":6},"end":{"line":36,"column":13}},{"start":{"line":36,"column":18},"end":{"line":36,"column":44}},{"start":{"line":36,"column":48},"end":{"line":36,"column":59}}]},"5":{"line":43,"type":"if","locations":[{"start":{"line":43,"column":2},"end":{"line":43,"column":2}},{"start":{"line":43,"column":2},"end":{"line":43,"column":2}}]},"6":{"line":47,"type":"binary-expr","locations":[{"start":{"line":47,"column":14},"end":{"line":47,"column":37}},{"start":{"line":47,"column":41},"end":{"line":47,"column":75}}]},"7":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":2},"end":{"line":48,"column":2}},{"start":{"line":48,"column":2},"end":{"line":48,"column":2}}]},"8":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":2},"end":{"line":58,"column":2}},{"start":{"line":58,"column":2},"end":{"line":58,"column":2}}]},"9":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":6},"end":{"line":58,"column":29}},{"start":{"line":58,"column":33},"end":{"line":58,"column":51}}]},"10":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":2},"end":{"line":60,"column":2}},{"start":{"line":60,"column":2},"end":{"line":60,"column":2}}]},"11":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":29}},{"start":{"line":60,"column":33},"end":{"line":60,"column":82}}]},"12":{"line":67,"type":"if","locations":[{"start":{"line":67,"column":2},"end":{"line":67,"column":2}},{"start":{"line":67,"column":2},"end":{"line":67,"column":2}}]},"13":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"14":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":2},"end":{"line":71,"column":2}},{"start":{"line":71,"column":2},"end":{"line":71,"column":2}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the \"Software\"), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","","'use restrict';","","const aadutils = require('./aadutils');","","/*"," * the handler for state/nonce/policy"," * @maxAmout          - the max amount of {state: x, nonce: x, policy: x, timeStamp: x} tuples you want to save in the session"," * @maxAge            - when a tuple in session expires in seconds"," */ ","function SessionContentHandler(maxAmount, maxAge) {","  if (!maxAmount || (typeof maxAmount !== 'number' || maxAmount <= 0 || maxAmount % 1 !== 0))","    throw new Error('SessionContentHandler: maxAmount must be a positive integer');","  if (!maxAge || (typeof maxAge !== 'number' || maxAge <= 0))","    throw new Error('SessionContentHandler: maxAge must be a positive number');","  this.maxAge = maxAge;  // seconds","  this.maxAmount = maxAmount;","}","","SessionContentHandler.prototype.findAndDeleteTupleByState = function(req, sessionKey, stateToFind) {","  if (!req.session)","    throw new Error('OIDC strategy requires session support. Did you forget to use session middleware such as express-session?');","","  // the array in session","  var array = req.session[sessionKey] && req.session[sessionKey]['content'];","  if (!array)","    array = [];","","  // remove the expired tuples in array","  aadutils.processArray(array, this.maxAmount, this.maxAge);","","  // find the tuple by state value","  var tuple = aadutils.findAndDeleteTupleByState(array, stateToFind);","","  // clear empty array, and clear the session if there is nothing inside","  if (req.session[sessionKey] && array.length === 0)","    delete req.session[sessionKey]['content'];","  if (req.session[sessionKey] && Object.keys(req.session[sessionKey]).length === 0)","    delete req.session[sessionKey];","","  return tuple;","};","","SessionContentHandler.prototype.add = function(req, sessionKey, tupleToAdd) {","  if (!req.session)","    req.session = {};","  if (!req.session[sessionKey])","    req.session[sessionKey] = {};","  if (!req.session[sessionKey]['content'])","    req.session[sessionKey]['content'] = [];","","  var array = req.session[sessionKey]['content'];","  aadutils.processArray(array, this.maxAmount-1, this.maxAge);","","  array.push(tupleToAdd);","};","","exports.SessionContentHandler = SessionContentHandler;",""],"l":{"24":1,"26":1,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"42":1,"43":0,"44":0,"47":0,"48":0,"49":0,"52":0,"55":0,"58":0,"59":0,"60":0,"61":0,"63":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"74":0,"75":0,"77":0,"80":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/cookieContentHandler.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/cookieContentHandler.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":1,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":1},"b":{"1":[0,0],"2":[0,0,0],"3":[0,0],"4":[0,0,0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"CookieContentHandler","line":36,"loc":{"start":{"line":36,"column":0},"end":{"line":36,"column":71}}},"2":{"name":"(anonymous_2)","line":61,"loc":{"start":{"line":61,"column":59},"end":{"line":61,"column":91}}},"3":{"name":"(anonymous_3)","line":97,"loc":{"start":{"line":97,"column":37},"end":{"line":97,"column":68}}},"4":{"name":"(anonymous_4)","line":131,"loc":{"start":{"line":131,"column":20},"end":{"line":131,"column":47}}},"5":{"name":"(anonymous_5)","line":141,"loc":{"start":{"line":141,"column":20},"end":{"line":141,"column":49}}}},"statementMap":{"1":{"start":{"line":24,"column":0},"end":{"line":24,"column":15}},"2":{"start":{"line":26,"column":0},"end":{"line":26,"column":31}},"3":{"start":{"line":27,"column":0},"end":{"line":27,"column":49}},"4":{"start":{"line":36,"column":0},"end":{"line":59,"column":1}},"5":{"start":{"line":37,"column":2},"end":{"line":38,"column":78}},"6":{"start":{"line":38,"column":4},"end":{"line":38,"column":78}},"7":{"start":{"line":39,"column":2},"end":{"line":39,"column":23}},"8":{"start":{"line":41,"column":2},"end":{"line":42,"column":82}},"9":{"start":{"line":42,"column":4},"end":{"line":42,"column":82}},"10":{"start":{"line":43,"column":2},"end":{"line":43,"column":29}},"11":{"start":{"line":45,"column":2},"end":{"line":46,"column":93}},"12":{"start":{"line":46,"column":4},"end":{"line":46,"column":93}},"13":{"start":{"line":48,"column":2},"end":{"line":56,"column":3}},"14":{"start":{"line":49,"column":4},"end":{"line":49,"column":39}},"15":{"start":{"line":50,"column":4},"end":{"line":51,"column":123}},"16":{"start":{"line":51,"column":6},"end":{"line":51,"column":123}},"17":{"start":{"line":52,"column":4},"end":{"line":53,"column":113}},"18":{"start":{"line":53,"column":6},"end":{"line":53,"column":113}},"19":{"start":{"line":54,"column":4},"end":{"line":55,"column":111}},"20":{"start":{"line":55,"column":6},"end":{"line":55,"column":111}},"21":{"start":{"line":58,"column":2},"end":{"line":58,"column":51}},"22":{"start":{"line":61,"column":0},"end":{"line":95,"column":2}},"23":{"start":{"line":62,"column":2},"end":{"line":63,"column":126}},"24":{"start":{"line":63,"column":4},"end":{"line":63,"column":126}},"25":{"start":{"line":65,"column":2},"end":{"line":65,"column":55}},"26":{"start":{"line":67,"column":2},"end":{"line":67,"column":19}},"27":{"start":{"line":70,"column":2},"end":{"line":92,"column":3}},"28":{"start":{"line":71,"column":4},"end":{"line":71,"column":39}},"29":{"start":{"line":72,"column":4},"end":{"line":72,"column":37}},"30":{"start":{"line":73,"column":4},"end":{"line":73,"column":35}},"31":{"start":{"line":75,"column":4},"end":{"line":91,"column":5}},"32":{"start":{"line":76,"column":6},"end":{"line":90,"column":7}},"33":{"start":{"line":77,"column":8},"end":{"line":77,"column":45}},"34":{"start":{"line":79,"column":8},"end":{"line":84,"column":9}},"35":{"start":{"line":80,"column":10},"end":{"line":80,"column":60}},"36":{"start":{"line":81,"column":10},"end":{"line":81,"column":40}},"37":{"start":{"line":83,"column":10},"end":{"line":83,"column":19}},"38":{"start":{"line":86,"column":8},"end":{"line":89,"column":9}},"39":{"start":{"line":87,"column":10},"end":{"line":87,"column":34}},"40":{"start":{"line":88,"column":10},"end":{"line":88,"column":23}},"41":{"start":{"line":94,"column":2},"end":{"line":94,"column":14}},"42":{"start":{"line":97,"column":0},"end":{"line":129,"column":2}},"43":{"start":{"line":98,"column":2},"end":{"line":98,"column":19}},"44":{"start":{"line":101,"column":2},"end":{"line":104,"column":3}},"45":{"start":{"line":102,"column":4},"end":{"line":103,"column":27}},"46":{"start":{"line":103,"column":6},"end":{"line":103,"column":27}},"47":{"start":{"line":107,"column":2},"end":{"line":116,"column":3}},"48":{"start":{"line":108,"column":4},"end":{"line":108,"column":19}},"49":{"start":{"line":110,"column":4},"end":{"line":110,"column":63}},"50":{"start":{"line":112,"column":4},"end":{"line":115,"column":5}},"51":{"start":{"line":113,"column":6},"end":{"line":113,"column":34}},"52":{"start":{"line":114,"column":6},"end":{"line":114,"column":22}},"53":{"start":{"line":120,"column":2},"end":{"line":120,"column":47}},"54":{"start":{"line":122,"column":2},"end":{"line":122,"column":42}},"55":{"start":{"line":123,"column":2},"end":{"line":123,"column":35}},"56":{"start":{"line":124,"column":2},"end":{"line":124,"column":33}},"57":{"start":{"line":126,"column":2},"end":{"line":126,"column":54}},"58":{"start":{"line":128,"column":2},"end":{"line":128,"column":112}},"59":{"start":{"line":131,"column":0},"end":{"line":139,"column":2}},"60":{"start":{"line":132,"column":2},"end":{"line":132,"column":61}},"61":{"start":{"line":134,"column":2},"end":{"line":134,"column":56}},"62":{"start":{"line":135,"column":2},"end":{"line":135,"column":35}},"63":{"start":{"line":136,"column":2},"end":{"line":136,"column":52}},"64":{"start":{"line":138,"column":2},"end":{"line":138,"column":35}},"65":{"start":{"line":141,"column":0},"end":{"line":156,"column":2}},"66":{"start":{"line":142,"column":2},"end":{"line":142,"column":35}},"67":{"start":{"line":143,"column":2},"end":{"line":144,"column":38}},"68":{"start":{"line":144,"column":4},"end":{"line":144,"column":38}},"69":{"start":{"line":147,"column":2},"end":{"line":147,"column":46}},"70":{"start":{"line":148,"column":2},"end":{"line":148,"column":46}},"71":{"start":{"line":150,"column":2},"end":{"line":150,"column":65}},"72":{"start":{"line":151,"column":2},"end":{"line":151,"column":31}},"73":{"start":{"line":152,"column":2},"end":{"line":152,"column":58}},"74":{"start":{"line":153,"column":2},"end":{"line":153,"column":39}},"75":{"start":{"line":155,"column":2},"end":{"line":155,"column":19}},"76":{"start":{"line":158,"column":0},"end":{"line":158,"column":52}}},"branchMap":{"1":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":2},"end":{"line":37,"column":2}},{"start":{"line":37,"column":2},"end":{"line":37,"column":2}}]},"2":{"line":37,"type":"binary-expr","locations":[{"start":{"line":37,"column":6},"end":{"line":37,"column":13}},{"start":{"line":37,"column":18},"end":{"line":37,"column":44}},{"start":{"line":37,"column":48},"end":{"line":37,"column":59}}]},"3":{"line":41,"type":"if","locations":[{"start":{"line":41,"column":2},"end":{"line":41,"column":2}},{"start":{"line":41,"column":2},"end":{"line":41,"column":2}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":6},"end":{"line":41,"column":16}},{"start":{"line":41,"column":21},"end":{"line":41,"column":50}},{"start":{"line":41,"column":54},"end":{"line":41,"column":68}},{"start":{"line":41,"column":72},"end":{"line":41,"column":91}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":2},"end":{"line":45,"column":2}},{"start":{"line":45,"column":2},"end":{"line":45,"column":2}}]},"6":{"line":45,"type":"binary-expr","locations":[{"start":{"line":45,"column":6},"end":{"line":45,"column":27}},{"start":{"line":45,"column":31},"end":{"line":45,"column":67}},{"start":{"line":45,"column":71},"end":{"line":45,"column":104}}]},"7":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"8":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":17}},{"start":{"line":50,"column":21},"end":{"line":50,"column":29}}]},"9":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"10":{"line":54,"type":"if","locations":[{"start":{"line":54,"column":4},"end":{"line":54,"column":4}},{"start":{"line":54,"column":4},"end":{"line":54,"column":4}}]},"11":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":2},"end":{"line":62,"column":2}},{"start":{"line":62,"column":2},"end":{"line":62,"column":2}}]},"12":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":6},"end":{"line":76,"column":6}},{"start":{"line":76,"column":6},"end":{"line":76,"column":6}}]},"13":{"line":76,"type":"binary-expr","locations":[{"start":{"line":76,"column":10},"end":{"line":76,"column":44}},{"start":{"line":76,"column":48},"end":{"line":76,"column":82}}]},"14":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":8},"end":{"line":86,"column":8}},{"start":{"line":86,"column":8},"end":{"line":86,"column":8}}]},"15":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"16":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":8},"end":{"line":102,"column":42}},{"start":{"line":102,"column":46},"end":{"line":102,"column":80}}]},"17":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":2},"end":{"line":107,"column":2}},{"start":{"line":107,"column":2},"end":{"line":107,"column":2}}]},"18":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":2},"end":{"line":143,"column":2}},{"start":{"line":143,"column":2},"end":{"line":143,"column":2}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the \"Software\"), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","","'use restrict';","","var crypto = require('crypto');","var createBuffer = require('./jwe').createBuffer;","","/*"," * the handler for state/nonce/policy"," * @maxAmount          - the max amount of {state: x, nonce: x, policy: x} tuples you want to save in cookie"," * @maxAge            - when a tuple in session expires in seconds"," * @cookieEncryptionKeys  "," *                    - keys used to encrypt and decrypt cookie"," */ ","function CookieContentHandler(maxAmount, maxAge, cookieEncryptionKeys) {","  if (!maxAge || (typeof maxAge !== 'number' || maxAge <= 0))","    throw new Error('CookieContentHandler: maxAge must be a positive number');","  this.maxAge = maxAge;  // seconds","","  if (!maxAmount || (typeof maxAmount !== 'number' || maxAmount <= 0 || maxAmount % 1 !== 0))","    throw new Error('CookieContentHandler: maxAmount must be a positive integer');","  this.maxAmount = maxAmount;","","  if (!cookieEncryptionKeys || !Array.isArray(cookieEncryptionKeys) || cookieEncryptionKeys.length === 0)","    throw new Error('CookieContentHandler: cookieEncryptionKeys must be a non-emptry array');","","  for (var i = 0; i < cookieEncryptionKeys.length; i++) {","    var item = cookieEncryptionKeys[i];","    if (!item.key || !item.iv)","      throw new Error(`CookieContentHandler: array item ${i+1} in cookieEncryptionKeys must have the form { key: , iv: }`);","    if (item.key.length !== 32)","      throw new Error(`CookieContentHandler: key number ${i+1} is ${item.key.length} bytes, expected: 32 bytes`);","    if (item.iv.length !== 12)","      throw new Error(`CookieContentHandler: iv number ${i+1} is ${item.iv.length} bytes, expected: 12 bytes`);","  }","","  this.cookieEncryptionKeys = cookieEncryptionKeys;","}","","CookieContentHandler.prototype.findAndDeleteTupleByState = function(req, res, stateToFind) {","  if (!req.cookies)","    throw new Error('Cookie is not found in request. Did you forget to use cookie parsing middleware such as cookie-parser?');","  ","  var cookieEncryptionKeys = this.cookieEncryptionKeys;","","  var tuple = null;","","  // try every key and every cookie","  for (var i = 0; i < cookieEncryptionKeys.length; i++) {","    var item = cookieEncryptionKeys[i];","    var key = createBuffer(item.key);","    var iv = createBuffer(item.iv);","","    for (var cookie in req.cookies) {     ","      if (req.cookies.hasOwnProperty(cookie) && cookie.startsWith('passport-aad.')) {","        var encrypted = cookie.substring(13);","","        try {","          var decrypted = decryptCookie(encrypted, key, iv);","          tuple = JSON.parse(decrypted);","        } catch (ex) {","          continue;","        }","","        if (tuple.state === stateToFind) {","          res.clearCookie(cookie);","          return tuple;      ","        }","      }","    }","  }","","  return null;","};","","CookieContentHandler.prototype.add = function(req, res, tupleToAdd) {","  var cookies = [];","","  // collect the related cookies","  for (var cookie in req.cookies) {     ","    if (req.cookies.hasOwnProperty(cookie) && cookie.startsWith('passport-aad.'))","      cookies.push(cookie);","  }","","  // only keep the most recent maxAmount-1 many cookies","  if (cookies.length > this.maxAmount - 1) {","    cookies.sort();","","    var numberToRemove = cookies.length - (this.maxAmount - 1);","","    for (var i = 0; i < numberToRemove; i++) {","      res.clearCookie(cookies[0]);","      cookies.shift();","    }","  }","","  // add the new cookie","","  var tupleString = JSON.stringify(tupleToAdd);","","  var item = this.cookieEncryptionKeys[0];","  var key = createBuffer(item.key);","  var iv = createBuffer(item.iv);","","  var encrypted = encryptCookie(tupleString, key, iv);","","  res.cookie('passport-aad.' + Date.now() + '.' + encrypted, 0, { maxAge: this.maxAge * 1000, httpOnly: true });","};","","var encryptCookie = function(content, key, iv) {","  var cipher = crypto.createCipheriv('aes-256-gcm', key, iv);","","  var encrypted = cipher.update(content, 'utf8', 'hex');","  encrypted += cipher.final('hex');","  var authTag = cipher.getAuthTag().toString('hex');","","  return encrypted + '.' + authTag;","};","","var decryptCookie = function(encrypted, key, iv) {","  var parts = encrypted.split('.');","  if (parts.length !== 3)","    throw new Error('invalid cookie');","","  // the first part is timestamp, ignore it","  var content = createBuffer(parts[1], 'hex');","  var authTag = createBuffer(parts[2], 'hex');","","  var decipher = crypto.createDecipheriv('aes-256-gcm', key, iv);","  decipher.setAuthTag(authTag);","  var decrypted = decipher.update(content, 'hex', 'utf8');","  decrypted +=  decipher.final('utf8');","","  return decrypted;","};","","exports.CookieContentHandler = CookieContentHandler;","",""],"l":{"24":1,"26":1,"27":1,"36":1,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"45":0,"46":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"58":0,"61":1,"62":0,"63":0,"65":0,"67":0,"70":0,"71":0,"72":0,"73":0,"75":0,"76":0,"77":0,"79":0,"80":0,"81":0,"83":0,"86":0,"87":0,"88":0,"94":0,"97":1,"98":0,"101":0,"102":0,"103":0,"107":0,"108":0,"110":0,"112":0,"113":0,"114":0,"120":0,"122":0,"123":0,"124":0,"126":0,"128":0,"131":1,"132":0,"134":0,"135":0,"136":0,"138":0,"141":1,"142":0,"143":0,"144":0,"147":0,"148":0,"150":0,"151":0,"152":0,"153":0,"155":0,"158":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/validator.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/lib/validator.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":0,"21":1,"22":1,"23":0,"24":1,"25":1,"26":0,"27":1,"28":1,"29":0,"30":1,"31":1,"32":0,"33":1,"34":1,"35":0,"36":1,"37":1,"38":0,"39":0,"40":0,"41":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0,0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"Validator","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":27}}},"2":{"name":"validate","line":34,"loc":{"start":{"line":34,"column":31},"end":{"line":34,"column":58}}}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}},"2":{"start":{"line":28,"column":0},"end":{"line":28,"column":17}},"3":{"start":{"line":30,"column":0},"end":{"line":32,"column":1}},"4":{"start":{"line":31,"column":2},"end":{"line":31,"column":23}},"5":{"start":{"line":34,"column":0},"end":{"line":54,"column":2}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":29}},"7":{"start":{"line":37,"column":2},"end":{"line":53,"column":5}},"8":{"start":{"line":38,"column":4},"end":{"line":40,"column":5}},"9":{"start":{"line":39,"column":6},"end":{"line":39,"column":55}},"10":{"start":{"line":41,"column":4},"end":{"line":41,"column":35}},"11":{"start":{"line":42,"column":4},"end":{"line":44,"column":5}},"12":{"start":{"line":43,"column":6},"end":{"line":43,"column":13}},"13":{"start":{"line":45,"column":4},"end":{"line":45,"column":32}},"14":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"15":{"start":{"line":47,"column":6},"end":{"line":47,"column":82}},"16":{"start":{"line":50,"column":4},"end":{"line":52,"column":5}},"17":{"start":{"line":51,"column":6},"end":{"line":51,"column":72}},"18":{"start":{"line":56,"column":0},"end":{"line":56,"column":36}},"19":{"start":{"line":57,"column":0},"end":{"line":62,"column":2}},"20":{"start":{"line":59,"column":4},"end":{"line":59,"column":65}},"21":{"start":{"line":64,"column":0},"end":{"line":64,"column":38}},"22":{"start":{"line":65,"column":0},"end":{"line":70,"column":2}},"23":{"start":{"line":67,"column":4},"end":{"line":67,"column":110}},"24":{"start":{"line":72,"column":0},"end":{"line":72,"column":38}},"25":{"start":{"line":73,"column":0},"end":{"line":78,"column":2}},"26":{"start":{"line":75,"column":4},"end":{"line":75,"column":54}},"27":{"start":{"line":80,"column":0},"end":{"line":80,"column":26}},"28":{"start":{"line":81,"column":0},"end":{"line":86,"column":2}},"29":{"start":{"line":83,"column":4},"end":{"line":83,"column":75}},"30":{"start":{"line":88,"column":0},"end":{"line":88,"column":34}},"31":{"start":{"line":89,"column":0},"end":{"line":94,"column":2}},"32":{"start":{"line":91,"column":4},"end":{"line":91,"column":41}},"33":{"start":{"line":96,"column":0},"end":{"line":96,"column":36}},"34":{"start":{"line":97,"column":0},"end":{"line":102,"column":2}},"35":{"start":{"line":99,"column":4},"end":{"line":99,"column":42}},"36":{"start":{"line":104,"column":0},"end":{"line":104,"column":52}},"37":{"start":{"line":105,"column":0},"end":{"line":113,"column":2}},"38":{"start":{"line":107,"column":4},"end":{"line":110,"column":18}},"39":{"start":{"line":108,"column":6},"end":{"line":108,"column":44}},"40":{"start":{"line":110,"column":6},"end":{"line":110,"column":18}},"41":{"start":{"line":115,"column":0},"end":{"line":115,"column":30}}},"branchMap":{"1":{"line":35,"type":"binary-expr","locations":[{"start":{"line":35,"column":15},"end":{"line":35,"column":22}},{"start":{"line":35,"column":26},"end":{"line":35,"column":28}}]},"2":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"3":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":4},"end":{"line":42,"column":4}},{"start":{"line":42,"column":4},"end":{"line":42,"column":4}}]},"4":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"5":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"6":{"line":59,"type":"binary-expr","locations":[{"start":{"line":59,"column":11},"end":{"line":59,"column":23}},{"start":{"line":59,"column":27},"end":{"line":59,"column":46}},{"start":{"line":59,"column":50},"end":{"line":59,"column":64}}]},"7":{"line":67,"type":"binary-expr","locations":[{"start":{"line":67,"column":11},"end":{"line":67,"column":31}},{"start":{"line":67,"column":35},"end":{"line":67,"column":60}},{"start":{"line":67,"column":64},"end":{"line":67,"column":89}},{"start":{"line":67,"column":93},"end":{"line":67,"column":109}}]},"8":{"line":75,"type":"binary-expr","locations":[{"start":{"line":75,"column":11},"end":{"line":75,"column":28}},{"start":{"line":75,"column":32},"end":{"line":75,"column":53}}]},"9":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":11},"end":{"line":83,"column":40}},{"start":{"line":83,"column":44},"end":{"line":83,"column":74}}]},"10":{"line":107,"type":"if","locations":[{"start":{"line":107,"column":4},"end":{"line":107,"column":4}},{"start":{"line":107,"column":4},"end":{"line":107,"column":4}}]}},"code":["/**"," * Copyright (c) Microsoft Corporation"," *  All Rights Reserved"," *  MIT License"," *"," * Permission is hereby granted, free of charge, to any person obtaining a copy of this"," * software and associated documentation files (the \"Software\"), to deal in the Software"," * without restriction, including without limitation the rights to use, copy, modify,"," * merge, publish, distribute, sublicense, and/or sell copies of the Software, and to"," * permit persons to whom the Software is furnished to do so, subject to the following"," * conditions:"," *"," * The above copyright notice and this permission notice shall be"," * included in all copies or substantial portions of the Software."," *"," * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,"," * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,"," * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS"," * OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,"," * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT"," * OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE."," */","","'use strict';","","const UrlValidator = require('valid-url');","","const types = {};","","function Validator(config) {","  this.config = config;","}","","Validator.prototype.validate = function validate(options) {","  const opts = options || {};","","  Object.keys(this.config).forEach((item) => {","    if (!this.config.hasOwnProperty(item)) {","      throw new TypeError(`Missing value for ${item}`);","    }","    const type = this.config[item];","    if (!type) {","      return; // no need to validate","    }","    const checker = types[type];","    if (!checker) { // missing required checker","      throw new TypeError(`No handler to validate type ${type} for item ${item}`);","    }","","    if (!checker.validate(opts[item])) {","      throw new TypeError(`Invalid value for ${item}.${checker.error}`);","    }","  });","};","","Validator.isNonEmpty = 'isNonEmpty';","types.isNonEmpty = {","  validate: (value) => {","    return value !== '' && value !== undefined && value !== null;","  },","  error: 'The value cannot be empty',","};","","Validator.isTypeLegal = 'isTypeLegal';","types.isTypeLegal = {","  validate: (value) => {","    return value === 'id_token' || value === 'id_token code' || value === 'code id_token' || value === 'code';","  },","  error: 'The responseType: must be either id_token, id_token code, code id_token or code.',","};","","Validator.isModeLegal = 'isModeLegal';","types.isModeLegal = {","  validate: (value) => {","    return value === 'query' || value === 'form_post';","  },","  error: 'The responseMode: must be either query or form_post.',","};","","Validator.isURL = 'isURL';","types.isURL = {","  validate: (value) => {","    return UrlValidator.isHttpUri(value) || UrlValidator.isHttpsUri(value);","  },","  error: 'The URL must be valid and be https:// or http://',","};","","Validator.isHttpURL = 'isHttpURL';","types.isHttpURL = {","  validate: (value) => {","    return UrlValidator.isHttpUri(value);","  },","  error: 'The URL must be valid and be http://',","};","","Validator.isHttpsURL = 'isHttpsURL';","types.isHttpsURL = {","  validate: (value) => {","    return UrlValidator.isHttpsUri(value);","  },","  error: 'The URL must be valid and be https://',","};","","Validator.isHttpsURLIfExists = 'isHttpsURLIfExists';","types.isHttpsURLIfExists = {","  validate: (value) => {","    if (value)","      return UrlValidator.isHttpsUri(value);","    else","      return true;","  },","  error: 'The URL must be valid and be https://',","};","","exports.Validator = Validator;",""],"l":{"26":1,"28":1,"30":1,"31":0,"34":1,"35":0,"37":0,"38":0,"39":0,"41":0,"42":0,"43":0,"45":0,"46":0,"47":0,"50":0,"51":0,"56":1,"57":1,"59":0,"64":1,"65":1,"67":0,"72":1,"73":1,"75":0,"80":1,"81":1,"83":0,"88":1,"89":1,"91":0,"96":1,"97":1,"99":0,"104":1,"105":1,"107":0,"108":0,"110":0,"115":1}},"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/Gruntfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-passport-azure-ad/node_modules/passport-azure-ad/Gruntfile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"loadGrunt","line":3,"loc":{"start":{"line":3,"column":17},"end":{"line":3,"column":43}}}},"statementMap":{"1":{"start":{"line":3,"column":0},"end":{"line":73,"column":2}},"2":{"start":{"line":5,"column":2},"end":{"line":48,"column":5}},"3":{"start":{"line":51,"column":2},"end":{"line":51,"column":47}},"4":{"start":{"line":52,"column":2},"end":{"line":52,"column":37}},"5":{"start":{"line":53,"column":2},"end":{"line":53,"column":44}},"6":{"start":{"line":54,"column":2},"end":{"line":54,"column":41}},"7":{"start":{"line":56,"column":2},"end":{"line":58,"column":5}},"8":{"start":{"line":57,"column":4},"end":{"line":57,"column":89}},"9":{"start":{"line":59,"column":2},"end":{"line":61,"column":5}},"10":{"start":{"line":60,"column":4},"end":{"line":60,"column":94}},"11":{"start":{"line":62,"column":2},"end":{"line":64,"column":5}},"12":{"start":{"line":63,"column":4},"end":{"line":63,"column":102}},"13":{"start":{"line":65,"column":2},"end":{"line":68,"column":5}},"14":{"start":{"line":66,"column":4},"end":{"line":66,"column":73}},"15":{"start":{"line":67,"column":4},"end":{"line":67,"column":34}},"16":{"start":{"line":69,"column":2},"end":{"line":69,"column":77}},"17":{"start":{"line":70,"column":2},"end":{"line":70,"column":164}},"18":{"start":{"line":71,"column":2},"end":{"line":71,"column":108}},"19":{"start":{"line":72,"column":2},"end":{"line":72,"column":45}}},"branchMap":{},"code":["'use strict';","","module.exports = function loadGrunt(grunt) {","  // Project configuration.","  grunt.initConfig({","    pkg: grunt.file.readJSON('package.json'),","    nodeunit: {","      files: ['test/Nodeunit_test/*_test.js'],","    },","    mochaTest: {","      test: {","        options: {","          reporter: 'spec',","          clearRequireCache: true","        },","        src: ['test/Chai-passport_test/*_test.js'],","      },","    },","    eslint: {","      options: {},","      gruntfile: {","        src: 'Gruntfile.js',","      },","      lib: {","        src: ['lib/**/*.js'],","      },","      examples: {","        src: ['examples/*/*.js'],","      },","      test: {","        src: ['test/**/*.js'],","      },","    },","    watch: {","      gruntfile: {","        files: '<%= eslint.gruntfile.src %>',","        tasks: ['eslint:gruntfile'],","      },","      lib: {","        files: '<%= eslint.lib.src %>',","        tasks: ['eslint:lib', 'nodeunit', 'mochaTest'],","      },","      test: {","        files: '<%= eslint.test.src %>',","        tasks: ['eslint:test', 'nodeunit', 'mochaTest'],","      },","    },","  });","","  // These plugins provide necessary tasks.","  grunt.loadNpmTasks('grunt-contrib-nodeunit');","  grunt.loadNpmTasks('grunt-eslint');","  grunt.loadNpmTasks('grunt-contrib-watch');","  grunt.loadNpmTasks('grunt-mocha-test');","","  grunt.registerTask('printMsg_nodeunit', () => {","    grunt.log.writeln('\\n\\n\\n======= Running tests in test/nodeunit_test =======\\n\\n\\n');","  });","  grunt.registerTask('printMsg_chai-passport', () => {","    grunt.log.writeln('\\n\\n\\n======= Running tests in test/chai-passport_test =======\\n\\n\\n');","  });","  grunt.registerTask('printMsg_end_to_end_Test', () => {","    grunt.log.writeln('\\n\\n\\n======= Running end to end tests in test/End_to_end_test =======\\n\\n\\n');","  });","  grunt.registerTask('end_to_end_test', () => {","    grunt.config('mochaTest.test.src', 'test/End_to_end_test/*_test.js');","    grunt.task.run(['mochaTest']);","  });","  grunt.registerTask('e2e', ['printMsg_end_to_end_Test', 'end_to_end_test']);","  grunt.registerTask('run_tests_with_e2e', ['printMsg_chai-passport', 'mochaTest', 'printMsg_nodeunit', 'nodeunit', 'printMsg_end_to_end_Test', 'end_to_end_test']);","  grunt.registerTask('run_tests', ['printMsg_chai-passport', 'mochaTest', 'printMsg_nodeunit', 'nodeunit']);  ","  grunt.registerTask('default', 'run_tests');","};",""],"l":{"3":1,"5":0,"51":0,"52":0,"53":0,"54":0,"56":0,"57":0,"59":0,"60":0,"62":0,"63":0,"65":0,"66":0,"67":0,"69":0,"70":0,"71":0,"72":0}}}